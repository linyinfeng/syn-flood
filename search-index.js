var searchIndex={};
searchIndex["aho_corasick"] = {"doc":"A library for finding occurrences of many patterns at…","i":[[3,"AhoCorasick","aho_corasick","An automaton for searching multiple strings in linear time.",null,null],[3,"AhoCorasickBuilder","","A builder for configuring an Aho-Corasick automaton.",null,null],[3,"FindIter","","An iterator of non-overlapping matches in a particular…",null,null],[3,"FindOverlappingIter","","An iterator of overlapping matches in a particular haystack.",null,null],[3,"StreamFindIter","","An iterator that reports Aho-Corasick matches in a stream.",null,null],[3,"Error","","An error that occurred during the construction of an…",null,null],[3,"Match","","A representation of a match reported by an Aho-Corasick…",null,null],[4,"MatchKind","","A knob for controlling the match semantics of an…",null,null],[13,"Standard","","Use standard match semantics, which support overlapping…",0,null],[13,"LeftmostFirst","","Use leftmost-first match semantics, which reports leftmost…",0,null],[13,"LeftmostLongest","","Use leftmost-longest match semantics, which reports…",0,null],[4,"ErrorKind","","The kind of error that occurred.",null,null],[13,"StateIDOverflow","","An error that occurs when constructing an automaton would…",1,null],[12,"max","aho_corasick::ErrorKind","The maximum possible state ID.",2,null],[13,"PremultiplyOverflow","aho_corasick","An error that occurs when premultiplication of state IDs…",1,null],[12,"max","aho_corasick::ErrorKind","The maximum possible state id.",3,null],[12,"requested_max","","The maximum ID required by premultiplication.",3,null],[11,"new","aho_corasick","Create a new Aho-Corasick automaton using the default…",4,[[["i"]],["ahocorasick"]]],[11,"new_auto_configured","","Build an Aho-Corasick automaton with an automatically…",4,[[],["ahocorasick"]]],[11,"is_match","","Returns true if and only if this automaton matches the…",4,[[["asref"],["self"]],["bool"]]],[11,"earliest_find","","Returns the location of the first detected match in…",4,[[["asref"],["self"]],[["option",["match"]],["match"]]]],[11,"find","","Returns the location of the first match according to the…",4,[[["asref"],["self"]],[["option",["match"]],["match"]]]],[11,"find_iter","","Returns an iterator of non-overlapping matches, using the…",4,[[["self"],["b"]],["finditer"]]],[11,"find_overlapping_iter","","Returns an iterator of overlapping matches in the given…",4,[[["self"],["b"]],["findoverlappingiter"]]],[11,"replace_all","","Replace all matches with a corresponding value in the…",4,[[["str"],["self"]],["string"]]],[11,"replace_all_bytes","","Replace all matches using raw bytes with a corresponding…",4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"replace_all_with","","Replace all matches using a closure called on each match.…",4,[[["str"],["f"],["self"],["string"]]]],[11,"replace_all_with_bytes","","Replace all matches using raw bytes with a closure called…",4,[[["vec"],["self"],["f"]]]],[11,"stream_find_iter","","Returns an iterator of non-overlapping matches in the…",4,[[["self"],["read"]],[["streamfinditer"],["read"]]]],[11,"stream_replace_all","","Search for and replace all matches of this automaton in…",4,[[["w"],["self"],["r"]],["result"]]],[11,"stream_replace_all_with","","Search the given reader and replace all matches of this…",4,[[["w"],["f"],["self"],["r"]],["result"]]],[11,"match_kind","","Returns the match kind used by this automaton.",4,[[["self"]],["matchkind"]]],[11,"max_pattern_len","","Returns the length of the longest pattern matched by this…",4,[[["self"]],["usize"]]],[11,"pattern_count","","Return the total number of patterns matched by this…",4,[[["self"]],["usize"]]],[11,"supports_overlapping","","Returns true if and only if this automaton supports…",4,[[["self"]],["bool"]]],[11,"supports_stream","","Returns true if and only if this automaton supports stream…",4,[[["self"]],["bool"]]],[11,"heap_bytes","","Returns the approximate total amount of heap used by this…",4,[[["self"]],["usize"]]],[11,"new","","Create a new builder for configuring an Aho-Corasick…",5,[[],["ahocorasickbuilder"]]],[11,"build","","Build an Aho-Corasick automaton using the configuration…",5,[[["i"],["self"]],["ahocorasick"]]],[11,"build_with_size","","Build an Aho-Corasick automaton using the configuration…",5,[[["i"],["self"]],[["error"],["result",["ahocorasick","error"]],["ahocorasick"]]]],[11,"auto_configure","","Automatically configure the settings on this builder…",5,[[["self"]],["ahocorasickbuilder"]]],[11,"match_kind","","Set the desired match semantics.",5,[[["self"],["matchkind"]],["ahocorasickbuilder"]]],[11,"anchored","","Enable anchored mode, which requires all matches to start…",5,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"ascii_case_insensitive","","Enable ASCII-aware case insensitive matching.",5,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"dense_depth","","Set the limit on how many NFA states use a dense…",5,[[["self"],["usize"]],["ahocorasickbuilder"]]],[11,"dfa","","Compile the standard Aho-Corasick automaton into a…",5,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"prefilter","","Enable heuristic prefilter optimizations.",5,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"byte_classes","","Shrink the size of the transition alphabet by mapping…",5,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"premultiply","","Premultiply state identifiers in the transition table.…",5,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"kind","","Return the kind of this error.",6,[[["self"]],["errorkind"]]],[0,"packed","","A lower level API for packed multiple substring search,…",null,null],[3,"Builder","aho_corasick::packed","A builder for constructing a packed searcher from a…",null,null],[3,"Config","","The configuration for a packed multiple pattern searcher.",null,null],[3,"FindIter","","An iterator over non-overlapping matches from a packed…",null,null],[3,"Searcher","","A packed searcher for quickly finding occurrences of…",null,null],[4,"MatchKind","","A knob for controlling the match semantics of a packed…",null,null],[13,"LeftmostFirst","","Use leftmost-first match semantics, which reports leftmost…",7,null],[13,"LeftmostLongest","","Use leftmost-longest match semantics, which reports…",7,null],[11,"new","","Create a new default configuration. A default…",8,[[],["config"]]],[11,"builder","","Create a packed builder from this configuration. The…",8,[[["self"]],["builder"]]],[11,"match_kind","","Set the match semantics for this configuration.",8,[[["matchkind"],["self"]],["config"]]],[11,"new","","Create a new builder for constructing a multi-pattern…",9,[[],["builder"]]],[11,"build","","Build a searcher from the patterns added to this builder…",9,[[["self"]],[["option",["searcher"]],["searcher"]]]],[11,"add","","Add the given pattern to this set to match.",9,[[["self"],["asref"]],["builder"]]],[11,"extend","","Add the given iterator of patterns to this set to match.",9,[[["self"],["i"]],["builder"]]],[11,"new","","A convenience function for constructing a searcher from an…",10,[[["i"]],[["option",["searcher"]],["searcher"]]]],[11,"find","","Return the first occurrence of any of the patterns in this…",10,[[["asref"],["self"]],[["option",["match"]],["match"]]]],[11,"find_at","","Return the first occurrence of any of the patterns in this…",10,[[["asref"],["usize"],["self"]],[["option",["match"]],["match"]]]],[11,"find_iter","","Return an iterator of non-overlapping occurrences of the…",10,[[["self"],["b"]],["finditer"]]],[11,"match_kind","","Returns the match kind used by this packed searcher.",10,[[["self"]],["matchkind"]]],[11,"minimum_len","","Returns the minimum length of a haystack that is required…",10,[[["self"]],["usize"]]],[11,"heap_bytes","","Returns the approximate total amount of heap used by this…",10,[[["self"]],["usize"]]],[8,"StateID","aho_corasick","A trait describing the representation of an automaton's…",null,null],[10,"from_usize","","Convert from a `usize` to this implementation's…",11,[[["usize"]],["self"]]],[10,"to_usize","","Convert this implementation's representation to a `usize`.",11,[[],["usize"]]],[10,"max_id","","Return the maximum state identifier supported by this…",11,[[],["usize"]]],[11,"pattern","","Returns the identifier of the pattern that matched.",12,[[["self"]],["usize"]]],[11,"start","","The starting position of the match.",12,[[["self"]],["usize"]]],[11,"end","","The ending position of the match.",12,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if and only if this match is empty. That is,…",12,[[["self"]],["bool"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"into_iter","","",14,[[],["i"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"into_iter","","",15,[[],["i"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","aho_corasick::packed","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"into_iter","","",16,[[],["i"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"next","aho_corasick","",13,[[["self"]],[["option",["match"]],["match"]]]],[11,"next","","",14,[[["self"]],[["option",["match"]],["match"]]]],[11,"next","","",15,[[["self"]],[["option",["result"]],["result",["match"]]]]],[11,"next","aho_corasick::packed","",16,[[["self"]],[["option",["match"]],["match"]]]],[11,"clone","aho_corasick","",4,[[["self"]],["ahocorasick"]]],[11,"clone","","",5,[[["self"]],["ahocorasickbuilder"]]],[11,"clone","","",0,[[["self"]],["matchkind"]]],[11,"clone","","",6,[[["self"]],["error"]]],[11,"clone","","",1,[[["self"]],["errorkind"]]],[11,"clone","aho_corasick::packed","",7,[[["self"]],["matchkind"]]],[11,"clone","","",8,[[["self"]],["config"]]],[11,"clone","","",9,[[["self"]],["builder"]]],[11,"clone","","",10,[[["self"]],["searcher"]]],[11,"clone","aho_corasick","",12,[[["self"]],["match"]]],[11,"default","","",5,[[],["ahocorasickbuilder"]]],[11,"default","","",0,[[],["matchkind"]]],[11,"default","aho_corasick::packed","",7,[[],["matchkind"]]],[11,"default","","",8,[[],["config"]]],[11,"default","","",9,[[],["builder"]]],[11,"eq","aho_corasick","",0,[[["self"],["matchkind"]],["bool"]]],[11,"eq","aho_corasick::packed","",7,[[["matchkind"],["self"]],["bool"]]],[11,"eq","aho_corasick","",12,[[["match"],["self"]],["bool"]]],[11,"ne","","",12,[[["match"],["self"]],["bool"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","aho_corasick::packed","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","aho_corasick","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"hash","","",12,[[["self"],["__h"]]]],[11,"description","","",6,[[["self"]],["str"]]]],"p":[[4,"MatchKind"],[4,"ErrorKind"],[13,"StateIDOverflow"],[13,"PremultiplyOverflow"],[3,"AhoCorasick"],[3,"AhoCorasickBuilder"],[3,"Error"],[4,"MatchKind"],[3,"Config"],[3,"Builder"],[3,"Searcher"],[8,"StateID"],[3,"Match"],[3,"FindIter"],[3,"FindOverlappingIter"],[3,"StreamFindIter"],[3,"FindIter"]]};
searchIndex["ansi_term"] = {"doc":"This is a library for controlling colours and formatting,…","i":[[3,"Prefix","ansi_term","Like `ANSIString`, but only displays the style prefix.",null,null],[3,"Infix","","Like `ANSIString`, but only displays the difference…",null,null],[3,"Suffix","","Like `ANSIString`, but only displays the style suffix.",null,null],[3,"Style","","A style is a collection of properties that can format a…",null,null],[12,"foreground","","The style's foreground colour, if it has one.",0,null],[12,"background","","The style's background colour, if it has one.",0,null],[12,"is_bold","","Whether this style is bold.",0,null],[12,"is_dimmed","","Whether this style is dimmed.",0,null],[12,"is_italic","","Whether this style is italic.",0,null],[12,"is_underline","","Whether this style is underlined.",0,null],[12,"is_blink","","Whether this style is blinking.",0,null],[12,"is_reverse","","Whether this style has reverse colours.",0,null],[12,"is_hidden","","Whether this style is hidden.",0,null],[12,"is_strikethrough","","Whether this style is struckthrough.",0,null],[3,"ANSIGenericString","","An `ANSIGenericString` includes a generic string type and…",null,null],[3,"ANSIGenericStrings","","A set of `ANSIGenericString`s collected together, in order…",null,null],[12,"0","","",1,null],[4,"Colour","","A colour is one specific type of ANSI escape code, and can…",null,null],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",2,null],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",2,null],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",2,null],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",2,null],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",2,null],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",2,null],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",2,null],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",2,null],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour…",2,null],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",2,null],[4,"Color","","A colour is one specific type of ANSI escape code, and can…",null,null],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",2,null],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",2,null],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",2,null],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",2,null],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",2,null],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",2,null],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",2,null],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",2,null],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour…",2,null],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",2,null],[5,"ANSIStrings","","A function to construct an `ANSIStrings` instance.",null,[[],["ansistrings"]]],[5,"ANSIByteStrings","","A function to construct an `ANSIByteStrings` instance.",null,[[],["ansibytestrings"]]],[11,"prefix","","The prefix for this style.",0,[[],["prefix"]]],[11,"infix","","The infix between this style and another.",0,[[["style"]],["infix"]]],[11,"suffix","","The suffix for this style.",0,[[],["suffix"]]],[11,"prefix","","The prefix for this colour.",2,[[],["prefix"]]],[11,"infix","","The infix between this colour and another.",2,[[["colour"]],["infix"]]],[11,"suffix","","The suffix for this colour.",2,[[],["suffix"]]],[11,"new","","Creates a new Style with no differences.",0,[[],["style"]]],[11,"bold","","Returns a `Style` with the bold property set.",0,[[["self"]],["style"]]],[11,"dimmed","","Returns a `Style` with the dimmed property set.",0,[[["self"]],["style"]]],[11,"italic","","Returns a `Style` with the italic property set.",0,[[["self"]],["style"]]],[11,"underline","","Returns a `Style` with the underline property set.",0,[[["self"]],["style"]]],[11,"blink","","Returns a `Style` with the blink property set.",0,[[["self"]],["style"]]],[11,"reverse","","Returns a `Style` with the reverse property set.",0,[[["self"]],["style"]]],[11,"hidden","","Returns a `Style` with the hidden property set.",0,[[["self"]],["style"]]],[11,"strikethrough","","Returns a `Style` with the hidden property set.",0,[[["self"]],["style"]]],[11,"fg","","Returns a `Style` with the foreground colour property set.",0,[[["colour"],["self"]],["style"]]],[11,"on","","Returns a `Style` with the background colour property set.",0,[[["colour"],["self"]],["style"]]],[11,"is_plain","","Return true if this `Style` has no actual styles, and can…",0,[[],["bool"]]],[11,"normal","","Return a `Style` with the foreground colour set to this…",2,[[],["style"]]],[11,"bold","","Returns a `Style` with the bold property set.",2,[[],["style"]]],[11,"dimmed","","Returns a `Style` with the dimmed property set.",2,[[],["style"]]],[11,"italic","","Returns a `Style` with the italic property set.",2,[[],["style"]]],[11,"underline","","Returns a `Style` with the underline property set.",2,[[],["style"]]],[11,"blink","","Returns a `Style` with the blink property set.",2,[[],["style"]]],[11,"reverse","","Returns a `Style` with the reverse property set.",2,[[],["style"]]],[11,"hidden","","Returns a `Style` with the hidden property set.",2,[[],["style"]]],[11,"strikethrough","","Returns a `Style` with the strikethrough property set.",2,[[],["style"]]],[11,"on","","Returns a `Style` with the background colour property set.",2,[[["colour"]],["style"]]],[11,"paint","","Paints the given text with this colour, returning an ANSI…",0,[[["i"]],[["toowned"],["ansigenericstring"],["sized"]]]],[11,"paint","","Paints the given text with this colour, returning an ANSI…",2,[[["i"]],[["toowned"],["ansigenericstring"],["sized"]]]],[11,"write_to","","Write an `ANSIByteString` to an `io::Write`. This writes…",3,[[["w"],["self"]],["result"]]],[11,"write_to","","Write `ANSIByteStrings` to an `io::Write`. This writes the…",1,[[["w"],["self"]],["result"]]],[6,"ANSIString","","An ANSI String is a string coupled with the `Style` to…",null,null],[6,"ANSIByteString","","An `ANSIByteString` represents a formatted series of…",null,null],[6,"ANSIStrings","","A set of `ANSIString`s collected together, in order to be…",null,null],[6,"ANSIByteStrings","","A set of `ANSIByteString`s collected together, in order to…",null,null],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","You can turn a `Colour` into a `Style` with the foreground…",0,[[["colour"]],["style"]]],[11,"from","","",3,[[["i"]],["ansigenericstring"]]],[11,"clone","","",4,[[["self"]],["prefix"]]],[11,"clone","","",5,[[["self"]],["infix"]]],[11,"clone","","",6,[[["self"]],["suffix"]]],[11,"clone","","",0,[[["self"]],["style"]]],[11,"clone","","",2,[[["self"]],["colour"]]],[11,"clone","","",3,[[["self"]],["ansigenericstring"]]],[11,"default","","Returns a style with no properties set. Formatting text…",0,[[],["style"]]],[11,"eq","","",0,[[["style"],["self"]],["bool"]]],[11,"ne","","",0,[[["style"],["self"]],["bool"]]],[11,"eq","","",2,[[["colour"],["self"]],["bool"]]],[11,"ne","","",2,[[["colour"],["self"]],["bool"]]],[11,"eq","","",3,[[["ansigenericstring"],["self"]],["bool"]]],[11,"ne","","",3,[[["ansigenericstring"],["self"]],["bool"]]],[11,"deref","","",3,[[["self"]],["s"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"write_to","","Write an `ANSIByteString` to an `io::Write`. This writes…",9,[[["w"],["self"]],["result"]]],[11,"write_to","","Write `ANSIByteStrings` to an `io::Write`. This writes the…",10,[[["w"],["self"]],["result"]]]],"p":[[3,"Style"],[3,"ANSIGenericStrings"],[4,"Colour"],[3,"ANSIGenericString"],[3,"Prefix"],[3,"Infix"],[3,"Suffix"],[6,"ANSIString"],[6,"ANSIStrings"],[6,"ANSIByteString"],[6,"ANSIByteStrings"]]};
searchIndex["atty"] = {"doc":"atty is a simple utility that answers one question > is…","i":[[4,"Stream","atty","possible stream sources",null,null],[13,"Stdout","","",0,null],[13,"Stderr","","",0,null],[13,"Stdin","","",0,null],[5,"is","","returns true if this is a tty",null,[[["stream"]],["bool"]]],[5,"isnt","","returns true if this is not a tty",null,[[["stream"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"clone","","",0,[[["self"]],["stream"]]]],"p":[[4,"Stream"]]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator useful for sets of…","i":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",null,null]],"p":[]};
searchIndex["c2_chacha"] = {"doc":"Pure Rust ChaCha with SIMD optimizations.","i":[[0,"guts","c2_chacha","",null,null],[8,"Machine","c2_chacha::guts","",null,null],[16,"u32x4","","",0,null],[16,"u64x2","","",0,null],[16,"u128x1","","",0,null],[16,"u32x4x2","","",0,null],[16,"u64x2x2","","",0,null],[16,"u64x4","","",0,null],[16,"u128x2","","",0,null],[16,"u32x4x4","","",0,null],[16,"u64x2x4","","",0,null],[16,"u128x4","","",0,null],[11,"unpack","","",0,[[["s"]],["v"]]],[11,"vec","","",0,[[["a"]],["v"]]],[11,"read_le","","",0,[[],["v"]]],[11,"read_be","","",0,[[],["v"]]],[10,"instance","","",0,[[],["self"]]],[3,"ChaCha","","",null,null],[3,"State","","",null,null],[11,"new","","",1,[[],["self"]]],[11,"refill4","","Produce 4 blocks of output, advancing the state",1,[[["self"],["u32"]]]],[11,"refill","","Produce a block of output, advancing the state",1,[[["self"],["u32"]]]],[11,"set_stream_param","","",1,[[["self"],["u32"],["u64"]]]],[11,"get_stream_param","","",1,[[["u32"],["self"]],["u64"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"clone","","",1,[[["self"]],["chacha"]]],[11,"clone","","",2,[[["self"]],["state"]]]],"p":[[8,"Machine"],[3,"ChaCha"],[3,"State"]]};
searchIndex["cfg_if"] = {"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate…",null,null]],"p":[]};
searchIndex["clap"] = {"doc":"`clap` is a simple-to-use, efficient, and full-featured…","i":[[3,"Arg","clap","The abstract representation of a command line argument.…",null,null],[3,"ArgGroup","","`ArgGroup`s are a family of related [arguments] and way…",null,null],[3,"ArgMatches","","Used to get information about the arguments that where…",null,null],[3,"OsValues","","An iterator for getting multiple values out of an argument…",null,null],[3,"SubCommand","","The abstract representation of a command line subcommand.",null,null],[3,"Values","","An iterator for getting multiple values out of an argument…",null,null],[3,"App","","Used to create a representation of a command line program…",null,null],[3,"Error","","Command Line Argument Parser Error",null,null],[12,"message","","Formatted error message",0,null],[12,"kind","","The type of error",0,null],[12,"info","","Any additional information passed along, such as the…",0,null],[4,"ArgSettings","","Various settings that apply to arguments and may be set,…",null,null],[13,"Required","","The argument must be used",1,null],[13,"Multiple","","The argument may be used multiple times such as `--flag…",1,null],[13,"EmptyValues","","The argument allows empty values such as `--option \"\"`",1,null],[13,"Global","","The argument should be propagated down through all child…",1,null],[13,"Hidden","","The argument should not be shown in help text",1,null],[13,"TakesValue","","The argument accepts a value, such as `--option <value>`",1,null],[13,"UseValueDelimiter","","Determines if the argument allows values to be grouped via…",1,null],[13,"NextLineHelp","","Prints the help text on the line after the argument",1,null],[13,"RequireDelimiter","","Requires the use of a value delimiter for all multiple…",1,null],[13,"HidePossibleValues","","Hides the possible values from the help string",1,null],[13,"AllowLeadingHyphen","","Allows vals that start with a '-'",1,null],[13,"RequireEquals","","Require options use `--option=val` syntax",1,null],[13,"Last","","Specifies that the arg is the last positional argument and…",1,null],[13,"HideDefaultValue","","Hides the default value from the help string",1,null],[13,"CaseInsensitive","","Makes `Arg::possible_values` case insensitive",1,null],[13,"HideEnvValues","","Hides ENV values in the help message",1,null],[13,"HiddenShortHelp","","The argument should not be shown in short help text",1,null],[13,"HiddenLongHelp","","The argument should not be shown in long help text",1,null],[4,"AppSettings","","Application level settings, which affect how [`App`]…",null,null],[13,"AllowInvalidUtf8","","Specifies that any invalid UTF-8 code points should not be…",2,null],[13,"AllArgsOverrideSelf","","Essentially sets [`Arg::overrides_with(\"itself\")`] for all…",2,null],[13,"AllowLeadingHyphen","","Specifies that leading hyphens are allowed in argument…",2,null],[13,"AllowNegativeNumbers","","Allows negative numbers to pass as values. This is similar…",2,null],[13,"AllowMissingPositional","","Allows one to implement two styles of CLIs where…",2,null],[13,"AllowExternalSubcommands","","Specifies that an unexpected positional argument, which…",2,null],[13,"ArgsNegateSubcommands","","Specifies that use of a valid [argument] negates…",2,null],[13,"ArgRequiredElseHelp","","Specifies that the help text should be displayed (and then…",2,null],[13,"ColoredHelp","","Uses colorized help messages.",2,null],[13,"ColorAuto","","Enables colored output only when the output is going to a…",2,null],[13,"ColorAlways","","Enables colored output regardless of whether or not the…",2,null],[13,"ColorNever","","Disables colored output no matter if the output is going…",2,null],[13,"DontCollapseArgsInUsage","","Disables the automatic collapsing of positional args into…",2,null],[13,"DontDelimitTrailingValues","","Disables the automatic delimiting of values when `--` or…",2,null],[13,"DisableHelpFlags","","Disables `-h` and `--help` [`App`] without affecting any…",2,null],[13,"DisableHelpSubcommand","","Disables the `help` subcommand",2,null],[13,"DisableVersion","","Disables `-V` and `--version` [`App`] without affecting…",2,null],[13,"DeriveDisplayOrder","","Displays the arguments and [`SubCommand`]s in the help…",2,null],[13,"GlobalVersion","","Specifies to use the version of the current command for…",2,null],[13,"Hidden","","Specifies that this [`SubCommand`] should be hidden from…",2,null],[13,"HidePossibleValuesInHelp","","Tells `clap` not to print possible values when displaying…",2,null],[13,"InferSubcommands","","Tries to match unknown args to partial [`subcommands`] or…",2,null],[13,"NoBinaryName","","Specifies that the parser should not assume the first…",2,null],[13,"NextLineHelp","","Places the help string for all arguments on the line after…",2,null],[13,"PropagateGlobalValuesDown","","DEPRECATED: This setting is no longer required in order to…",2,null],[13,"SubcommandsNegateReqs","","Allows [`SubCommand`]s to override all requirements of the…",2,null],[13,"SubcommandRequiredElseHelp","","Specifies that the help text should be displayed (before…",2,null],[13,"StrictUtf8","","Specifies that any invalid UTF-8 code points should be…",2,null],[13,"SubcommandRequired","","Allows specifying that if no [`SubCommand`] is present at…",2,null],[13,"TrailingVarArg","","Specifies that the final positional argument is a \"VarArg\"…",2,null],[13,"UnifiedHelpMessage","","Groups flags and options together, presenting a more…",2,null],[13,"VersionlessSubcommands","","Disables `-V` and `--version` for all [`SubCommand`]s…",2,null],[13,"WaitOnError","","Will display a message \"Press [ENTER]/[RETURN] to…",2,null],[4,"ErrorKind","","Command line argument parser kind of error",null,null],[13,"InvalidValue","","Occurs when an [`Arg`] has a set of possible values, and…",3,null],[13,"UnknownArgument","","Occurs when a user provides a flag, option, argument or…",3,null],[13,"InvalidSubcommand","","Occurs when the user provides an unrecognized…",3,null],[13,"UnrecognizedSubcommand","","Occurs when the user provides an unrecognized…",3,null],[13,"EmptyValue","","Occurs when the user provides an empty value for an option…",3,null],[13,"ValueValidation","","Occurs when the user provides a value for an argument with…",3,null],[13,"TooManyValues","","Occurs when a user provides more values for an argument…",3,null],[13,"TooFewValues","","Occurs when the user provides fewer values for an argument…",3,null],[13,"WrongNumberOfValues","","Occurs when the user provides a different number of values…",3,null],[13,"ArgumentConflict","","Occurs when the user provides two values which conflict…",3,null],[13,"MissingRequiredArgument","","Occurs when the user does not provide one or more required…",3,null],[13,"MissingSubcommand","","Occurs when a subcommand is required (as defined by…",3,null],[13,"MissingArgumentOrSubcommand","","Occurs when either an argument or [`SubCommand`] is…",3,null],[13,"UnexpectedMultipleUsage","","Occurs when the user provides multiple values to an…",3,null],[13,"InvalidUtf8","","Occurs when the user provides a value containing invalid…",3,null],[13,"HelpDisplayed","","Not a true \"error\" as it means `--help` or similar was…",3,null],[13,"VersionDisplayed","","Not a true \"error\" as it means `--version` or similar was…",3,null],[13,"ArgumentNotFound","","Occurs when using the [`value_t!`] and [`values_t!`]…",3,null],[13,"Io","","Represents an [I/O error]. Can occur when writing to…",3,null],[13,"Format","","Represents a [Format error] (which is a part of…",3,null],[4,"Shell","","Describes which shell to produce a completions file for",null,null],[13,"Bash","","Generates a .bash completion file for the Bourne Again…",4,null],[13,"Fish","","Generates a .fish completion file for the Friendly…",4,null],[13,"Zsh","","Generates a completion file for the Z SHell (ZSH)",4,null],[13,"PowerShell","","Generates a completion file for PowerShell",4,null],[13,"Elvish","","Generates a completion file for Elvish",4,null],[11,"new","","Creates a new instance of an application requiring a name.…",5,[[["string"],["into",["string"]]],["self"]]],[11,"get_name","","Get the name of the app",5,[[["self"]],["str"]]],[11,"get_bin_name","","Get the name of the binary",5,[[["self"]],[["option",["str"]],["str"]]]],[11,"with_defaults","","Creates a new instance of an application requiring a name,…",5,[[["string"],["into",["string"]]],["self"]]],[11,"author","","Sets a string of author(s) that will be displayed to the…",5,[[["str"],["into",["str"]]],["self"]]],[11,"bin_name","","Overrides the system-determined binary name. This should…",5,[[["string"],["into",["string"]]],["self"]]],[11,"about","","Sets a string describing what the program does. This will…",5,[[["str"],["into",["str"]]],["self"]]],[11,"long_about","","Sets a string describing what the program does. This will…",5,[[["str"],["into",["str"]]],["self"]]],[11,"name","","Sets the program's name. This will be displayed when…",5,[[["string"],["into",["string"]]],["self"]]],[11,"after_help","","Adds additional help information to be displayed in…",5,[[["str"],["into",["str"]]],["self"]]],[11,"before_help","","Adds additional help information to be displayed in…",5,[[["str"],["into",["str"]]],["self"]]],[11,"version","","Sets a string of the version number to be displayed when…",5,[[["str"],["into",["str"]]],["self"]]],[11,"long_version","","Sets a string of the version number to be displayed when…",5,[[["str"],["into",["str"]]],["self"]]],[11,"usage","","Sets a custom usage string to override the auto-generated…",5,[[["str"],["into",["str"]]],["self"]]],[11,"help","","Sets a custom help message and overrides the…",5,[[["str"],["into",["str"]]],["self"]]],[11,"help_short","","Sets the [`short`] for the auto-generated `help` argument.",5,[[["str"],["asref",["str"]]],["self"]]],[11,"version_short","","Sets the [`short`] for the auto-generated `version`…",5,[[["str"],["asref",["str"]]],["self"]]],[11,"help_message","","Sets the help text for the auto-generated `help` argument.",5,[[["str"],["into",["str"]]],["self"]]],[11,"version_message","","Sets the help text for the auto-generated `version`…",5,[[["str"],["into",["str"]]],["self"]]],[11,"template","","Sets the help template to be used, overriding the default…",5,[[["str"],["into",["str"]]],["self"]]],[11,"setting","","Enables a single command, or [`SubCommand`], level settings.",5,[[["appsettings"]],["self"]]],[11,"settings","","Enables multiple command, or [`SubCommand`], level settings",5,[[],["self"]]],[11,"global_setting","","Enables a single setting that is propagated down through…",5,[[["appsettings"]],["self"]]],[11,"global_settings","","Enables multiple settings which are propagated down…",5,[[],["self"]]],[11,"unset_setting","","Disables a single command, or [`SubCommand`], level setting.",5,[[["appsettings"]],["self"]]],[11,"unset_settings","","Disables multiple command, or [`SubCommand`], level…",5,[[],["self"]]],[11,"set_term_width","","Sets the terminal width at which to wrap help messages.…",5,[[["usize"]],["self"]]],[11,"max_term_width","","Sets the max terminal width at which to wrap help…",5,[[["usize"]],["self"]]],[11,"arg","","Adds an [argument] to the list of valid possibilities.",5,[[["into",["arg"]],["arg"]],["self"]]],[11,"args","","Adds multiple [arguments] to the list of valid possibilities",5,[[],["self"]]],[11,"arg_from_usage","","A convenience method for adding a single [argument] from a…",5,[[["str"]],["self"]]],[11,"args_from_usage","","Adds multiple [arguments] at once from a usage string, one…",5,[[["str"]],["self"]]],[11,"alias","","Allows adding a [`SubCommand`] alias, which function as…",5,[[["str"],["into",["str"]]],["self"]]],[11,"aliases","","Allows adding [`SubCommand`] aliases, which function as…",5,[[],["self"]]],[11,"visible_alias","","Allows adding a [`SubCommand`] alias that functions…",5,[[["str"],["into",["str"]]],["self"]]],[11,"visible_aliases","","Allows adding multiple [`SubCommand`] aliases that…",5,[[],["self"]]],[11,"group","","Adds an [`ArgGroup`] to the application. [`ArgGroup`]s are…",5,[[["arggroup"]],["self"]]],[11,"groups","","Adds multiple [`ArgGroup`]s to the [`App`] at once.",5,[[],["self"]]],[11,"subcommand","","Adds a [`SubCommand`] to the list of valid possibilities.…",5,[[["app"]],["self"]]],[11,"subcommands","","Adds multiple subcommands to the list of valid…",5,[[["i"]],["self"]]],[11,"display_order","","Allows custom ordering of [`SubCommand`]s within the help…",5,[[["usize"]],["self"]]],[11,"print_help","","Prints the full help message to [`io::stdout()`] using a…",5,[[["self"]],["clapresult"]]],[11,"print_long_help","","Prints the full help message to [`io::stdout()`] using a…",5,[[["self"]],["clapresult"]]],[11,"write_help","","Writes the full help message to the user to a…",5,[[["w"],["self"]],["clapresult"]]],[11,"write_long_help","","Writes the full help message to the user to a…",5,[[["w"],["self"]],["clapresult"]]],[11,"write_version","","Writes the version message to the user to a [`io::Write`]…",5,[[["w"],["self"]],["clapresult"]]],[11,"write_long_version","","Writes the version message to the user to a [`io::Write`]…",5,[[["w"],["self"]],["clapresult"]]],[11,"gen_completions","","Generate a completions file for a specified shell at…",5,[[["string"],["shell"],["into",["osstring"]],["osstring"],["self"],["into",["string"]]]]],[11,"gen_completions_to","","Generate a completions file for a specified shell at…",5,[[["string"],["shell"],["w"],["self"],["into",["string"]]]]],[11,"get_matches","","Starts the parsing process, upon a failed parse an error…",5,[[],["argmatches"]]],[11,"get_matches_safe","","Starts the parsing process. This method will return a…",5,[[],[["clapresult",["argmatches"]],["argmatches"]]]],[11,"get_matches_from","","Starts the parsing process. Like [`App::get_matches`] this…",5,[[["i"]],["argmatches"]]],[11,"get_matches_from_safe","","Starts the parsing process. A combination of…",5,[[["i"]],[["clapresult",["argmatches"]],["argmatches"]]]],[11,"get_matches_from_safe_borrow","","Starts the parsing process without consuming the [`App`]…",5,[[["self"],["i"]],[["clapresult",["argmatches"]],["argmatches"]]]],[11,"with_name","","Creates a new instance of [`Arg`] using a unique string…",6,[[["str"]],["self"]]],[11,"from_usage","","Creates a new instance of [`Arg`] from a usage string.…",6,[[["str"]],["self"]]],[11,"short","","Sets the short version of the argument without the…",6,[[["str"],["asref",["str"]]],["self"]]],[11,"long","","Sets the long version of the argument without the…",6,[[["str"]],["self"]]],[11,"alias","","Allows adding a [`Arg`] alias, which function as \"hidden\"…",6,[[["str"],["into",["str"]]],["self"]]],[11,"aliases","","Allows adding [`Arg`] aliases, which function as \"hidden\"…",6,[[],["self"]]],[11,"visible_alias","","Allows adding a [`Arg`] alias that functions exactly like…",6,[[["str"],["into",["str"]]],["self"]]],[11,"visible_aliases","","Allows adding multiple [`Arg`] aliases that functions…",6,[[],["self"]]],[11,"help","","Sets the short help text of the argument that will be…",6,[[["str"]],["self"]]],[11,"long_help","","Sets the long help text of the argument that will be…",6,[[["str"]],["self"]]],[11,"last","","Specifies that this arg is the last, or final, positional…",6,[[["bool"]],["self"]]],[11,"required","","Sets whether or not the argument is required by default.…",6,[[["bool"]],["self"]]],[11,"require_equals","","Requires that options use the `--option=val` syntax (i.e.…",6,[[["bool"]],["self"]]],[11,"allow_hyphen_values","","Allows values which start with a leading hyphen (`-`)",6,[[["bool"]],["self"]]],[11,"required_unless","","Sets an arg that override this arg's required setting.…",6,[[["str"]],["self"]]],[11,"required_unless_all","","Sets args that override this arg's required setting. (i.e.…",6,[[],["self"]]],[11,"required_unless_one","","Sets args that override this arg's [required] setting.…",6,[[],["self"]]],[11,"conflicts_with","","Sets a conflicting argument by name. I.e. when using this…",6,[[["str"]],["self"]]],[11,"conflicts_with_all","","The same as [`Arg::conflicts_with`] but allows specifying…",6,[[],["self"]]],[11,"overrides_with","","Sets a overridable argument by name. I.e. this argument…",6,[[["str"]],["self"]]],[11,"overrides_with_all","","Sets multiple mutually overridable arguments by name. I.e.…",6,[[],["self"]]],[11,"requires","","Sets an argument by name that is required when this one is…",6,[[["str"]],["self"]]],[11,"requires_if","","Allows a conditional requirement. The requirement will…",6,[[["str"],["str"]],["self"]]],[11,"requires_ifs","","Allows multiple conditional requirements. The requirement…",6,[[],["self"]]],[11,"required_if","","Allows specifying that an argument is [required]…",6,[[["str"],["str"]],["self"]]],[11,"required_ifs","","Allows specifying that an argument is [required] based on…",6,[[],["self"]]],[11,"requires_all","","Sets multiple arguments by names that are required when…",6,[[],["self"]]],[11,"takes_value","","Specifies that the argument takes a value at run time.",6,[[["bool"]],["self"]]],[11,"hide_possible_values","","Specifies if the possible values of an argument should be…",6,[[["bool"]],["self"]]],[11,"hide_default_value","","Specifies if the default value of an argument should be…",6,[[["bool"]],["self"]]],[11,"index","","Specifies the index of a positional argument starting at 1.",6,[[["u64"]],["self"]]],[11,"multiple","","Specifies that the argument may appear more than once. For…",6,[[["bool"]],["self"]]],[11,"value_terminator","","Specifies a value that stops parsing multiple values of a…",6,[[["str"]],["self"]]],[11,"global","","Specifies that an argument can be matched to all child…",6,[[["bool"]],["self"]]],[11,"empty_values","","Allows an argument to accept explicitly empty values. An…",6,[[["bool"]],["self"]]],[11,"hidden","","Hides an argument from help message output.",6,[[["bool"]],["self"]]],[11,"possible_values","","Specifies a list of possible values for this argument. At…",6,[[],["self"]]],[11,"possible_value","","Specifies a possible value for this argument, one at a…",6,[[["str"]],["self"]]],[11,"case_insensitive","","When used with [`Arg::possible_values`] it allows the…",6,[[["bool"]],["self"]]],[11,"group","","Specifies the name of the [`ArgGroup`] the argument…",6,[[["str"]],["self"]]],[11,"groups","","Specifies the names of multiple [`ArgGroup`]'s the…",6,[[],["self"]]],[11,"number_of_values","","Specifies how many values are required to satisfy this…",6,[[["u64"]],["self"]]],[11,"validator","","Allows one to perform a custom validation on the argument…",6,[[["f"]],["self"]]],[11,"validator_os","","Works identically to Validator but is intended to be used…",6,[[["f"]],["self"]]],[11,"max_values","","Specifies the maximum number of values are for this…",6,[[["u64"]],["self"]]],[11,"min_values","","Specifies the minimum number of values for this argument.…",6,[[["u64"]],["self"]]],[11,"use_delimiter","","Specifies whether or not an argument should allow grouping…",6,[[["bool"]],["self"]]],[11,"require_delimiter","","Specifies that multiple values may only be set using the…",6,[[["bool"]],["self"]]],[11,"value_delimiter","","Specifies the separator to use when values are clumped…",6,[[["str"]],["self"]]],[11,"value_names","","Specify multiple names for values of option arguments.…",6,[[],["self"]]],[11,"value_name","","Specifies the name for value of [option] or [positional]…",6,[[["str"]],["self"]]],[11,"default_value","","Specifies the value of the argument when not specified at…",6,[[["str"]],["self"]]],[11,"default_value_os","","Provides a default value in the exact same manner as…",6,[[["osstr"]],["self"]]],[11,"default_value_if","","Specifies the value of the argument if `arg` has been used…",6,[[["str"],["str"],["option",["str"]]],["self"]]],[11,"default_value_if_os","","Provides a conditional default value in the exact same…",6,[[["option",["osstr"]],["str"],["osstr"]],["self"]]],[11,"default_value_ifs","","Specifies multiple values and conditions in the same…",6,[[],["self"]]],[11,"default_value_ifs_os","","Provides multiple conditional default values in the exact…",6,[[],["self"]]],[11,"env","","Specifies that if the value is not passed in as an…",6,[[["str"]],["self"]]],[11,"env_os","","Specifies that if the value is not passed in as an…",6,[[["osstr"]],["self"]]],[11,"hide_env_values","","@TODO @p2 @docs @release: write docs",6,[[["bool"]],["self"]]],[11,"next_line_help","","When set to `true` the help string will be displayed on…",6,[[["bool"]],["self"]]],[11,"display_order","","Allows custom ordering of args within the help message.…",6,[[["usize"]],["self"]]],[11,"raw","","Indicates that all parameters passed after this should not…",6,[[["bool"]],["self"]]],[11,"hidden_short_help","","Hides an argument from short help message output.",6,[[["bool"]],["self"]]],[11,"hidden_long_help","","Hides an argument from long help message output.",6,[[["bool"]],["self"]]],[11,"is_set","","Checks if one of the [`ArgSettings`] settings is set for…",6,[[["argsettings"],["self"]],["bool"]]],[11,"set","","Sets one of the [`ArgSettings`] settings for the argument.",6,[[["argsettings"]],["self"]]],[11,"unset","","Unsets one of the [`ArgSettings`] settings for the argument.",6,[[["argsettings"]],["self"]]],[11,"value_of","","Gets the value of a specific [option] or [positional]…",7,[[["str"],["asref",["str"]],["self"]],[["option",["str"]],["str"]]]],[11,"value_of_lossy","","Gets the lossy value of a specific argument. If the…",7,[[["str"],["asref",["str"]],["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"value_of_os","","Gets the OS version of a string value of a specific…",7,[[["str"],["asref",["str"]],["self"]],[["osstr"],["option",["osstr"]]]]],[11,"values_of","","Gets a [`Values`] struct which implements [`Iterator`] for…",7,[[["str"],["asref",["str"]],["self"]],[["option",["values"]],["values"]]]],[11,"values_of_lossy","","Gets the lossy values of a specific argument. If the…",7,[[["str"],["asref",["str"]],["self"]],[["vec",["string"]],["option",["vec"]]]]],[11,"values_of_os","","Gets a [`OsValues`] struct which is implements…",7,[[["str"],["asref",["str"]],["self"]],[["osvalues"],["option",["osvalues"]]]]],[11,"is_present","","Returns `true` if an argument was present at runtime,…",7,[[["str"],["asref",["str"]],["self"]],["bool"]]],[11,"occurrences_of","","Returns the number of times an argument was used at…",7,[[["str"],["asref",["str"]],["self"]],["u64"]]],[11,"index_of","","Gets the starting index of the argument in respect to all…",7,[[["str"],["asref",["str"]],["self"]],[["option",["usize"]],["usize"]]]],[11,"indices_of","","Gets all indices of the argument in respect to all other…",7,[[["str"],["asref",["str"]],["self"]],[["option",["indices"]],["indices"]]]],[11,"subcommand_matches","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\"…",7,[[["str"],["asref",["str"]],["self"]],[["option",["argmatches"]],["argmatches"]]]],[11,"subcommand_name","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\"…",7,[[["self"]],[["option",["str"]],["str"]]]],[11,"subcommand","","This brings together [`ArgMatches::subcommand_matches`]…",7,[[["self"]]]],[11,"usage","","Returns a string slice of the usage statement for the…",7,[[["self"]],["str"]]],[11,"with_name","","Creates a new instance of a subcommand requiring a name.…",8,[[["str"]],["app"]]],[11,"with_name","","Creates a new instance of `ArgGroup` using a unique string…",9,[[["str"]],["self"]]],[11,"arg","","Adds an [argument] to this group by name",9,[[["str"]],["self"]]],[11,"args","","Adds multiple [arguments] to this group by name",9,[[],["self"]]],[11,"multiple","","Allows more than one of the ['Arg']s in this group to be…",9,[[["bool"]],["self"]]],[11,"required","","Sets the group as required or not. A required group will…",9,[[["bool"]],["self"]]],[11,"requires","","Sets the requirement rules of this group. This is not to…",9,[[["str"]],["self"]]],[11,"requires_all","","Sets the requirement rules of this group. This is not to…",9,[[],["self"]]],[11,"conflicts_with","","Sets the exclusion rules of this group. Exclusion (aka…",9,[[["str"]],["self"]]],[11,"conflicts_with_all","","Sets the exclusion rules of this group. Exclusion rules…",9,[[],["self"]]],[11,"use_stderr","","Should the message be written to `stdout` or not",0,[[["self"]],["bool"]]],[11,"exit","","Prints the error to `stderr` and exits with a status of `1`",0,[[["self"]]]],[11,"with_description","","Create an error with a custom description.",0,[[["str"],["errorkind"]],["self"]]],[11,"variants","","A list of possible variants in `&'static str` form",4,[[]]],[6,"Result","","Short hand for [`Result`] type",null,null],[14,"value_t","","Convenience macro getting a typed value `T` where `T`…",null,null],[14,"value_t_or_exit","","Convenience macro getting a typed value `T` where `T`…",null,null],[14,"values_t","","Convenience macro getting a typed value [`Vec<T>`] where…",null,null],[14,"values_t_or_exit","","Convenience macro getting a typed value [`Vec<T>`] where…",null,null],[14,"_clap_count_exprs","","Counts the number of comma-delimited expressions passed to…",null,null],[14,"arg_enum","","Convenience macro to generate more complete enums with…",null,null],[14,"crate_version","","Allows you to pull the version from your Cargo.toml at…",null,null],[14,"crate_authors","","Allows you to pull the authors for the app from your…",null,null],[14,"crate_description","","Allows you to pull the description from your Cargo.toml at…",null,null],[14,"crate_name","","Allows you to pull the name from your Cargo.toml at…",null,null],[14,"app_from_crate","","Allows you to build the `App` instance from your…",null,null],[14,"clap_app","","Build `App`, `Arg`s, `SubCommand`s and `Group`s with…",null,null],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",6,[[["arg"]],["self"]]],[11,"from","","",9,[[["arggroup"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"next_back","","",11,[[["self"]],[["option",["str"]],["str"]]]],[11,"next_back","","",10,[[["self"]],[["osstr"],["option",["osstr"]]]]],[11,"next","","",11,[[["self"]],[["option",["str"]],["str"]]]],[11,"size_hint","","",11,[[["self"]]]],[11,"next","","",10,[[["self"]],[["osstr"],["option",["osstr"]]]]],[11,"size_hint","","",10,[[["self"]]]],[11,"clone","","",2,[[["self"]],["appsettings"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["arg"]]],[11,"clone","","",7,[[["self"]],["argmatches"]]],[11,"clone","","",11,[[["self"]],["values"]]],[11,"clone","","",10,[[["self"]],["osvalues"]]],[11,"clone","","",8,[[["self"]],["subcommand"]]],[11,"clone","","",9,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["argsettings"]]],[11,"clone","","",3,[[["self"]],["errorkind"]]],[11,"clone","","",4,[[["self"]],["shell"]]],[11,"default","","",6,[[],["arg"]]],[11,"default","","",7,[[],["self"]]],[11,"default","","",11,[[],["self"]]],[11,"default","","",10,[[],["self"]]],[11,"default","","",9,[[],["arggroup"]]],[11,"eq","","",2,[[["self"],["appsettings"]],["bool"]]],[11,"eq","","",6,[[["self"],["arg"]],["bool"]]],[11,"eq","","",1,[[["argsettings"],["self"]],["bool"]]],[11,"eq","","",3,[[["errorkind"],["self"]],["bool"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"from_str","","",2,[[["str"]],["result"]]],[11,"from_str","","",1,[[["str"]],["result"]]],[11,"from_str","","",4,[[["str"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]]],"p":[[3,"Error"],[4,"ArgSettings"],[4,"AppSettings"],[4,"ErrorKind"],[4,"Shell"],[3,"App"],[3,"Arg"],[3,"ArgMatches"],[3,"SubCommand"],[3,"ArgGroup"],[3,"OsValues"],[3,"Values"]]};
searchIndex["env_logger"] = {"doc":"A simple logger configured via environment variables which…","i":[[3,"Env","env_logger","Set of environment variables to configure from.",null,null],[3,"Logger","","The env logger.",null,null],[3,"Builder","","`Builder` acts as builder for initializing a `Logger`.",null,null],[4,"Target","","Log target, either `stdout` or `stderr`.",null,null],[13,"Stdout","","Logs will be sent to standard output.",0,null],[13,"Stderr","","Logs will be sent to standard error.",0,null],[4,"WriteStyle","","Whether or not to print styles to the target.",null,null],[13,"Auto","","Try to print styles, but don't force the issue.",1,null],[13,"Always","","Try very hard to print styles.",1,null],[13,"Never","","Never print styles.",1,null],[5,"try_init","","Attempts to initialize the global logger with an env logger.",null,[[],[["result",["setloggererror"]],["setloggererror"]]]],[5,"init","","Initializes the global logger with an env logger.",null,[[]]],[5,"try_init_from_env","","Attempts to initialize the global logger with an env…",null,[[["e"]],[["result",["setloggererror"]],["setloggererror"]]]],[5,"init_from_env","","Initializes the global logger with an env logger from the…",null,[[["e"]]]],[5,"builder","","Create a new builder with the default environment variables.",null,[[],["builder"]]],[5,"from_env","","Create a builder from the given environment variables.",null,[[["e"]],["builder"]]],[0,"filter","","Filtering for log records.",null,null],[3,"Filter","env_logger::filter","A log filter.",null,null],[3,"Builder","","A builder for a log filter.",null,null],[11,"filter","","Returns the maximum `LevelFilter` that this filter…",2,[[["self"]],["levelfilter"]]],[11,"matches","","Checks if this record matches the configured filter.",2,[[["record"],["self"]],["bool"]]],[11,"enabled","","Determines if a log message with the specified metadata…",2,[[["metadata"],["self"]],["bool"]]],[11,"new","","Initializes the filter builder with defaults.",3,[[],["builder"]]],[11,"from_env","","Initializes the filter builder from an environment.",3,[[["str"]],["builder"]]],[11,"filter_module","","Adds a directive to the filter for a specific module.",3,[[["str"],["self"],["levelfilter"]],["self"]]],[11,"filter_level","","Adds a directive to the filter for all modules.",3,[[["self"],["levelfilter"]],["self"]]],[11,"filter","","Adds a directive to the filter.",3,[[["str"],["option",["str"]],["self"],["levelfilter"]],["self"]]],[11,"parse","","Parses the directives string.",3,[[["str"],["self"]],["self"]]],[11,"build","","Build a log filter.",3,[[["self"]],["filter"]]],[0,"fmt","env_logger","Formatting for log records.",null,null],[3,"Timestamp","env_logger::fmt","An [RFC3339] formatted timestamp.",null,null],[3,"Style","","A set of styles to apply to the terminal output.",null,null],[3,"StyledValue","","A value that can be printed using the given styles.",null,null],[3,"Formatter","","A formatter to write logs into.",null,null],[4,"Color","","The set of available colors for the terminal…",null,null],[13,"Black","","",4,null],[13,"Blue","","",4,null],[13,"Green","","",4,null],[13,"Red","","",4,null],[13,"Cyan","","",4,null],[13,"Magenta","","",4,null],[13,"Yellow","","",4,null],[13,"White","","",4,null],[13,"Ansi256","","",4,null],[13,"Rgb","","",4,null],[4,"Target","","Log target, either `stdout` or `stderr`.",null,null],[13,"Stdout","","Logs will be sent to standard output.",0,null],[13,"Stderr","","Logs will be sent to standard error.",0,null],[4,"WriteStyle","","Whether or not to print styles to the target.",null,null],[13,"Auto","","Try to print styles, but don't force the issue.",1,null],[13,"Always","","Try very hard to print styles.",1,null],[13,"Never","","Never print styles.",1,null],[4,"TimestampPrecision","","Formatting precision of timestamps.",null,null],[13,"Seconds","","Full second precision (0 decimal digits)",5,null],[13,"Millis","","Millisecond precision (3 decimal digits)",5,null],[13,"Micros","","Microsecond precision (6 decimal digits)",5,null],[13,"Nanos","","Nanosecond precision (9 decimal digits)",5,null],[11,"timestamp","","Get a [`Timestamp`] for the current date and time in UTC.",6,[[["self"]],["timestamp"]]],[11,"timestamp_seconds","","Get a [`Timestamp`] for the current date and time in UTC…",6,[[["self"]],["timestamp"]]],[11,"timestamp_millis","","Get a [`Timestamp`] for the current date and time in UTC…",6,[[["self"]],["timestamp"]]],[11,"timestamp_micros","","Get a [`Timestamp`] for the current date and time in UTC…",6,[[["self"]],["timestamp"]]],[11,"timestamp_nanos","","Get a [`Timestamp`] for the current date and time in UTC…",6,[[["self"]],["timestamp"]]],[11,"style","","Begin a new [`Style`].",6,[[["self"]],["style"]]],[11,"default_level_style","","Get the default [`Style`] for the given level.",6,[[["level"],["self"]],["style"]]],[11,"default_styled_level","","Get a printable [`Style`] for the given level.",6,[[["level"],["self"]],[["styledvalue",["level"]],["level"]]]],[11,"set_color","","Set the text color.",7,[[["self"],["color"]],["style"]]],[11,"set_bold","","Set the text weight.",7,[[["self"],["bool"]],["style"]]],[11,"set_intense","","Set the text intensity.",7,[[["self"],["bool"]],["style"]]],[11,"set_bg","","Set the background color.",7,[[["self"],["color"]],["style"]]],[11,"value","","Wrap a value in the style.",7,[[["self"],["t"]],["styledvalue"]]],[17,"DEFAULT_FILTER_ENV","env_logger","The default name for the environment variable to read…",null,null],[17,"DEFAULT_WRITE_STYLE_ENV","","The default name for the environment variable to read…",null,null],[11,"new","","Initializes the log builder with defaults.",8,[[],["builder"]]],[11,"from_env","","Initializes the log builder from the environment.",8,[[["e"]],["self"]]],[11,"from_default_env","","Initializes the log builder from the environment using…",8,[[],["self"]]],[11,"format","","Sets the format function for formatting the log output.",8,[[["self"],["f"]],["self"]]],[11,"default_format","","Use the default format.",8,[[["self"]],["self"]]],[11,"format_level","","Whether or not to write the level in the default format.",8,[[["self"],["bool"]],["self"]]],[11,"format_module_path","","Whether or not to write the module path in the default…",8,[[["self"],["bool"]],["self"]]],[11,"format_indent","","Configures the amount of spaces to use to indent multiline…",8,[[["self"],["option",["usize"]],["usize"]],["self"]]],[11,"format_timestamp","","Configures if timestamp should be included and in what…",8,[[["timestampprecision"],["self"],["option",["timestampprecision"]]],["self"]]],[11,"format_timestamp_secs","","Configures the timestamp to use second precision.",8,[[["self"]],["self"]]],[11,"format_timestamp_millis","","Configures the timestamp to use millisecond precision.",8,[[["self"]],["self"]]],[11,"format_timestamp_micros","","Configures the timestamp to use microsecond precision.",8,[[["self"]],["self"]]],[11,"format_timestamp_nanos","","Configures the timestamp to use nanosecond precision.",8,[[["self"]],["self"]]],[11,"filter_module","","Adds a directive to the filter for a specific module.",8,[[["str"],["self"],["levelfilter"]],["self"]]],[11,"filter_level","","Adds a directive to the filter for all modules.",8,[[["self"],["levelfilter"]],["self"]]],[11,"filter","","Adds filters to the logger.",8,[[["str"],["option",["str"]],["self"],["levelfilter"]],["self"]]],[11,"parse_filters","","Parses the directives string in the same form as the…",8,[[["str"],["self"]],["self"]]],[11,"target","","Sets the target for the log output.",8,[[["self"],["target"]],["self"]]],[11,"write_style","","Sets whether or not styles will be written.",8,[[["writestyle"],["self"]],["self"]]],[11,"parse_write_style","","Parses whether or not to write styles in the same form as…",8,[[["str"],["self"]],["self"]]],[11,"is_test","","Sets whether or not the logger will be used in unit tests.",8,[[["self"],["bool"]],["self"]]],[11,"try_init","","Initializes the global logger with the built env logger.",8,[[["self"]],[["result",["setloggererror"]],["setloggererror"]]]],[11,"init","","Initializes the global logger with the built env logger.",8,[[["self"]]]],[11,"build","","Build an env logger.",8,[[["self"]],["logger"]]],[11,"from_env","","Creates the logger from the environment.",9,[[["e"]],["self"]]],[11,"from_default_env","","Creates the logger from the environment using default…",9,[[],["self"]]],[11,"filter","","Returns the maximum `LevelFilter` that this env logger…",9,[[["self"]],["levelfilter"]]],[11,"matches","","Checks if this record matches the configured filter.",9,[[["record"],["self"]],["bool"]]],[11,"new","","Get a default set of environment variables.",10,[[],["self"]]],[11,"filter","","Specify an environment variable to read the filter from.",10,[[["e"]],["self"]]],[11,"filter_or","","Specify an environment variable to read the filter from.",10,[[["v"],["e"]],["self"]]],[11,"default_filter_or","","Use the default environment variable to read the filter…",10,[[["v"]],["self"]]],[11,"write_style","","Specify an environment variable to read the style from.",10,[[["e"]],["self"]]],[11,"write_style_or","","Specify an environment variable to read the style from.",10,[[["v"],["e"]],["self"]]],[11,"default_write_style_or","","Use the default environment variable to read the style from.",10,[[["v"]],["self"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","env_logger::filter","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","env_logger::fmt","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","env_logger","",10,[[["t"]],["self"]]],[11,"clone","env_logger::fmt","",7,[[["self"]],["style"]]],[11,"clone","","",4,[[["self"]],["color"]]],[11,"clone","env_logger","",0,[[["self"]],["target"]]],[11,"clone","","",1,[[["self"]],["writestyle"]]],[11,"clone","env_logger::fmt","",5,[[["self"]],["timestampprecision"]]],[11,"default","env_logger::filter","",3,[[],["self"]]],[11,"default","env_logger","",0,[[],["self"]]],[11,"default","","",1,[[],["self"]]],[11,"default","env_logger::fmt","",5,[[],["self"]]],[11,"default","env_logger","",8,[[],["builder"]]],[11,"default","","",10,[[],["self"]]],[11,"eq","env_logger::fmt","",4,[[["self"],["color"]],["bool"]]],[11,"ne","","",4,[[["self"],["color"]],["bool"]]],[11,"eq","env_logger","",0,[[["target"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["writestyle"]],["bool"]]],[11,"fmt","env_logger::filter","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","env_logger::fmt","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","env_logger","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","env_logger::fmt","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","env_logger","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","env_logger::fmt","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"hash","env_logger","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"fmt","env_logger::fmt","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"write","","",6,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",6,[[["self"]],["result"]]],[11,"enabled","env_logger","",9,[[["metadata"],["self"]],["bool"]]],[11,"log","","",9,[[["record"],["self"]]]],[11,"flush","","",9,[[["self"]]]]],"p":[[4,"Target"],[4,"WriteStyle"],[3,"Filter"],[3,"Builder"],[4,"Color"],[4,"TimestampPrecision"],[3,"Formatter"],[3,"Style"],[3,"Builder"],[3,"Logger"],[3,"Env"],[3,"Timestamp"],[3,"StyledValue"]]};
searchIndex["getrandom"] = {"doc":"Interface to the random number generator of the operating…","i":[[3,"Error","getrandom","A small and `no_std` compatible error type.",null,null],[5,"getrandom","","Fill `dest` with random bytes from the system's preferred…",null,[[],[["result",["error"]],["error"]]]],[18,"UNKNOWN","","Unknown error.",0,null],[18,"UNAVAILABLE","","System entropy source is unavailable.",0,null],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",0,[[],[["option",["i32"]],["i32"]]]],[11,"code","","Extract the bare error code.",0,[[],["nonzerou32"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["nonzerou32"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["error"]],["bool"]]],[11,"ne","","",0,[[["self"],["error"]],["bool"]]],[11,"clone","","",0,[[["self"]],["error"]]]],"p":[[3,"Error"]]};
searchIndex["heck"] = {"doc":"heck is a case conversion library.","i":[[8,"CamelCase","heck","This trait defines a camel case conversion.",null,null],[10,"to_camel_case","","Convert this type to camel case.",0,[[["self"]]]],[8,"KebabCase","","This trait defines a kebab case conversion.",null,null],[10,"to_kebab_case","","Convert this type to kebab case.",1,[[["self"]]]],[8,"MixedCase","","This trait defines a mixed case conversion.",null,null],[10,"to_mixed_case","","Convert this type to mixed case.",2,[[["self"]]]],[8,"ShoutySnakeCase","","This trait defines a shouty snake case conversion.",null,null],[10,"to_shouty_snake_case","","Convert this type to shouty snake case.",3,[[["self"]]]],[8,"ShoutySnekCase","","Oh heck, ShoutySnekCase is an alias for ShoutySnakeCase.…",null,null],[10,"TO_SHOUTY_SNEK_CASE","","CONVERT THIS TYPE TO SNEK CASE.",4,[[["self"]]]],[8,"SnakeCase","","This trait defines a camel case conversion.",null,null],[10,"to_snake_case","","Convert this type to snake case.",5,[[["self"]]]],[8,"SnekCase","","Oh heck, SnekCase is an alias for SnakeCase. See SnakeCase…",null,null],[10,"to_snek_case","","Convert this type to snek case.",6,[[["self"]]]],[8,"TitleCase","","This trait defines a title case conversion.",null,null],[10,"to_title_case","","Convert this type to title case.",7,[[["self"]]]]],"p":[[8,"CamelCase"],[8,"KebabCase"],[8,"MixedCase"],[8,"ShoutySnakeCase"],[8,"ShoutySnekCase"],[8,"SnakeCase"],[8,"SnekCase"],[8,"TitleCase"]]};
searchIndex["humantime"] = {"doc":"Human-friendly time parser and formatter","i":[[3,"FormattedDuration","humantime","A wrapper type that allows you to Display a Duration",null,null],[3,"Duration","","A wrapper for duration that has `FromStr` implementation",null,null],[3,"Timestamp","","A wrapper for SystemTime that has `FromStr` implementation",null,null],[3,"Rfc3339Timestamp","","A wrapper type that allows you to Display a SystemTime",null,null],[4,"DurationError","","Error parsing human-friendly duration",null,null],[13,"InvalidCharacter","","Invalid character during parsing",0,null],[13,"NumberExpected","","Non-numeric value where number is expected",0,null],[13,"UnknownUnit","","Unit in the number is not one of allowed units",0,null],[13,"NumberOverflow","","The numeric value is too large",0,null],[13,"Empty","","The value was an empty string (or consists only whitespace)",0,null],[4,"TimestampError","","Error parsing datetime (timestamp)",null,null],[13,"OutOfRange","","Numeric component is out of range",1,null],[13,"InvalidDigit","","Bad character where digit is expected",1,null],[13,"InvalidFormat","","Other formatting errors",1,null],[5,"parse_duration","","Parse duration object `1hour 12min 5s`",null,[[["str"]],[["error"],["result",["duration","error"]],["duration"]]]],[5,"format_duration","","Formats duration into a human-readable string",null,[[["duration"]],["formattedduration"]]],[5,"parse_rfc3339","","Parse RFC3339 timestamp `2018-02-14T00:28:07Z`",null,[[["str"]],[["result",["systemtime","error"]],["systemtime"],["error"]]]],[5,"parse_rfc3339_weak","","Parse RFC3339-like timestamp `2018-02-14 00:28:07`",null,[[["str"]],[["result",["systemtime","error"]],["systemtime"],["error"]]]],[5,"format_rfc3339","","Format an RFC3339 timestamp `2018-02-14T00:28:07Z`",null,[[["systemtime"]],["rfc3339timestamp"]]],[5,"format_rfc3339_micros","","Format an RFC3339 timestamp `2018-02-14T00:28:07.000000Z`",null,[[["systemtime"]],["rfc3339timestamp"]]],[5,"format_rfc3339_millis","","Format an RFC3339 timestamp `2018-02-14T00:28:07.000Z`",null,[[["systemtime"]],["rfc3339timestamp"]]],[5,"format_rfc3339_nanos","","Format an RFC3339 timestamp `2018-02-14T00:28:07.000000000Z`",null,[[["systemtime"]],["rfc3339timestamp"]]],[5,"format_rfc3339_seconds","","Format an RFC3339 timestamp `2018-02-14T00:28:07Z`",null,[[["systemtime"]],["rfc3339timestamp"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"as_ref","","",3,[[["self"]],["stdduration"]]],[11,"as_ref","","",4,[[["self"]],["systemtime"]]],[11,"from","","",3,[[["stdduration"]],["duration"]]],[11,"from","","",4,[[["systemtime"]],["timestamp"]]],[11,"into","","",3,[[],["stdduration"]]],[11,"into","","",4,[[],["systemtime"]]],[11,"clone","","",0,[[["self"]],["error"]]],[11,"clone","","",2,[[["self"]],["formattedduration"]]],[11,"clone","","",3,[[["self"]],["duration"]]],[11,"clone","","",4,[[["self"]],["timestamp"]]],[11,"clone","","",1,[[["self"]],["error"]]],[11,"clone","","",5,[[["self"]],["rfc3339timestamp"]]],[11,"eq","","",0,[[["self"],["error"]],["bool"]]],[11,"ne","","",0,[[["self"],["error"]],["bool"]]],[11,"eq","","",3,[[["duration"],["self"]],["bool"]]],[11,"ne","","",3,[[["duration"],["self"]],["bool"]]],[11,"eq","","",4,[[["timestamp"],["self"]],["bool"]]],[11,"ne","","",4,[[["timestamp"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["error"]],["bool"]]],[11,"deref","","",3,[[["self"]],["stdduration"]]],[11,"deref","","",4,[[["self"]],["systemtime"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"from_str","","",3,[[["str"]],[["duration"],["result",["duration"]]]]],[11,"from_str","","",4,[[["str"]],[["result",["timestamp"]],["timestamp"]]]],[11,"cause","","",0,[[["self"]],[["option",["error"]],["error"]]]],[11,"cause","","",1,[[["self"]],[["option",["error"]],["error"]]]]],"p":[[4,"DurationError"],[4,"TimestampError"],[3,"FormattedDuration"],[3,"Duration"],[3,"Timestamp"],[3,"Rfc3339Timestamp"]]};
searchIndex["ipnetwork"] = {"doc":"The `ipnetwork` crate provides a set of APIs to work with…","i":[[3,"Ipv4Network","ipnetwork","Represents a network range where the IP addresses are of v4",null,null],[3,"Ipv6Network","","Represents a network range where the IP addresses are of v6",null,null],[4,"IpNetworkError","","Represents a bunch of errors that can occur while working…",null,null],[13,"InvalidAddr","","",0,null],[13,"InvalidPrefix","","",0,null],[13,"InvalidCidrFormat","","",0,null],[4,"IpNetwork","","Represents a generic network range. This type can have two…",null,null],[13,"V4","","",1,null],[13,"V6","","",1,null],[4,"NetworkSize","","Represents a generic network size. For IPv4, the max size…",null,null],[13,"V4","","",2,null],[13,"V6","","",2,null],[5,"ipv4_mask_to_prefix","","Converts a `Ipv4Addr` network mask into a prefix. If the…",null,[[["ipv4addr"]],[["ipnetworkerror"],["result",["u8","ipnetworkerror"]],["u8"]]]],[5,"ipv6_mask_to_prefix","","Converts a `Ipv6Addr` network mask into a prefix. If the…",null,[[["ipv6addr"]],[["ipnetworkerror"],["result",["u8","ipnetworkerror"]],["u8"]]]],[5,"ip_mask_to_prefix","","Converts a `IpAddr` network mask into a prefix. If the…",null,[[["ipaddr"]],[["ipnetworkerror"],["result",["u8","ipnetworkerror"]],["u8"]]]],[11,"new","","Constructs a new `Ipv4Network` from any `Ipv4Addr` and a…",3,[[["ipv4addr"],["u8"]],[["result",["ipv4network","ipnetworkerror"]],["ipv4network"],["ipnetworkerror"]]]],[11,"iter","","Returns an iterator over `Ipv4Network`. Each call to…",3,[[["self"]],["ipv4networkiterator"]]],[11,"ip","","",3,[[["self"]],["ipv4addr"]]],[11,"prefix","","",3,[[["self"]],["u8"]]],[11,"is_subnet_of","","Checks if the given `Ipv4Network` is a subnet of the other.",3,[[["ipv4network"]],["bool"]]],[11,"is_supernet_of","","Checks if the given `Ipv4Network` is a supernet of the…",3,[[["ipv4network"]],["bool"]]],[11,"overlaps","","Checks if the given `Ipv4Network` is partly contained in…",3,[[["ipv4network"]],["bool"]]],[11,"mask","","Returns the mask for this `Ipv4Network`. That means the…",3,[[["self"]],["ipv4addr"]]],[11,"network","","Returns the address of the network denoted by this…",3,[[["self"]],["ipv4addr"]]],[11,"broadcast","","Returns the broadcasting address of this `Ipv4Network`.…",3,[[["self"]],["ipv4addr"]]],[11,"contains","","Checks if a given `Ipv4Addr` is in this `Ipv4Network`",3,[[["ipv4addr"],["self"]],["bool"]]],[11,"size","","Returns number of possible host addresses in this…",3,[[["self"]],["u32"]]],[11,"nth","","Returns the `n`:th address within this network. The…",3,[[["u32"],["self"]],[["ipv4addr"],["option",["ipv4addr"]]]]],[11,"new","","Constructs a new `Ipv6Network` from any `Ipv6Addr` and a…",4,[[["ipv6addr"],["u8"]],[["ipv6network"],["ipnetworkerror"],["result",["ipv6network","ipnetworkerror"]]]]],[11,"iter","","Returns an iterator over `Ipv6Network`. Each call to…",4,[[["self"]],["ipv6networkiterator"]]],[11,"network","","Returns the address of the network denoted by this…",4,[[["self"]],["ipv6addr"]]],[11,"broadcast","","Returns the broadcast address of this `Ipv6Network`. This…",4,[[["self"]],["ipv6addr"]]],[11,"ip","","",4,[[["self"]],["ipv6addr"]]],[11,"prefix","","",4,[[["self"]],["u8"]]],[11,"is_subnet_of","","Checks if the given `Ipv6Network` is a subnet of the other.",4,[[["ipv6network"]],["bool"]]],[11,"is_supernet_of","","Checks if the given `Ipv6Network` is a supernet of the…",4,[[["ipv6network"]],["bool"]]],[11,"overlaps","","Checks if the given `Ipv6Network` is partly contained in…",4,[[["ipv6network"]],["bool"]]],[11,"mask","","Returns the mask for this `Ipv6Network`. That means the…",4,[[["self"]],["ipv6addr"]]],[11,"contains","","Checks if a given `Ipv6Addr` is in this `Ipv6Network`",4,[[["ipv6addr"],["self"]],["bool"]]],[11,"size","","Returns number of possible host addresses in this…",4,[[["self"]],["u128"]]],[11,"new","","Constructs a new `IpNetwork` from a given `IpAddr` and a…",1,[[["ipaddr"],["u8"]],[["result",["ipnetwork","ipnetworkerror"]],["ipnetwork"],["ipnetworkerror"]]]],[11,"ip","","Returns the IP part of a given `IpNetwork`",1,[[["self"]],["ipaddr"]]],[11,"prefix","","Returns the prefix of the given `IpNetwork`",1,[[["self"]],["u8"]]],[11,"network","","Returns the address of the network denoted by this…",1,[[["self"]],["ipaddr"]]],[11,"broadcast","","Returns the broadcasting address of this `IpNetwork`. This…",1,[[["self"]],["ipaddr"]]],[11,"mask","","Returns the mask for this `IpNetwork`. That means the…",1,[[["self"]],["ipaddr"]]],[11,"is_ipv4","","Returns true if the IP in this `IpNetwork` is a valid IPv4…",1,[[["self"]],["bool"]]],[11,"is_ipv6","","Returns true if the IP in this `IpNetwork` is a valid IPv6…",1,[[["self"]],["bool"]]],[11,"contains","","Checks if a given `IpAddr` is in this `IpNetwork`",1,[[["ipaddr"],["self"]],["bool"]]],[11,"size","","Returns the number of possible host addresses in this…",1,[[["self"]],["networksize"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["ipv4addr"]],["ipv4network"]]],[11,"from","","",4,[[["ipv6addr"]],["ipv6network"]]],[11,"from","","",1,[[["ipv4network"]],["ipnetwork"]]],[11,"from","","",1,[[["ipv6network"]],["ipnetwork"]]],[11,"from","","",1,[[["ipaddr"]],["ipnetwork"]]],[11,"clone","","",0,[[["self"]],["ipnetworkerror"]]],[11,"clone","","",3,[[["self"]],["ipv4network"]]],[11,"clone","","",4,[[["self"]],["ipv6network"]]],[11,"clone","","",1,[[["self"]],["ipnetwork"]]],[11,"clone","","",2,[[["self"]],["networksize"]]],[11,"cmp","","",3,[[["self"],["ipv4network"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["ipv6network"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["ipnetwork"]],["ordering"]]],[11,"cmp","","",2,[[["networksize"],["self"]],["ordering"]]],[11,"eq","","",0,[[["self"],["ipnetworkerror"]],["bool"]]],[11,"ne","","",0,[[["self"],["ipnetworkerror"]],["bool"]]],[11,"eq","","",3,[[["self"],["ipv4network"]],["bool"]]],[11,"ne","","",3,[[["self"],["ipv4network"]],["bool"]]],[11,"eq","","",4,[[["self"],["ipv6network"]],["bool"]]],[11,"ne","","",4,[[["self"],["ipv6network"]],["bool"]]],[11,"eq","","",1,[[["self"],["ipnetwork"]],["bool"]]],[11,"ne","","",1,[[["self"],["ipnetwork"]],["bool"]]],[11,"eq","","",2,[[["networksize"],["self"]],["bool"]]],[11,"ne","","",2,[[["networksize"],["self"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["ipv4network"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",3,[[["self"],["ipv4network"]],["bool"]]],[11,"le","","",3,[[["self"],["ipv4network"]],["bool"]]],[11,"gt","","",3,[[["self"],["ipv4network"]],["bool"]]],[11,"ge","","",3,[[["self"],["ipv4network"]],["bool"]]],[11,"partial_cmp","","",4,[[["self"],["ipv6network"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",4,[[["self"],["ipv6network"]],["bool"]]],[11,"le","","",4,[[["self"],["ipv6network"]],["bool"]]],[11,"gt","","",4,[[["self"],["ipv6network"]],["bool"]]],[11,"ge","","",4,[[["self"],["ipv6network"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["ipnetwork"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["self"],["ipnetwork"]],["bool"]]],[11,"le","","",1,[[["self"],["ipnetwork"]],["bool"]]],[11,"gt","","",1,[[["self"],["ipnetwork"]],["bool"]]],[11,"ge","","",1,[[["self"],["ipnetwork"]],["bool"]]],[11,"partial_cmp","","",2,[[["networksize"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",2,[[["networksize"],["self"]],["bool"]]],[11,"le","","",2,[[["networksize"],["self"]],["bool"]]],[11,"gt","","",2,[[["networksize"],["self"]],["bool"]]],[11,"ge","","",2,[[["networksize"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"from_str","","",3,[[["str"]],[["result",["ipv4network","ipnetworkerror"]],["ipv4network"],["ipnetworkerror"]]]],[11,"from_str","","",4,[[["str"]],[["ipv6network"],["ipnetworkerror"],["result",["ipv6network","ipnetworkerror"]]]]],[11,"from_str","","",1,[[["str"]],[["result",["ipnetwork","ipnetworkerror"]],["ipnetwork"],["ipnetworkerror"]]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"serialize","","",3,[[["s"],["self"]],["result"]]],[11,"serialize","","",4,[[["s"],["self"]],["result"]]],[11,"serialize","","",1,[[["s"],["self"]],["result"]]],[11,"deserialize","","",3,[[["d"]],["result"]]],[11,"deserialize","","",4,[[["d"]],["result"]]],[11,"deserialize","","",1,[[["d"]],["result"]]]],"p":[[4,"IpNetworkError"],[4,"IpNetwork"],[4,"NetworkSize"],[3,"Ipv4Network"],[3,"Ipv6Network"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","i":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes…",null,[[["t"]]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy…",null,null],[14,"lazy_static","","",null,null]],"p":[]};
searchIndex["libc"] = {"doc":"libc - Raw FFI bindings to platforms' system libraries","i":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",null,null],[3,"group","","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",6,null],[12,"ipv6mr_interface","","",6,null],[3,"hostent","","",null,null],[12,"h_name","","",7,null],[12,"h_aliases","","",7,null],[12,"h_addrtype","","",7,null],[12,"h_length","","",7,null],[12,"h_addr_list","","",7,null],[3,"iovec","","",null,null],[12,"iov_base","","",8,null],[12,"iov_len","","",8,null],[3,"pollfd","","",null,null],[12,"fd","","",9,null],[12,"events","","",9,null],[12,"revents","","",9,null],[3,"winsize","","",null,null],[12,"ws_row","","",10,null],[12,"ws_col","","",10,null],[12,"ws_xpixel","","",10,null],[12,"ws_ypixel","","",10,null],[3,"linger","","",null,null],[12,"l_onoff","","",11,null],[12,"l_linger","","",11,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",12,null],[3,"itimerval","","",null,null],[12,"it_interval","","",13,null],[12,"it_value","","",13,null],[3,"tms","","",null,null],[12,"tms_utime","","",14,null],[12,"tms_stime","","",14,null],[12,"tms_cutime","","",14,null],[12,"tms_cstime","","",14,null],[3,"servent","","",null,null],[12,"s_name","","",15,null],[12,"s_aliases","","",15,null],[12,"s_port","","",15,null],[12,"s_proto","","",15,null],[3,"protoent","","",null,null],[12,"p_name","","",16,null],[12,"p_aliases","","",16,null],[12,"p_proto","","",16,null],[3,"in_addr","","",null,null],[12,"s_addr","","",17,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",18,null],[12,"imr_interface","","",18,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",19,null],[12,"sa_data","","",19,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",20,null],[12,"sin_port","","",20,null],[12,"sin_addr","","",20,null],[12,"sin_zero","","",20,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",21,null],[12,"sin6_port","","",21,null],[12,"sin6_flowinfo","","",21,null],[12,"sin6_addr","","",21,null],[12,"sin6_scope_id","","",21,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",22,null],[12,"ai_family","","",22,null],[12,"ai_socktype","","",22,null],[12,"ai_protocol","","",22,null],[12,"ai_addrlen","","",22,null],[12,"ai_addr","","",22,null],[12,"ai_canonname","","",22,null],[12,"ai_next","","",22,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",23,null],[12,"sll_protocol","","",23,null],[12,"sll_ifindex","","",23,null],[12,"sll_hatype","","",23,null],[12,"sll_pkttype","","",23,null],[12,"sll_halen","","",23,null],[12,"sll_addr","","",23,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",24,null],[12,"tm_min","","",24,null],[12,"tm_hour","","",24,null],[12,"tm_mday","","",24,null],[12,"tm_mon","","",24,null],[12,"tm_year","","",24,null],[12,"tm_wday","","",24,null],[12,"tm_yday","","",24,null],[12,"tm_isdst","","",24,null],[12,"tm_gmtoff","","",24,null],[12,"tm_zone","","",24,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",25,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",26,null],[12,"dli_fbase","","",26,null],[12,"dli_sname","","",26,null],[12,"dli_saddr","","",26,null],[3,"lconv","","",null,null],[12,"decimal_point","","",27,null],[12,"thousands_sep","","",27,null],[12,"grouping","","",27,null],[12,"int_curr_symbol","","",27,null],[12,"currency_symbol","","",27,null],[12,"mon_decimal_point","","",27,null],[12,"mon_thousands_sep","","",27,null],[12,"mon_grouping","","",27,null],[12,"positive_sign","","",27,null],[12,"negative_sign","","",27,null],[12,"int_frac_digits","","",27,null],[12,"frac_digits","","",27,null],[12,"p_cs_precedes","","",27,null],[12,"p_sep_by_space","","",27,null],[12,"n_cs_precedes","","",27,null],[12,"n_sep_by_space","","",27,null],[12,"p_sign_posn","","",27,null],[12,"n_sign_posn","","",27,null],[12,"int_p_cs_precedes","","",27,null],[12,"int_p_sep_by_space","","",27,null],[12,"int_n_cs_precedes","","",27,null],[12,"int_n_sep_by_space","","",27,null],[12,"int_p_sign_posn","","",27,null],[12,"int_n_sign_posn","","",27,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",28,null],[12,"ipi_spec_dst","","",28,null],[12,"ipi_addr","","",28,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",29,null],[12,"ifa_name","","",29,null],[12,"ifa_flags","","",29,null],[12,"ifa_addr","","",29,null],[12,"ifa_netmask","","",29,null],[12,"ifa_ifu","","",29,null],[12,"ifa_data","","",29,null],[3,"in6_rtmsg","","",null,null],[3,"arpreq","","",null,null],[12,"arp_pa","","",30,null],[12,"arp_ha","","",30,null],[12,"arp_flags","","",30,null],[12,"arp_netmask","","",30,null],[12,"arp_dev","","",30,null],[3,"arpreq_old","","",null,null],[12,"arp_pa","","",31,null],[12,"arp_ha","","",31,null],[12,"arp_flags","","",31,null],[12,"arp_netmask","","",31,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",32,null],[12,"ar_pro","","",32,null],[12,"ar_hln","","",32,null],[12,"ar_pln","","",32,null],[12,"ar_op","","",32,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",33,null],[12,"msg_len","","",33,null],[3,"epoll_event","","",null,null],[12,"events","","",34,null],[12,"u64","","",34,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",35,null],[12,"sun_path","","",35,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",36,null],[3,"utsname","","",null,null],[12,"sysname","","",37,null],[12,"nodename","","",37,null],[12,"release","","",37,null],[12,"version","","",37,null],[12,"machine","","",37,null],[12,"domainname","","",37,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",38,null],[12,"sigev_signo","","",38,null],[12,"sigev_notify","","",38,null],[12,"sigev_notify_thread_id","","",38,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",39,null],[12,"rlim_max","","",39,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",40,null],[12,"gl_pathv","","",40,null],[12,"gl_offs","","",40,null],[12,"gl_flags","","",40,null],[3,"passwd","","",null,null],[12,"pw_name","","",41,null],[12,"pw_passwd","","",41,null],[12,"pw_uid","","",41,null],[12,"pw_gid","","",41,null],[12,"pw_gecos","","",41,null],[12,"pw_dir","","",41,null],[12,"pw_shell","","",41,null],[3,"spwd","","",null,null],[12,"sp_namp","","",42,null],[12,"sp_pwdp","","",42,null],[12,"sp_lstchg","","",42,null],[12,"sp_min","","",42,null],[12,"sp_max","","",42,null],[12,"sp_warn","","",42,null],[12,"sp_inact","","",42,null],[12,"sp_expire","","",42,null],[12,"sp_flag","","",42,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",43,null],[12,"dqb_bsoftlimit","","",43,null],[12,"dqb_curspace","","",43,null],[12,"dqb_ihardlimit","","",43,null],[12,"dqb_isoftlimit","","",43,null],[12,"dqb_curinodes","","",43,null],[12,"dqb_btime","","",43,null],[12,"dqb_itime","","",43,null],[12,"dqb_valid","","",43,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",44,null],[12,"ssi_errno","","",44,null],[12,"ssi_code","","",44,null],[12,"ssi_pid","","",44,null],[12,"ssi_uid","","",44,null],[12,"ssi_fd","","",44,null],[12,"ssi_tid","","",44,null],[12,"ssi_band","","",44,null],[12,"ssi_overrun","","",44,null],[12,"ssi_trapno","","",44,null],[12,"ssi_status","","",44,null],[12,"ssi_int","","",44,null],[12,"ssi_ptr","","",44,null],[12,"ssi_utime","","",44,null],[12,"ssi_stime","","",44,null],[12,"ssi_addr","","",44,null],[12,"ssi_addr_lsb","","",44,null],[12,"ssi_syscall","","",44,null],[12,"ssi_call_addr","","",44,null],[12,"ssi_arch","","",44,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",45,null],[12,"it_value","","",45,null],[3,"fsid_t","","",null,null],[3,"packet_mreq","","",null,null],[12,"mr_ifindex","","",46,null],[12,"mr_type","","",46,null],[12,"mr_alen","","",46,null],[12,"mr_address","","",46,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",47,null],[12,"if_name","","",47,null],[3,"msginfo","","",null,null],[12,"msgpool","","",48,null],[12,"msgmap","","",48,null],[12,"msgmax","","",48,null],[12,"msgmnb","","",48,null],[12,"msgmni","","",48,null],[12,"msgssz","","",48,null],[12,"msgtql","","",48,null],[12,"msgseg","","",48,null],[3,"sembuf","","",null,null],[12,"sem_num","","",49,null],[12,"sem_op","","",49,null],[12,"sem_flg","","",49,null],[3,"input_event","","",null,null],[12,"time","","",50,null],[12,"type_","","",50,null],[12,"code","","",50,null],[12,"value","","",50,null],[3,"input_id","","",null,null],[12,"bustype","","",51,null],[12,"vendor","","",51,null],[12,"product","","",51,null],[12,"version","","",51,null],[3,"input_absinfo","","",null,null],[12,"value","","",52,null],[12,"minimum","","",52,null],[12,"maximum","","",52,null],[12,"fuzz","","",52,null],[12,"flat","","",52,null],[12,"resolution","","",52,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",53,null],[12,"len","","",53,null],[12,"index","","",53,null],[12,"keycode","","",53,null],[12,"scancode","","",53,null],[3,"input_mask","","",null,null],[12,"type_","","",54,null],[12,"codes_size","","",54,null],[12,"codes_ptr","","",54,null],[3,"ff_replay","","",null,null],[12,"length","","",55,null],[12,"delay","","",55,null],[3,"ff_trigger","","",null,null],[12,"button","","",56,null],[12,"interval","","",56,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",57,null],[12,"attack_level","","",57,null],[12,"fade_length","","",57,null],[12,"fade_level","","",57,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",58,null],[12,"envelope","","",58,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",59,null],[12,"end_level","","",59,null],[12,"envelope","","",59,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",60,null],[12,"left_saturation","","",60,null],[12,"right_coeff","","",60,null],[12,"left_coeff","","",60,null],[12,"deadband","","",60,null],[12,"center","","",60,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",61,null],[12,"period","","",61,null],[12,"magnitude","","",61,null],[12,"offset","","",61,null],[12,"phase","","",61,null],[12,"envelope","","",61,null],[12,"custom_len","","",61,null],[12,"custom_data","","",61,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",62,null],[12,"weak_magnitude","","",62,null],[3,"ff_effect","","",null,null],[12,"type_","","",63,null],[12,"id","","",63,null],[12,"direction","","",63,null],[12,"trigger","","",63,null],[12,"replay","","",63,null],[12,"u","","",63,null],[3,"dl_phdr_info","","",null,null],[12,"dlpi_addr","","",64,null],[12,"dlpi_name","","",64,null],[12,"dlpi_phdr","","",64,null],[12,"dlpi_phnum","","",64,null],[12,"dlpi_adds","","",64,null],[12,"dlpi_subs","","",64,null],[12,"dlpi_tls_modid","","",64,null],[12,"dlpi_tls_data","","",64,null],[3,"Elf32_Ehdr","","",null,null],[12,"e_ident","","",65,null],[12,"e_type","","",65,null],[12,"e_machine","","",65,null],[12,"e_version","","",65,null],[12,"e_entry","","",65,null],[12,"e_phoff","","",65,null],[12,"e_shoff","","",65,null],[12,"e_flags","","",65,null],[12,"e_ehsize","","",65,null],[12,"e_phentsize","","",65,null],[12,"e_phnum","","",65,null],[12,"e_shentsize","","",65,null],[12,"e_shnum","","",65,null],[12,"e_shstrndx","","",65,null],[3,"Elf64_Ehdr","","",null,null],[12,"e_ident","","",66,null],[12,"e_type","","",66,null],[12,"e_machine","","",66,null],[12,"e_version","","",66,null],[12,"e_entry","","",66,null],[12,"e_phoff","","",66,null],[12,"e_shoff","","",66,null],[12,"e_flags","","",66,null],[12,"e_ehsize","","",66,null],[12,"e_phentsize","","",66,null],[12,"e_phnum","","",66,null],[12,"e_shentsize","","",66,null],[12,"e_shnum","","",66,null],[12,"e_shstrndx","","",66,null],[3,"Elf32_Sym","","",null,null],[12,"st_name","","",67,null],[12,"st_value","","",67,null],[12,"st_size","","",67,null],[12,"st_info","","",67,null],[12,"st_other","","",67,null],[12,"st_shndx","","",67,null],[3,"Elf64_Sym","","",null,null],[12,"st_name","","",68,null],[12,"st_info","","",68,null],[12,"st_other","","",68,null],[12,"st_shndx","","",68,null],[12,"st_value","","",68,null],[12,"st_size","","",68,null],[3,"Elf32_Phdr","","",null,null],[12,"p_type","","",69,null],[12,"p_offset","","",69,null],[12,"p_vaddr","","",69,null],[12,"p_paddr","","",69,null],[12,"p_filesz","","",69,null],[12,"p_memsz","","",69,null],[12,"p_flags","","",69,null],[12,"p_align","","",69,null],[3,"Elf64_Phdr","","",null,null],[12,"p_type","","",70,null],[12,"p_flags","","",70,null],[12,"p_offset","","",70,null],[12,"p_vaddr","","",70,null],[12,"p_paddr","","",70,null],[12,"p_filesz","","",70,null],[12,"p_memsz","","",70,null],[12,"p_align","","",70,null],[3,"Elf32_Shdr","","",null,null],[12,"sh_name","","",71,null],[12,"sh_type","","",71,null],[12,"sh_flags","","",71,null],[12,"sh_addr","","",71,null],[12,"sh_offset","","",71,null],[12,"sh_size","","",71,null],[12,"sh_link","","",71,null],[12,"sh_info","","",71,null],[12,"sh_addralign","","",71,null],[12,"sh_entsize","","",71,null],[3,"Elf64_Shdr","","",null,null],[12,"sh_name","","",72,null],[12,"sh_type","","",72,null],[12,"sh_flags","","",72,null],[12,"sh_addr","","",72,null],[12,"sh_offset","","",72,null],[12,"sh_size","","",72,null],[12,"sh_link","","",72,null],[12,"sh_info","","",72,null],[12,"sh_addralign","","",72,null],[12,"sh_entsize","","",72,null],[3,"Elf32_Chdr","","",null,null],[12,"ch_type","","",73,null],[12,"ch_size","","",73,null],[12,"ch_addralign","","",73,null],[3,"Elf64_Chdr","","",null,null],[12,"ch_type","","",74,null],[12,"ch_reserved","","",74,null],[12,"ch_size","","",74,null],[12,"ch_addralign","","",74,null],[3,"ucred","","",null,null],[12,"pid","","",75,null],[12,"uid","","",75,null],[12,"gid","","",75,null],[3,"mntent","","",null,null],[12,"mnt_fsname","","",76,null],[12,"mnt_dir","","",76,null],[12,"mnt_type","","",76,null],[12,"mnt_opts","","",76,null],[12,"mnt_freq","","",76,null],[12,"mnt_passno","","",76,null],[3,"posix_spawn_file_actions_t","","",null,null],[3,"posix_spawnattr_t","","",null,null],[3,"genlmsghdr","","",null,null],[12,"cmd","","",77,null],[12,"version","","",77,null],[12,"reserved","","",77,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",78,null],[12,"ipi6_ifindex","","",78,null],[3,"arpd_request","","",null,null],[12,"req","","",79,null],[12,"ip","","",79,null],[12,"dev","","",79,null],[12,"stamp","","",79,null],[12,"updated","","",79,null],[12,"ha","","",79,null],[3,"inotify_event","","",null,null],[12,"wd","","",80,null],[12,"mask","","",80,null],[12,"cookie","","",80,null],[12,"len","","",80,null],[3,"sockaddr_vm","","",null,null],[12,"svm_family","","",81,null],[12,"svm_reserved1","","",81,null],[12,"svm_port","","",81,null],[12,"svm_cid","","",81,null],[12,"svm_zero","","",81,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",82,null],[12,"nl_pid","","",82,null],[12,"nl_groups","","",82,null],[3,"dirent","","",null,null],[12,"d_ino","","",83,null],[12,"d_off","","",83,null],[12,"d_reclen","","",83,null],[12,"d_type","","",83,null],[12,"d_name","","",83,null],[3,"dirent64","","",null,null],[12,"d_ino","","",84,null],[12,"d_off","","",84,null],[12,"d_reclen","","",84,null],[12,"d_type","","",84,null],[12,"d_name","","",84,null],[3,"sockaddr_alg","","",null,null],[12,"salg_family","","",85,null],[12,"salg_type","","",85,null],[12,"salg_feat","","",85,null],[12,"salg_mask","","",85,null],[12,"salg_name","","",85,null],[3,"af_alg_iv","","",null,null],[12,"ivlen","","",86,null],[12,"iv","","",86,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",87,null],[12,"mq_maxmsg","","",87,null],[12,"mq_msgsize","","",87,null],[12,"mq_curmsgs","","",87,null],[3,"statx","","",null,null],[12,"stx_mask","","",88,null],[12,"stx_blksize","","",88,null],[12,"stx_attributes","","",88,null],[12,"stx_nlink","","",88,null],[12,"stx_uid","","",88,null],[12,"stx_gid","","",88,null],[12,"stx_mode","","",88,null],[12,"__statx_pad1","","",88,null],[12,"stx_ino","","",88,null],[12,"stx_size","","",88,null],[12,"stx_blocks","","",88,null],[12,"stx_attributes_mask","","",88,null],[12,"stx_atime","","",88,null],[12,"stx_btime","","",88,null],[12,"stx_ctime","","",88,null],[12,"stx_mtime","","",88,null],[12,"stx_rdev_major","","",88,null],[12,"stx_rdev_minor","","",88,null],[12,"stx_dev_major","","",88,null],[12,"stx_dev_minor","","",88,null],[12,"__statx_pad2","","",88,null],[3,"statx_timestamp","","",null,null],[12,"tv_sec","","",89,null],[12,"tv_nsec","","",89,null],[12,"__statx_timestamp_pad1","","",89,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",90,null],[12,"aio_lio_opcode","","",90,null],[12,"aio_reqprio","","",90,null],[12,"aio_buf","","",90,null],[12,"aio_nbytes","","",90,null],[12,"aio_sigevent","","",90,null],[12,"aio_offset","","",90,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",91,null],[12,"e_exit","","",91,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",92,null],[12,"tv_usec","","",92,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",93,null],[12,"gl_pathv","","",93,null],[12,"gl_offs","","",93,null],[12,"gl_flags","","",93,null],[3,"msghdr","","",null,null],[12,"msg_name","","",94,null],[12,"msg_namelen","","",94,null],[12,"msg_iov","","",94,null],[12,"msg_iovlen","","",94,null],[12,"msg_control","","",94,null],[12,"msg_controllen","","",94,null],[12,"msg_flags","","",94,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",95,null],[12,"cmsg_level","","",95,null],[12,"cmsg_type","","",95,null],[3,"termios","","",null,null],[12,"c_iflag","","",96,null],[12,"c_oflag","","",96,null],[12,"c_cflag","","",96,null],[12,"c_lflag","","",96,null],[12,"c_line","","",96,null],[12,"c_cc","","",96,null],[12,"c_ispeed","","",96,null],[12,"c_ospeed","","",96,null],[3,"mallinfo","","",null,null],[12,"arena","","",97,null],[12,"ordblks","","",97,null],[12,"smblks","","",97,null],[12,"hblks","","",97,null],[12,"hblkhd","","",97,null],[12,"usmblks","","",97,null],[12,"fsmblks","","",97,null],[12,"uordblks","","",97,null],[12,"fordblks","","",97,null],[12,"keepcost","","",97,null],[3,"nlmsghdr","","",null,null],[12,"nlmsg_len","","",98,null],[12,"nlmsg_type","","",98,null],[12,"nlmsg_flags","","",98,null],[12,"nlmsg_seq","","",98,null],[12,"nlmsg_pid","","",98,null],[3,"nlmsgerr","","",null,null],[12,"error","","",99,null],[12,"msg","","",99,null],[3,"nl_pktinfo","","",null,null],[12,"group","","",100,null],[3,"nl_mmap_req","","",null,null],[12,"nm_block_size","","",101,null],[12,"nm_block_nr","","",101,null],[12,"nm_frame_size","","",101,null],[12,"nm_frame_nr","","",101,null],[3,"nl_mmap_hdr","","",null,null],[12,"nm_status","","",102,null],[12,"nm_len","","",102,null],[12,"nm_group","","",102,null],[12,"nm_pid","","",102,null],[12,"nm_uid","","",102,null],[12,"nm_gid","","",102,null],[3,"nlattr","","",null,null],[12,"nla_len","","",103,null],[12,"nla_type","","",103,null],[3,"rtentry","","",null,null],[12,"rt_pad1","","",104,null],[12,"rt_dst","","",104,null],[12,"rt_gateway","","",104,null],[12,"rt_genmask","","",104,null],[12,"rt_flags","","",104,null],[12,"rt_pad2","","",104,null],[12,"rt_pad3","","",104,null],[12,"rt_tos","","",104,null],[12,"rt_class","","",104,null],[12,"rt_pad4","","",104,null],[12,"rt_metric","","",104,null],[12,"rt_dev","","",104,null],[12,"rt_mtu","","",104,null],[12,"rt_window","","",104,null],[12,"rt_irtt","","",104,null],[3,"utmpx","","",null,null],[12,"ut_type","","",105,null],[12,"ut_pid","","",105,null],[12,"ut_line","","",105,null],[12,"ut_id","","",105,null],[12,"ut_user","","",105,null],[12,"ut_host","","",105,null],[12,"ut_exit","","",105,null],[12,"ut_session","","",105,null],[12,"ut_tv","","",105,null],[12,"ut_addr_v6","","",105,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",106,null],[12,"loads","","",106,null],[12,"totalram","","",106,null],[12,"freeram","","",106,null],[12,"sharedram","","",106,null],[12,"bufferram","","",106,null],[12,"totalswap","","",106,null],[12,"freeswap","","",106,null],[12,"procs","","",106,null],[12,"pad","","",106,null],[12,"totalhigh","","",106,null],[12,"freehigh","","",106,null],[12,"mem_unit","","",106,null],[12,"_f","","",106,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",107,null],[12,"msg_stime","","",107,null],[12,"msg_rtime","","",107,null],[12,"msg_ctime","","",107,null],[12,"msg_qnum","","",107,null],[12,"msg_qbytes","","",107,null],[12,"msg_lspid","","",107,null],[12,"msg_lrpid","","",107,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",108,null],[12,"sa_mask","","",108,null],[12,"sa_flags","","",108,null],[12,"sa_restorer","","",108,null],[3,"statfs","","",null,null],[12,"f_type","","",109,null],[12,"f_bsize","","",109,null],[12,"f_blocks","","",109,null],[12,"f_bfree","","",109,null],[12,"f_bavail","","",109,null],[12,"f_files","","",109,null],[12,"f_ffree","","",109,null],[12,"f_fsid","","",109,null],[12,"f_namelen","","",109,null],[12,"f_frsize","","",109,null],[3,"flock","","",null,null],[12,"l_type","","",110,null],[12,"l_whence","","",110,null],[12,"l_start","","",110,null],[12,"l_len","","",110,null],[12,"l_pid","","",110,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",111,null],[12,"si_errno","","",111,null],[12,"si_code","","",111,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",112,null],[12,"ss_flags","","",112,null],[12,"ss_size","","",112,null],[3,"stat","","",null,null],[12,"st_dev","","",113,null],[12,"st_ino","","",113,null],[12,"st_nlink","","",113,null],[12,"st_mode","","",113,null],[12,"st_uid","","",113,null],[12,"st_gid","","",113,null],[12,"st_rdev","","",113,null],[12,"st_size","","",113,null],[12,"st_blksize","","",113,null],[12,"st_blocks","","",113,null],[12,"st_atime","","",113,null],[12,"st_atime_nsec","","",113,null],[12,"st_mtime","","",113,null],[12,"st_mtime_nsec","","",113,null],[12,"st_ctime","","",113,null],[12,"st_ctime_nsec","","",113,null],[3,"stat64","","",null,null],[12,"st_dev","","",114,null],[12,"st_ino","","",114,null],[12,"st_nlink","","",114,null],[12,"st_mode","","",114,null],[12,"st_uid","","",114,null],[12,"st_gid","","",114,null],[12,"st_rdev","","",114,null],[12,"st_size","","",114,null],[12,"st_blksize","","",114,null],[12,"st_blocks","","",114,null],[12,"st_atime","","",114,null],[12,"st_atime_nsec","","",114,null],[12,"st_mtime","","",114,null],[12,"st_mtime_nsec","","",114,null],[12,"st_ctime","","",114,null],[12,"st_ctime_nsec","","",114,null],[3,"statfs64","","",null,null],[12,"f_type","","",115,null],[12,"f_bsize","","",115,null],[12,"f_blocks","","",115,null],[12,"f_bfree","","",115,null],[12,"f_bavail","","",115,null],[12,"f_files","","",115,null],[12,"f_ffree","","",115,null],[12,"f_fsid","","",115,null],[12,"f_namelen","","",115,null],[12,"f_frsize","","",115,null],[12,"f_flags","","",115,null],[12,"f_spare","","",115,null],[3,"statvfs64","","",null,null],[12,"f_bsize","","",116,null],[12,"f_frsize","","",116,null],[12,"f_blocks","","",116,null],[12,"f_bfree","","",116,null],[12,"f_bavail","","",116,null],[12,"f_files","","",116,null],[12,"f_ffree","","",116,null],[12,"f_favail","","",116,null],[12,"f_fsid","","",116,null],[12,"f_flag","","",116,null],[12,"f_namemax","","",116,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",117,null],[12,"exponent","","",117,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",118,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",119,null],[12,"swd","","",119,null],[12,"ftw","","",119,null],[12,"fop","","",119,null],[12,"rip","","",119,null],[12,"rdp","","",119,null],[12,"mxcsr","","",119,null],[12,"mxcr_mask","","",119,null],[12,"_st","","",119,null],[12,"_xmm","","",119,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",120,null],[12,"r14","","",120,null],[12,"r13","","",120,null],[12,"r12","","",120,null],[12,"rbp","","",120,null],[12,"rbx","","",120,null],[12,"r11","","",120,null],[12,"r10","","",120,null],[12,"r9","","",120,null],[12,"r8","","",120,null],[12,"rax","","",120,null],[12,"rcx","","",120,null],[12,"rdx","","",120,null],[12,"rsi","","",120,null],[12,"rdi","","",120,null],[12,"orig_rax","","",120,null],[12,"rip","","",120,null],[12,"cs","","",120,null],[12,"eflags","","",120,null],[12,"rsp","","",120,null],[12,"ss","","",120,null],[12,"fs_base","","",120,null],[12,"gs_base","","",120,null],[12,"ds","","",120,null],[12,"es","","",120,null],[12,"fs","","",120,null],[12,"gs","","",120,null],[3,"user","","",null,null],[12,"regs","","",121,null],[12,"u_fpvalid","","",121,null],[12,"i387","","",121,null],[12,"u_tsize","","",121,null],[12,"u_dsize","","",121,null],[12,"u_ssize","","",121,null],[12,"start_code","","",121,null],[12,"start_stack","","",121,null],[12,"signal","","",121,null],[12,"u_ar0","","",121,null],[12,"u_fpstate","","",121,null],[12,"magic","","",121,null],[12,"u_comm","","",121,null],[12,"u_debugreg","","",121,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",122,null],[12,"fpregs","","",122,null],[3,"ipc_perm","","",null,null],[12,"__key","","",123,null],[12,"uid","","",123,null],[12,"gid","","",123,null],[12,"cuid","","",123,null],[12,"cgid","","",123,null],[12,"mode","","",123,null],[12,"__seq","","",123,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",124,null],[12,"shm_segsz","","",124,null],[12,"shm_atime","","",124,null],[12,"shm_dtime","","",124,null],[12,"shm_ctime","","",124,null],[12,"shm_cpid","","",124,null],[12,"shm_lpid","","",124,null],[12,"shm_nattch","","",124,null],[3,"termios2","","",null,null],[12,"c_iflag","","",125,null],[12,"c_oflag","","",125,null],[12,"c_cflag","","",125,null],[12,"c_lflag","","",125,null],[12,"c_line","","",125,null],[12,"c_cc","","",125,null],[12,"c_ispeed","","",125,null],[12,"c_ospeed","","",125,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",126,null],[12,"swd","","",126,null],[12,"ftw","","",126,null],[12,"fop","","",126,null],[12,"rip","","",126,null],[12,"rdp","","",126,null],[12,"mxcsr","","",126,null],[12,"mxcr_mask","","",126,null],[12,"st_space","","",126,null],[12,"xmm_space","","",126,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",127,null],[12,"uc_link","","",127,null],[12,"uc_stack","","",127,null],[12,"uc_mcontext","","",127,null],[12,"uc_sigmask","","",127,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",128,null],[12,"f_frsize","","",128,null],[12,"f_blocks","","",128,null],[12,"f_bfree","","",128,null],[12,"f_bavail","","",128,null],[12,"f_files","","",128,null],[12,"f_ffree","","",128,null],[12,"f_favail","","",128,null],[12,"f_fsid","","",128,null],[12,"f_flag","","",128,null],[12,"f_namemax","","",128,null],[3,"sem_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",129,null],[4,"DIR","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"CMSG_FIRSTHDR","","",null,[[]]],[5,"CMSG_DATA","","",null,[[]]],[5,"CMSG_SPACE","","",null,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN","","",null,[[["c_uint"]],["c_uint"]]],[5,"FD_CLR","","",null,[[["c_int"]]]],[5,"FD_ISSET","","",null,[[["c_int"]],["bool"]]],[5,"FD_SET","","",null,[[["c_int"]]]],[5,"FD_ZERO","","",null,[[]]],[5,"WIFSTOPPED","","",null,[[["c_int"]],["bool"]]],[5,"WSTOPSIG","","",null,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED","","",null,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED","","",null,[[["c_int"]],["bool"]]],[5,"WTERMSIG","","",null,[[["c_int"]],["c_int"]]],[5,"WIFEXITED","","",null,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS","","",null,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP","","",null,[[["c_int"]],["bool"]]],[5,"QCMD","","",null,[[["c_int"]],["c_int"]]],[5,"IPOPT_COPIED","","",null,[[["u8"]],["u8"]]],[5,"IPOPT_CLASS","","",null,[[["u8"]],["u8"]]],[5,"IPOPT_NUMBER","","",null,[[["u8"]],["u8"]]],[5,"IPTOS_ECN","","",null,[[["u8"]],["u8"]]],[5,"NLA_ALIGN","","",null,[[["c_int"]],["c_int"]]],[5,"CMSG_NXTHDR","","",null,[[]]],[5,"CPU_ZERO","","",null,[[["cpu_set_t"]]]],[5,"CPU_SET","","",null,[[["cpu_set_t"],["usize"]]]],[5,"CPU_CLR","","",null,[[["cpu_set_t"],["usize"]]]],[5,"CPU_ISSET","","",null,[[["usize"],["cpu_set_t"]],["bool"]]],[5,"CPU_EQUAL","","",null,[[["cpu_set_t"]],["bool"]]],[5,"major","","",null,[[["dev_t"]],["c_uint"]]],[5,"minor","","",null,[[["dev_t"]],["c_uint"]]],[5,"makedev","","",null,[[["c_uint"]],["dev_t"]]],[5,"IPTOS_TOS","","",null,[[["u8"]],["u8"]]],[5,"IPTOS_PREC","","",null,[[["u8"]],["u8"]]],[5,"RT_TOS","","",null,[[["u8"]],["u8"]]],[5,"RT_ADDRCLASS","","",null,[[["u32"]],["u32"]]],[5,"RT_LOCALADDR","","",null,[[["u32"]],["bool"]]],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strcasecmp","","",null,null],[5,"strncasecmp","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setegid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"ttyname_r","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"mknod","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"timegm","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"strcasestr","","",null,null],[5,"getline","","",null,null],[5,"getsid","","",null,null],[5,"truncate","","",null,null],[5,"pause","","",null,null],[5,"readlinkat","","",null,null],[5,"mkdirat","","",null,null],[5,"openat","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has readdir_r.…",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetspeed","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_init","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"dirfd","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"pipe2","","",null,null],[5,"statfs","","",null,null],[5,"statfs64","","",null,null],[5,"fstatfs","","",null,null],[5,"fstatfs64","","",null,null],[5,"statvfs64","","",null,null],[5,"fstatvfs64","","",null,null],[5,"memrchr","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"fstatat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"preadv64","","",null,null],[5,"pwrite64","","",null,null],[5,"pwritev64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"mknodat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"login_tty","","",null,null],[5,"execvpe","","",null,null],[5,"fexecve","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"uname","","",null,null],[5,"strerror_r","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setgrent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"fallocate64","","",null,null],[5,"posix_fallocate","","",null,null],[5,"posix_fallocate64","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"timerfd_create","","",null,null],[5,"timerfd_gettime","","",null,null],[5,"timerfd_settime","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_timedreceive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_timedsend","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"remap_file_pages","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sync","","",null,null],[5,"syscall","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_wait","","",null,null],[5,"epoll_ctl","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"unshare","","",null,null],[5,"umount","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"tee","","",null,null],[5,"settimeofday","","",null,null],[5,"splice","","",null,null],[5,"eventfd","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"sem_timedwait","","",null,null],[5,"sem_getvalue","","",null,null],[5,"sched_setparam","","",null,null],[5,"setns","","",null,null],[5,"swapoff","","",null,null],[5,"vmsplice","","",null,null],[5,"mount","","",null,null],[5,"personality","","",null,null],[5,"prctl","","",null,null],[5,"sched_getparam","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"clone","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"sethostname","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sysinfo","","",null,null],[5,"umount2","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"swapon","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sendfile","","",null,null],[5,"sigsuspend","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"initgroups","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"getgrouplist","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"dl_iterate_phdr","","",null,null],[5,"setmntent","","",null,null],[5,"getmntent","","",null,null],[5,"addmntent","","",null,null],[5,"endmntent","","",null,null],[5,"hasmntopt","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawnattr_getschedpolicy","","",null,null],[5,"posix_spawnattr_setschedpolicy","","",null,null],[5,"posix_spawnattr_getschedparam","","",null,null],[5,"posix_spawnattr_setschedparam","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"fread_unlocked","","",null,null],[5,"inotify_rm_watch","","",null,null],[5,"inotify_init","","",null,null],[5,"inotify_init1","","",null,null],[5,"inotify_add_watch","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"mallopt","","",null,null],[5,"gettimeofday","","",null,null],[5,"statx","","",null,null],[5,"getrandom","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"mallinfo","","",null,null],[5,"malloc_usable_size","","",null,null],[5,"getauxval","","",null,null],[5,"getpwent_r","","",null,null],[5,"getgrent_r","","",null,null],[5,"pthread_getname_np","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[5,"sysctl","","",null,null],[11,"si_addr","","",111,[[["self"]]]],[11,"si_value","","",111,[[["self"]],["sigval"]]],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"locale_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"loff_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"Elf32_Half","","",null,null],[6,"Elf32_Word","","",null,null],[6,"Elf32_Off","","",null,null],[6,"Elf32_Addr","","",null,null],[6,"Elf64_Half","","",null,null],[6,"Elf64_Word","","",null,null],[6,"Elf64_Off","","",null,null],[6,"Elf64_Addr","","",null,null],[6,"Elf64_Xword","","",null,null],[6,"Elf64_Sxword","","",null,null],[6,"Elf32_Section","","",null,null],[6,"Elf64_Section","","",null,null],[6,"pthread_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"__rlimit_resource_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_CANCELLK","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"F_ADD_SEALS","","",null,null],[17,"F_GET_SEALS","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_ALG","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TOS","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_RECVTOS","","",null,null],[17,"IP_RECVERR","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_RECVTCLASS","","",null,null],[17,"IPV6_TCLASS","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_O_MASK","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"IPTOS_LOWDELAY","","",null,null],[17,"IPTOS_THROUGHPUT","","",null,null],[17,"IPTOS_RELIABILITY","","",null,null],[17,"IPTOS_MINCOST","","",null,null],[17,"IPTOS_PREC_NETCONTROL","","",null,null],[17,"IPTOS_PREC_INTERNETCONTROL","","",null,null],[17,"IPTOS_PREC_CRITIC_ECP","","",null,null],[17,"IPTOS_PREC_FLASHOVERRIDE","","",null,null],[17,"IPTOS_PREC_FLASH","","",null,null],[17,"IPTOS_PREC_IMMEDIATE","","",null,null],[17,"IPTOS_PREC_PRIORITY","","",null,null],[17,"IPTOS_PREC_ROUTINE","","",null,null],[17,"IPTOS_ECN_MASK","","",null,null],[17,"IPTOS_ECN_ECT1","","",null,null],[17,"IPTOS_ECN_ECT0","","",null,null],[17,"IPTOS_ECN_CE","","",null,null],[17,"IPOPT_COPY","","",null,null],[17,"IPOPT_CLASS_MASK","","",null,null],[17,"IPOPT_NUMBER_MASK","","",null,null],[17,"IPOPT_CONTROL","","",null,null],[17,"IPOPT_RESERVED1","","",null,null],[17,"IPOPT_MEASUREMENT","","",null,null],[17,"IPOPT_RESERVED2","","",null,null],[17,"IPOPT_END","","",null,null],[17,"IPOPT_NOOP","","",null,null],[17,"IPOPT_SEC","","",null,null],[17,"IPOPT_LSRR","","",null,null],[17,"IPOPT_TIMESTAMP","","",null,null],[17,"IPOPT_RR","","",null,null],[17,"IPOPT_SID","","",null,null],[17,"IPOPT_SSRR","","",null,null],[17,"IPOPT_RA","","",null,null],[17,"IPVERSION","","",null,null],[17,"MAXTTL","","",null,null],[17,"IPDEFTTL","","",null,null],[17,"IPOPT_OPTVAL","","",null,null],[17,"IPOPT_OLEN","","",null,null],[17,"IPOPT_OFFSET","","",null,null],[17,"IPOPT_MINOFF","","",null,null],[17,"MAX_IPOPTLEN","","",null,null],[17,"IPOPT_NOP","","",null,null],[17,"IPOPT_EOL","","",null,null],[17,"IPOPT_TS","","",null,null],[17,"IPOPT_TS_TSONLY","","",null,null],[17,"IPOPT_TS_TSANDADDR","","",null,null],[17,"IPOPT_TS_PRESPEC","","",null,null],[17,"ARPOP_RREQUEST","","",null,null],[17,"ARPOP_RREPLY","","",null,null],[17,"ARPOP_InREQUEST","","",null,null],[17,"ARPOP_InREPLY","","",null,null],[17,"ARPOP_NAK","","",null,null],[17,"ATF_NETMASK","","",null,null],[17,"ATF_DONTPUB","","",null,null],[17,"ARPHRD_NETROM","","",null,null],[17,"ARPHRD_ETHER","","",null,null],[17,"ARPHRD_EETHER","","",null,null],[17,"ARPHRD_AX25","","",null,null],[17,"ARPHRD_PRONET","","",null,null],[17,"ARPHRD_CHAOS","","",null,null],[17,"ARPHRD_IEEE802","","",null,null],[17,"ARPHRD_ARCNET","","",null,null],[17,"ARPHRD_APPLETLK","","",null,null],[17,"ARPHRD_DLCI","","",null,null],[17,"ARPHRD_ATM","","",null,null],[17,"ARPHRD_METRICOM","","",null,null],[17,"ARPHRD_IEEE1394","","",null,null],[17,"ARPHRD_EUI64","","",null,null],[17,"ARPHRD_INFINIBAND","","",null,null],[17,"ARPHRD_SLIP","","",null,null],[17,"ARPHRD_CSLIP","","",null,null],[17,"ARPHRD_SLIP6","","",null,null],[17,"ARPHRD_CSLIP6","","",null,null],[17,"ARPHRD_RSRVD","","",null,null],[17,"ARPHRD_ADAPT","","",null,null],[17,"ARPHRD_ROSE","","",null,null],[17,"ARPHRD_X25","","",null,null],[17,"ARPHRD_HWX25","","",null,null],[17,"ARPHRD_PPP","","",null,null],[17,"ARPHRD_CISCO","","",null,null],[17,"ARPHRD_HDLC","","",null,null],[17,"ARPHRD_LAPB","","",null,null],[17,"ARPHRD_DDCMP","","",null,null],[17,"ARPHRD_RAWHDLC","","",null,null],[17,"ARPHRD_TUNNEL","","",null,null],[17,"ARPHRD_TUNNEL6","","",null,null],[17,"ARPHRD_FRAD","","",null,null],[17,"ARPHRD_SKIP","","",null,null],[17,"ARPHRD_LOOPBACK","","",null,null],[17,"ARPHRD_LOCALTLK","","",null,null],[17,"ARPHRD_FDDI","","",null,null],[17,"ARPHRD_BIF","","",null,null],[17,"ARPHRD_SIT","","",null,null],[17,"ARPHRD_IPDDP","","",null,null],[17,"ARPHRD_IPGRE","","",null,null],[17,"ARPHRD_PIMREG","","",null,null],[17,"ARPHRD_HIPPI","","",null,null],[17,"ARPHRD_ASH","","",null,null],[17,"ARPHRD_ECONET","","",null,null],[17,"ARPHRD_IRDA","","",null,null],[17,"ARPHRD_FCPP","","",null,null],[17,"ARPHRD_FCAL","","",null,null],[17,"ARPHRD_FCPL","","",null,null],[17,"ARPHRD_FCFABRIC","","",null,null],[17,"ARPHRD_IEEE802_TR","","",null,null],[17,"ARPHRD_IEEE80211","","",null,null],[17,"ARPHRD_IEEE80211_PRISM","","",null,null],[17,"ARPHRD_IEEE80211_RADIOTAP","","",null,null],[17,"ARPHRD_IEEE802154","","",null,null],[17,"ARPHRD_VOID","","",null,null],[17,"ARPHRD_NONE","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_SEAL_FUTURE_WRITE","","",null,null],[17,"IFF_LOWER_UP","","",null,null],[17,"IFF_DORMANT","","",null,null],[17,"IFF_ECHO","","",null,null],[17,"IFA_UNSPEC","","",null,null],[17,"IFA_ADDRESS","","",null,null],[17,"IFA_LOCAL","","",null,null],[17,"IFA_LABEL","","",null,null],[17,"IFA_BROADCAST","","",null,null],[17,"IFA_ANYCAST","","",null,null],[17,"IFA_CACHEINFO","","",null,null],[17,"IFA_MULTICAST","","",null,null],[17,"IFA_F_SECONDARY","","",null,null],[17,"IFA_F_TEMPORARY","","",null,null],[17,"IFA_F_NODAD","","",null,null],[17,"IFA_F_OPTIMISTIC","","",null,null],[17,"IFA_F_DADFAILED","","",null,null],[17,"IFA_F_HOMEADDRESS","","",null,null],[17,"IFA_F_DEPRECATED","","",null,null],[17,"IFA_F_TENTATIVE","","",null,null],[17,"IFA_F_PERMANENT","","",null,null],[17,"IFLA_UNSPEC","","",null,null],[17,"IFLA_ADDRESS","","",null,null],[17,"IFLA_BROADCAST","","",null,null],[17,"IFLA_IFNAME","","",null,null],[17,"IFLA_MTU","","",null,null],[17,"IFLA_LINK","","",null,null],[17,"IFLA_QDISC","","",null,null],[17,"IFLA_STATS","","",null,null],[17,"IFF_TUN","","",null,null],[17,"IFF_TAP","","",null,null],[17,"IFF_NO_PI","","",null,null],[17,"TUN_READQ_SIZE","","",null,null],[17,"TUN_TUN_DEV","","",null,null],[17,"TUN_TAP_DEV","","",null,null],[17,"TUN_TYPE_MASK","","",null,null],[17,"IFF_ONE_QUEUE","","",null,null],[17,"IFF_VNET_HDR","","",null,null],[17,"IFF_TUN_EXCL","","",null,null],[17,"IFF_MULTI_QUEUE","","",null,null],[17,"IFF_ATTACH_QUEUE","","",null,null],[17,"IFF_DETACH_QUEUE","","",null,null],[17,"IFF_PERSIST","","",null,null],[17,"IFF_NOFILTER","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RENAME_NOREPLACE","","",null,null],[17,"RENAME_EXCHANGE","","",null,null],[17,"RENAME_WHITEOUT","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_DCCP","","DCCP",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_PIM","","Protocol indep. multicast",null,null],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_MH","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"AF_XDP","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"PF_XDP","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"GRND_NONBLOCK","","",null,null],[17,"GRND_RANDOM","","",null,null],[17,"SECCOMP_MODE_DISABLED","","",null,null],[17,"SECCOMP_MODE_STRICT","","",null,null],[17,"SECCOMP_MODE_FILTER","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"TFD_CLOEXEC","","",null,null],[17,"TFD_NONBLOCK","","",null,null],[17,"TFD_TIMER_ABSTIME","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"IP_ORIGDSTADDR","","",null,null],[17,"IP_RECVORIGDSTADDR","","",null,null],[17,"IPV6_ORIGDSTADDR","","",null,null],[17,"IPV6_RECVORIGDSTADDR","","",null,null],[17,"IPV6_FLOWINFO","","",null,null],[17,"IPV6_FLOWLABEL_MGR","","",null,null],[17,"IPV6_FLOWINFO_SEND","","",null,null],[17,"IPV6_FLOWINFO_FLOWLABEL","","",null,null],[17,"IPV6_FLOWINFO_PRIORITY","","",null,null],[17,"IUTF8","","",null,null],[17,"CMSPAR","","",null,null],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[17,"MFD_HUGETLB","","",null,null],[17,"PT_NULL","","",null,null],[17,"PT_LOAD","","",null,null],[17,"PT_DYNAMIC","","",null,null],[17,"PT_INTERP","","",null,null],[17,"PT_NOTE","","",null,null],[17,"PT_SHLIB","","",null,null],[17,"PT_PHDR","","",null,null],[17,"PT_TLS","","",null,null],[17,"PT_NUM","","",null,null],[17,"PT_LOOS","","",null,null],[17,"PT_GNU_EH_FRAME","","",null,null],[17,"PT_GNU_STACK","","",null,null],[17,"PT_GNU_RELRO","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_MACSEC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",null,null],[17,"POSIX_SPAWN_SETSCHEDULER","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"GENL_NAMSIZ","","",null,null],[17,"GENL_MIN_ID","","",null,null],[17,"GENL_MAX_ID","","",null,null],[17,"GENL_ADMIN_PERM","","",null,null],[17,"GENL_CMD_CAP_DO","","",null,null],[17,"GENL_CMD_CAP_DUMP","","",null,null],[17,"GENL_CMD_CAP_HASPOL","","",null,null],[17,"GENL_ID_CTRL","","",null,null],[17,"CTRL_CMD_UNSPEC","","",null,null],[17,"CTRL_CMD_NEWFAMILY","","",null,null],[17,"CTRL_CMD_DELFAMILY","","",null,null],[17,"CTRL_CMD_GETFAMILY","","",null,null],[17,"CTRL_CMD_NEWOPS","","",null,null],[17,"CTRL_CMD_DELOPS","","",null,null],[17,"CTRL_CMD_GETOPS","","",null,null],[17,"CTRL_CMD_NEWMCAST_GRP","","",null,null],[17,"CTRL_CMD_DELMCAST_GRP","","",null,null],[17,"CTRL_CMD_GETMCAST_GRP","","",null,null],[17,"CTRL_ATTR_UNSPEC","","",null,null],[17,"CTRL_ATTR_FAMILY_ID","","",null,null],[17,"CTRL_ATTR_FAMILY_NAME","","",null,null],[17,"CTRL_ATTR_VERSION","","",null,null],[17,"CTRL_ATTR_HDRSIZE","","",null,null],[17,"CTRL_ATTR_MAXATTR","","",null,null],[17,"CTRL_ATTR_OPS","","",null,null],[17,"CTRL_ATTR_MCAST_GROUPS","","",null,null],[17,"CTRL_ATTR_OP_UNSPEC","","",null,null],[17,"CTRL_ATTR_OP_ID","","",null,null],[17,"CTRL_ATTR_OP_FLAGS","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_ID","","",null,null],[17,"PACKET_ADD_MEMBERSHIP","","",null,null],[17,"PACKET_DROP_MEMBERSHIP","","",null,null],[17,"PACKET_MR_MULTICAST","","",null,null],[17,"PACKET_MR_PROMISC","","",null,null],[17,"PACKET_MR_ALLMULTI","","",null,null],[17,"PACKET_MR_UNICAST","","",null,null],[17,"NF_DROP","","",null,null],[17,"NF_ACCEPT","","",null,null],[17,"NF_STOLEN","","",null,null],[17,"NF_QUEUE","","",null,null],[17,"NF_REPEAT","","",null,null],[17,"NF_STOP","","",null,null],[17,"NF_MAX_VERDICT","","",null,null],[17,"NF_VERDICT_MASK","","",null,null],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",null,null],[17,"NF_VERDICT_QMASK","","",null,null],[17,"NF_VERDICT_QBITS","","",null,null],[17,"NF_VERDICT_BITS","","",null,null],[17,"NF_INET_PRE_ROUTING","","",null,null],[17,"NF_INET_LOCAL_IN","","",null,null],[17,"NF_INET_FORWARD","","",null,null],[17,"NF_INET_LOCAL_OUT","","",null,null],[17,"NF_INET_POST_ROUTING","","",null,null],[17,"NF_INET_NUMHOOKS","","",null,null],[17,"NFPROTO_UNSPEC","","",null,null],[17,"NFPROTO_IPV4","","",null,null],[17,"NFPROTO_ARP","","",null,null],[17,"NFPROTO_BRIDGE","","",null,null],[17,"NFPROTO_IPV6","","",null,null],[17,"NFPROTO_DECNET","","",null,null],[17,"NFPROTO_NUMPROTO","","",null,null],[17,"NF_IP_PRE_ROUTING","","",null,null],[17,"NF_IP_LOCAL_IN","","",null,null],[17,"NF_IP_FORWARD","","",null,null],[17,"NF_IP_LOCAL_OUT","","",null,null],[17,"NF_IP_POST_ROUTING","","",null,null],[17,"NF_IP_NUMHOOKS","","",null,null],[17,"NF_IP_PRI_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP_PRI_RAW","","",null,null],[17,"NF_IP_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK","","",null,null],[17,"NF_IP_PRI_MANGLE","","",null,null],[17,"NF_IP_PRI_NAT_DST","","",null,null],[17,"NF_IP_PRI_FILTER","","",null,null],[17,"NF_IP_PRI_SECURITY","","",null,null],[17,"NF_IP_PRI_NAT_SRC","","",null,null],[17,"NF_IP_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",null,null],[17,"NF_IP_PRI_LAST","","",null,null],[17,"NF_IP6_PRE_ROUTING","","",null,null],[17,"NF_IP6_LOCAL_IN","","",null,null],[17,"NF_IP6_FORWARD","","",null,null],[17,"NF_IP6_LOCAL_OUT","","",null,null],[17,"NF_IP6_POST_ROUTING","","",null,null],[17,"NF_IP6_NUMHOOKS","","",null,null],[17,"NF_IP6_PRI_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP6_PRI_RAW","","",null,null],[17,"NF_IP6_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK","","",null,null],[17,"NF_IP6_PRI_MANGLE","","",null,null],[17,"NF_IP6_PRI_NAT_DST","","",null,null],[17,"NF_IP6_PRI_FILTER","","",null,null],[17,"NF_IP6_PRI_SECURITY","","",null,null],[17,"NF_IP6_PRI_NAT_SRC","","",null,null],[17,"NF_IP6_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP6_PRI_LAST","","",null,null],[17,"SIOCADDRT","","",null,null],[17,"SIOCDELRT","","",null,null],[17,"SIOCGIFNAME","","",null,null],[17,"SIOCSIFLINK","","",null,null],[17,"SIOCGIFCONF","","",null,null],[17,"SIOCGIFFLAGS","","",null,null],[17,"SIOCSIFFLAGS","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"SIOCSIFADDR","","",null,null],[17,"SIOCGIFDSTADDR","","",null,null],[17,"SIOCSIFDSTADDR","","",null,null],[17,"SIOCGIFBRDADDR","","",null,null],[17,"SIOCSIFBRDADDR","","",null,null],[17,"SIOCGIFNETMASK","","",null,null],[17,"SIOCSIFNETMASK","","",null,null],[17,"SIOCGIFMETRIC","","",null,null],[17,"SIOCSIFMETRIC","","",null,null],[17,"SIOCGIFMEM","","",null,null],[17,"SIOCSIFMEM","","",null,null],[17,"SIOCGIFMTU","","",null,null],[17,"SIOCSIFMTU","","",null,null],[17,"SIOCSIFHWADDR","","",null,null],[17,"SIOCGIFENCAP","","",null,null],[17,"SIOCSIFENCAP","","",null,null],[17,"SIOCGIFHWADDR","","",null,null],[17,"SIOCGIFSLAVE","","",null,null],[17,"SIOCSIFSLAVE","","",null,null],[17,"SIOCADDMULTI","","",null,null],[17,"SIOCDELMULTI","","",null,null],[17,"SIOCDARP","","",null,null],[17,"SIOCGARP","","",null,null],[17,"SIOCSARP","","",null,null],[17,"SIOCDRARP","","",null,null],[17,"SIOCGRARP","","",null,null],[17,"SIOCSRARP","","",null,null],[17,"SIOCGIFMAP","","",null,null],[17,"SIOCSIFMAP","","",null,null],[17,"IPTOS_TOS_MASK","","",null,null],[17,"IPTOS_PREC_MASK","","",null,null],[17,"IPTOS_ECN_NOT_ECT","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REINSTATE","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_MTU","","",null,null],[17,"RTF_MSS","","",null,null],[17,"RTF_WINDOW","","",null,null],[17,"RTF_IRTT","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_NOFORWARD","","",null,null],[17,"RTF_THROW","","",null,null],[17,"RTF_NOPMTUDISC","","",null,null],[17,"RTF_DEFAULT","","",null,null],[17,"RTF_ALLONLINK","","",null,null],[17,"RTF_ADDRCONF","","",null,null],[17,"RTF_LINKRT","","",null,null],[17,"RTF_NONEXTHOP","","",null,null],[17,"RTF_CACHE","","",null,null],[17,"RTF_FLOW","","",null,null],[17,"RTF_POLICY","","",null,null],[17,"RTCF_VALVE","","",null,null],[17,"RTCF_MASQ","","",null,null],[17,"RTCF_NAT","","",null,null],[17,"RTCF_DOREDIRECT","","",null,null],[17,"RTCF_LOG","","",null,null],[17,"RTCF_DIRECTSRC","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_INTERFACE","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_NAT","","",null,null],[17,"RTF_ADDRCLASSMASK","","",null,null],[17,"RT_CLASS_UNSPEC","","",null,null],[17,"RT_CLASS_DEFAULT","","",null,null],[17,"RT_CLASS_MAIN","","",null,null],[17,"RT_CLASS_LOCAL","","",null,null],[17,"RT_CLASS_MAX","","",null,null],[17,"NUD_NONE","","",null,null],[17,"NUD_INCOMPLETE","","",null,null],[17,"NUD_REACHABLE","","",null,null],[17,"NUD_STALE","","",null,null],[17,"NUD_DELAY","","",null,null],[17,"NUD_PROBE","","",null,null],[17,"NUD_FAILED","","",null,null],[17,"NUD_NOARP","","",null,null],[17,"NUD_PERMANENT","","",null,null],[17,"NTF_USE","","",null,null],[17,"NTF_SELF","","",null,null],[17,"NTF_MASTER","","",null,null],[17,"NTF_PROXY","","",null,null],[17,"NTF_ROUTER","","",null,null],[17,"NDA_UNSPEC","","",null,null],[17,"NDA_DST","","",null,null],[17,"NDA_LLADDR","","",null,null],[17,"NDA_CACHEINFO","","",null,null],[17,"NDA_PROBES","","",null,null],[17,"NDA_VLAN","","",null,null],[17,"NDA_PORT","","",null,null],[17,"NDA_VNI","","",null,null],[17,"NDA_IFINDEX","","",null,null],[17,"NLA_ALIGNTO","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"TCA_UNSPEC","","",null,null],[17,"TCA_KIND","","",null,null],[17,"TCA_OPTIONS","","",null,null],[17,"TCA_STATS","","",null,null],[17,"TCA_XSTATS","","",null,null],[17,"TCA_RATE","","",null,null],[17,"TCA_FCNT","","",null,null],[17,"TCA_STATS2","","",null,null],[17,"TCA_STAB","","",null,null],[17,"RTM_NEWLINK","","",null,null],[17,"RTM_DELLINK","","",null,null],[17,"RTM_GETLINK","","",null,null],[17,"RTM_SETLINK","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_GETADDR","","",null,null],[17,"RTM_NEWROUTE","","",null,null],[17,"RTM_DELROUTE","","",null,null],[17,"RTM_GETROUTE","","",null,null],[17,"RTM_NEWNEIGH","","",null,null],[17,"RTM_DELNEIGH","","",null,null],[17,"RTM_GETNEIGH","","",null,null],[17,"RTM_NEWRULE","","",null,null],[17,"RTM_DELRULE","","",null,null],[17,"RTM_GETRULE","","",null,null],[17,"RTM_NEWQDISC","","",null,null],[17,"RTM_DELQDISC","","",null,null],[17,"RTM_GETQDISC","","",null,null],[17,"RTM_NEWTCLASS","","",null,null],[17,"RTM_DELTCLASS","","",null,null],[17,"RTM_GETTCLASS","","",null,null],[17,"RTM_NEWTFILTER","","",null,null],[17,"RTM_DELTFILTER","","",null,null],[17,"RTM_GETTFILTER","","",null,null],[17,"RTM_NEWACTION","","",null,null],[17,"RTM_DELACTION","","",null,null],[17,"RTM_GETACTION","","",null,null],[17,"RTM_NEWPREFIX","","",null,null],[17,"RTM_GETMULTICAST","","",null,null],[17,"RTM_GETANYCAST","","",null,null],[17,"RTM_NEWNEIGHTBL","","",null,null],[17,"RTM_GETNEIGHTBL","","",null,null],[17,"RTM_SETNEIGHTBL","","",null,null],[17,"RTM_NEWNDUSEROPT","","",null,null],[17,"RTM_NEWADDRLABEL","","",null,null],[17,"RTM_DELADDRLABEL","","",null,null],[17,"RTM_GETADDRLABEL","","",null,null],[17,"RTM_GETDCB","","",null,null],[17,"RTM_SETDCB","","",null,null],[17,"RTM_NEWNETCONF","","",null,null],[17,"RTM_GETNETCONF","","",null,null],[17,"RTM_NEWMDB","","",null,null],[17,"RTM_DELMDB","","",null,null],[17,"RTM_GETMDB","","",null,null],[17,"RTM_NEWNSID","","",null,null],[17,"RTM_DELNSID","","",null,null],[17,"RTM_GETNSID","","",null,null],[17,"RTM_F_NOTIFY","","",null,null],[17,"RTM_F_CLONED","","",null,null],[17,"RTM_F_EQUALIZE","","",null,null],[17,"RTM_F_PREFIX","","",null,null],[17,"RTA_UNSPEC","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_SRC","","",null,null],[17,"RTA_IIF","","",null,null],[17,"RTA_OIF","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_PRIORITY","","",null,null],[17,"RTA_PREFSRC","","",null,null],[17,"RTA_METRICS","","",null,null],[17,"RTA_MULTIPATH","","",null,null],[17,"RTA_PROTOINFO","","",null,null],[17,"RTA_FLOW","","",null,null],[17,"RTA_CACHEINFO","","",null,null],[17,"RTA_SESSION","","",null,null],[17,"RTA_MP_ALGO","","",null,null],[17,"RTA_TABLE","","",null,null],[17,"RTA_MARK","","",null,null],[17,"RTA_MFC_STATS","","",null,null],[17,"RTN_UNSPEC","","",null,null],[17,"RTN_UNICAST","","",null,null],[17,"RTN_LOCAL","","",null,null],[17,"RTN_BROADCAST","","",null,null],[17,"RTN_ANYCAST","","",null,null],[17,"RTN_MULTICAST","","",null,null],[17,"RTN_BLACKHOLE","","",null,null],[17,"RTN_UNREACHABLE","","",null,null],[17,"RTN_PROHIBIT","","",null,null],[17,"RTN_THROW","","",null,null],[17,"RTN_NAT","","",null,null],[17,"RTN_XRESOLVE","","",null,null],[17,"RTPROT_UNSPEC","","",null,null],[17,"RTPROT_REDIRECT","","",null,null],[17,"RTPROT_KERNEL","","",null,null],[17,"RTPROT_BOOT","","",null,null],[17,"RTPROT_STATIC","","",null,null],[17,"RT_SCOPE_UNIVERSE","","",null,null],[17,"RT_SCOPE_SITE","","",null,null],[17,"RT_SCOPE_LINK","","",null,null],[17,"RT_SCOPE_HOST","","",null,null],[17,"RT_SCOPE_NOWHERE","","",null,null],[17,"RT_TABLE_UNSPEC","","",null,null],[17,"RT_TABLE_COMPAT","","",null,null],[17,"RT_TABLE_DEFAULT","","",null,null],[17,"RT_TABLE_MAIN","","",null,null],[17,"RT_TABLE_LOCAL","","",null,null],[17,"RTMSG_OVERRUN","","",null,null],[17,"RTMSG_NEWDEVICE","","",null,null],[17,"RTMSG_DELDEVICE","","",null,null],[17,"RTMSG_NEWROUTE","","",null,null],[17,"RTMSG_DELROUTE","","",null,null],[17,"RTMSG_NEWRULE","","",null,null],[17,"RTMSG_DELRULE","","",null,null],[17,"RTMSG_CONTROL","","",null,null],[17,"RTMSG_AR_FAILED","","",null,null],[17,"MAX_ADDR_LEN","","",null,null],[17,"ARPD_UPDATE","","",null,null],[17,"ARPD_LOOKUP","","",null,null],[17,"ARPD_FLUSH","","",null,null],[17,"ATF_MAGIC","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",null,null],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",null,null],[17,"SOF_TIMESTAMPING_TX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_TX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SYS_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RAW_HARDWARE","","",null,null],[17,"ALG_SET_KEY","","",null,null],[17,"ALG_SET_IV","","",null,null],[17,"ALG_SET_OP","","",null,null],[17,"ALG_SET_AEAD_ASSOCLEN","","",null,null],[17,"ALG_SET_AEAD_AUTHSIZE","","",null,null],[17,"ALG_OP_DECRYPT","","",null,null],[17,"ALG_OP_ENCRYPT","","",null,null],[17,"VMADDR_CID_ANY","","",null,null],[17,"VMADDR_CID_HYPERVISOR","","",null,null],[17,"VMADDR_CID_RESERVED","","",null,null],[17,"VMADDR_CID_HOST","","",null,null],[17,"VMADDR_PORT_ANY","","",null,null],[17,"IN_ACCESS","","",null,null],[17,"IN_MODIFY","","",null,null],[17,"IN_ATTRIB","","",null,null],[17,"IN_CLOSE_WRITE","","",null,null],[17,"IN_CLOSE_NOWRITE","","",null,null],[17,"IN_CLOSE","","",null,null],[17,"IN_OPEN","","",null,null],[17,"IN_MOVED_FROM","","",null,null],[17,"IN_MOVED_TO","","",null,null],[17,"IN_MOVE","","",null,null],[17,"IN_CREATE","","",null,null],[17,"IN_DELETE","","",null,null],[17,"IN_DELETE_SELF","","",null,null],[17,"IN_MOVE_SELF","","",null,null],[17,"IN_UNMOUNT","","",null,null],[17,"IN_Q_OVERFLOW","","",null,null],[17,"IN_IGNORED","","",null,null],[17,"IN_ONLYDIR","","",null,null],[17,"IN_DONT_FOLLOW","","",null,null],[17,"IN_ISDIR","","",null,null],[17,"IN_ONESHOT","","",null,null],[17,"IN_ALL_EVENTS","","",null,null],[17,"IN_CLOEXEC","","",null,null],[17,"IN_NONBLOCK","","",null,null],[17,"FUTEX_WAIT","","",null,null],[17,"FUTEX_WAKE","","",null,null],[17,"FUTEX_FD","","",null,null],[17,"FUTEX_REQUEUE","","",null,null],[17,"FUTEX_CMP_REQUEUE","","",null,null],[17,"FUTEX_WAKE_OP","","",null,null],[17,"FUTEX_LOCK_PI","","",null,null],[17,"FUTEX_UNLOCK_PI","","",null,null],[17,"FUTEX_TRYLOCK_PI","","",null,null],[17,"FUTEX_WAIT_BITSET","","",null,null],[17,"FUTEX_WAKE_BITSET","","",null,null],[17,"FUTEX_WAIT_REQUEUE_PI","","",null,null],[17,"FUTEX_CMP_REQUEUE_PI","","",null,null],[17,"FUTEX_PRIVATE_FLAG","","",null,null],[17,"FUTEX_CLOCK_REALTIME","","",null,null],[17,"FUTEX_CMD_MASK","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_NFC","","",null,null],[17,"SOL_XDP","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_SHARED_VALIDATE","","",null,null],[17,"MAP_FIXED_NOREPLACE","","",null,null],[17,"ENOTSUP","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_DCCP","","",null,null],[17,"SOCK_PACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",null,null],[17,"DCCP_SOCKOPT_SERVICE","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_L","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_R","","",null,null],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",null,null],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",null,null],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",null,null],[17,"DCCP_SOCKOPT_CCID","","",null,null],[17,"DCCP_SOCKOPT_TX_CCID","","",null,null],[17,"DCCP_SOCKOPT_RX_CCID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",null,null],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",null,null],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",null,null],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening…",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"TCA_PAD","","",null,null],[17,"TCA_DUMP_INVISIBLE","","",null,null],[17,"TCA_CHAIN","","",null,null],[17,"TCA_HW_OFFLOAD","","",null,null],[17,"RTM_DELNETCONF","","",null,null],[17,"RTM_NEWSTATS","","",null,null],[17,"RTM_GETSTATS","","",null,null],[17,"RTM_NEWCACHEREPORT","","",null,null],[17,"RTM_F_LOOKUP_TABLE","","",null,null],[17,"RTM_F_FIB_MATCH","","",null,null],[17,"RTA_VIA","","",null,null],[17,"RTA_NEWDST","","",null,null],[17,"RTA_PREF","","",null,null],[17,"RTA_ENCAP_TYPE","","",null,null],[17,"RTA_ENCAP","","",null,null],[17,"RTA_EXPIRES","","",null,null],[17,"RTA_PAD","","",null,null],[17,"RTA_UID","","",null,null],[17,"RTA_TTL_PROPAGATE","","",null,null],[17,"NTF_EXT_LEARNED","","",null,null],[17,"NTF_OFFLOADED","","",null,null],[17,"NDA_MASTER","","",null,null],[17,"NDA_LINK_NETNSID","","",null,null],[17,"NDA_SRC_VNI","","",null,null],[17,"IFA_FLAGS","","",null,null],[17,"IFA_F_MANAGETEMPADDR","","",null,null],[17,"IFA_F_NOPREFIXROUTE","","",null,null],[17,"IFA_F_MCAUTOJOIN","","",null,null],[17,"IFA_F_STABLE_PRIVACY","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"GENL_UNS_ADMIN_PERM","","",null,null],[17,"GENL_ID_VFS_DQUOT","","",null,null],[17,"GENL_ID_PMCRAID","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"NF_NETDEV_INGRESS","","",null,null],[17,"NF_NETDEV_NUMHOOKS","","",null,null],[17,"NFPROTO_INET","","",null,null],[17,"NFPROTO_NETDEV","","",null,null],[17,"NFT_TABLE_MAXNAMELEN","","",null,null],[17,"NFT_CHAIN_MAXNAMELEN","","",null,null],[17,"NFT_SET_MAXNAMELEN","","",null,null],[17,"NFT_OBJ_MAXNAMELEN","","",null,null],[17,"NFT_USERDATA_MAXLEN","","",null,null],[17,"NFT_REG_VERDICT","","",null,null],[17,"NFT_REG_1","","",null,null],[17,"NFT_REG_2","","",null,null],[17,"NFT_REG_3","","",null,null],[17,"NFT_REG_4","","",null,null],[17,"__NFT_REG_MAX","","",null,null],[17,"NFT_REG32_00","","",null,null],[17,"NFT_REG32_01","","",null,null],[17,"NFT_REG32_02","","",null,null],[17,"NFT_REG32_03","","",null,null],[17,"NFT_REG32_04","","",null,null],[17,"NFT_REG32_05","","",null,null],[17,"NFT_REG32_06","","",null,null],[17,"NFT_REG32_07","","",null,null],[17,"NFT_REG32_08","","",null,null],[17,"NFT_REG32_09","","",null,null],[17,"NFT_REG32_10","","",null,null],[17,"NFT_REG32_11","","",null,null],[17,"NFT_REG32_12","","",null,null],[17,"NFT_REG32_13","","",null,null],[17,"NFT_REG32_14","","",null,null],[17,"NFT_REG32_15","","",null,null],[17,"NFT_REG_SIZE","","",null,null],[17,"NFT_REG32_SIZE","","",null,null],[17,"NFT_CONTINUE","","",null,null],[17,"NFT_BREAK","","",null,null],[17,"NFT_JUMP","","",null,null],[17,"NFT_GOTO","","",null,null],[17,"NFT_RETURN","","",null,null],[17,"NFT_MSG_NEWTABLE","","",null,null],[17,"NFT_MSG_GETTABLE","","",null,null],[17,"NFT_MSG_DELTABLE","","",null,null],[17,"NFT_MSG_NEWCHAIN","","",null,null],[17,"NFT_MSG_GETCHAIN","","",null,null],[17,"NFT_MSG_DELCHAIN","","",null,null],[17,"NFT_MSG_NEWRULE","","",null,null],[17,"NFT_MSG_GETRULE","","",null,null],[17,"NFT_MSG_DELRULE","","",null,null],[17,"NFT_MSG_NEWSET","","",null,null],[17,"NFT_MSG_GETSET","","",null,null],[17,"NFT_MSG_DELSET","","",null,null],[17,"NFT_MSG_NEWSETELEM","","",null,null],[17,"NFT_MSG_GETSETELEM","","",null,null],[17,"NFT_MSG_DELSETELEM","","",null,null],[17,"NFT_MSG_NEWGEN","","",null,null],[17,"NFT_MSG_GETGEN","","",null,null],[17,"NFT_MSG_TRACE","","",null,null],[17,"NFT_MSG_NEWOBJ","","",null,null],[17,"NFT_MSG_GETOBJ","","",null,null],[17,"NFT_MSG_DELOBJ","","",null,null],[17,"NFT_MSG_GETOBJ_RESET","","",null,null],[17,"NFT_MSG_MAX","","",null,null],[17,"NFT_SET_ANONYMOUS","","",null,null],[17,"NFT_SET_CONSTANT","","",null,null],[17,"NFT_SET_INTERVAL","","",null,null],[17,"NFT_SET_MAP","","",null,null],[17,"NFT_SET_TIMEOUT","","",null,null],[17,"NFT_SET_EVAL","","",null,null],[17,"NFT_SET_POL_PERFORMANCE","","",null,null],[17,"NFT_SET_POL_MEMORY","","",null,null],[17,"NFT_SET_ELEM_INTERVAL_END","","",null,null],[17,"NFT_DATA_VALUE","","",null,null],[17,"NFT_DATA_VERDICT","","",null,null],[17,"NFT_DATA_RESERVED_MASK","","",null,null],[17,"NFT_DATA_VALUE_MAXLEN","","",null,null],[17,"NFT_BYTEORDER_NTOH","","",null,null],[17,"NFT_BYTEORDER_HTON","","",null,null],[17,"NFT_CMP_EQ","","",null,null],[17,"NFT_CMP_NEQ","","",null,null],[17,"NFT_CMP_LT","","",null,null],[17,"NFT_CMP_LTE","","",null,null],[17,"NFT_CMP_GT","","",null,null],[17,"NFT_CMP_GTE","","",null,null],[17,"NFT_RANGE_EQ","","",null,null],[17,"NFT_RANGE_NEQ","","",null,null],[17,"NFT_LOOKUP_F_INV","","",null,null],[17,"NFT_DYNSET_OP_ADD","","",null,null],[17,"NFT_DYNSET_OP_UPDATE","","",null,null],[17,"NFT_DYNSET_F_INV","","",null,null],[17,"NFT_PAYLOAD_LL_HEADER","","",null,null],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",null,null],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",null,null],[17,"NFT_PAYLOAD_CSUM_NONE","","",null,null],[17,"NFT_PAYLOAD_CSUM_INET","","",null,null],[17,"NFT_META_LEN","","",null,null],[17,"NFT_META_PROTOCOL","","",null,null],[17,"NFT_META_PRIORITY","","",null,null],[17,"NFT_META_MARK","","",null,null],[17,"NFT_META_IIF","","",null,null],[17,"NFT_META_OIF","","",null,null],[17,"NFT_META_IIFNAME","","",null,null],[17,"NFT_META_OIFNAME","","",null,null],[17,"NFT_META_IIFTYPE","","",null,null],[17,"NFT_META_OIFTYPE","","",null,null],[17,"NFT_META_SKUID","","",null,null],[17,"NFT_META_SKGID","","",null,null],[17,"NFT_META_NFTRACE","","",null,null],[17,"NFT_META_RTCLASSID","","",null,null],[17,"NFT_META_SECMARK","","",null,null],[17,"NFT_META_NFPROTO","","",null,null],[17,"NFT_META_L4PROTO","","",null,null],[17,"NFT_META_BRI_IIFNAME","","",null,null],[17,"NFT_META_BRI_OIFNAME","","",null,null],[17,"NFT_META_PKTTYPE","","",null,null],[17,"NFT_META_CPU","","",null,null],[17,"NFT_META_IIFGROUP","","",null,null],[17,"NFT_META_OIFGROUP","","",null,null],[17,"NFT_META_CGROUP","","",null,null],[17,"NFT_META_PRANDOM","","",null,null],[17,"NFT_CT_STATE","","",null,null],[17,"NFT_CT_DIRECTION","","",null,null],[17,"NFT_CT_STATUS","","",null,null],[17,"NFT_CT_MARK","","",null,null],[17,"NFT_CT_SECMARK","","",null,null],[17,"NFT_CT_EXPIRATION","","",null,null],[17,"NFT_CT_HELPER","","",null,null],[17,"NFT_CT_L3PROTOCOL","","",null,null],[17,"NFT_CT_SRC","","",null,null],[17,"NFT_CT_DST","","",null,null],[17,"NFT_CT_PROTOCOL","","",null,null],[17,"NFT_CT_PROTO_SRC","","",null,null],[17,"NFT_CT_PROTO_DST","","",null,null],[17,"NFT_CT_LABELS","","",null,null],[17,"NFT_CT_PKTS","","",null,null],[17,"NFT_CT_BYTES","","",null,null],[17,"NFT_LIMIT_PKTS","","",null,null],[17,"NFT_LIMIT_PKT_BYTES","","",null,null],[17,"NFT_LIMIT_F_INV","","",null,null],[17,"NFT_QUEUE_FLAG_BYPASS","","",null,null],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",null,null],[17,"NFT_QUEUE_FLAG_MASK","","",null,null],[17,"NFT_QUOTA_F_INV","","",null,null],[17,"NFT_REJECT_ICMP_UNREACH","","",null,null],[17,"NFT_REJECT_TCP_RST","","",null,null],[17,"NFT_REJECT_ICMPX_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",null,null],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",null,null],[17,"NFT_NAT_SNAT","","",null,null],[17,"NFT_NAT_DNAT","","",null,null],[17,"NFT_TRACETYPE_UNSPEC","","",null,null],[17,"NFT_TRACETYPE_POLICY","","",null,null],[17,"NFT_TRACETYPE_RETURN","","",null,null],[17,"NFT_TRACETYPE_RULE","","",null,null],[17,"NFT_NG_INCREMENTAL","","",null,null],[17,"NFT_NG_RANDOM","","",null,null],[17,"M_MXFAST","","",null,null],[17,"M_NLBLKS","","",null,null],[17,"M_GRAIN","","",null,null],[17,"M_KEEP","","",null,null],[17,"M_TRIM_THRESHOLD","","",null,null],[17,"M_TOP_PAD","","",null,null],[17,"M_MMAP_THRESHOLD","","",null,null],[17,"M_MMAP_MAX","","",null,null],[17,"M_CHECK_ACTION","","",null,null],[17,"M_PERTURB","","",null,null],[17,"M_ARENA_TEST","","",null,null],[17,"M_ARENA_MAX","","",null,null],[17,"AT_STATX_SYNC_TYPE","","",null,null],[17,"AT_STATX_SYNC_AS_STAT","","",null,null],[17,"AT_STATX_FORCE_SYNC","","",null,null],[17,"AT_STATX_DONT_SYNC","","",null,null],[17,"STATX_TYPE","","",null,null],[17,"STATX_MODE","","",null,null],[17,"STATX_NLINK","","",null,null],[17,"STATX_UID","","",null,null],[17,"STATX_GID","","",null,null],[17,"STATX_ATIME","","",null,null],[17,"STATX_MTIME","","",null,null],[17,"STATX_CTIME","","",null,null],[17,"STATX_INO","","",null,null],[17,"STATX_SIZE","","",null,null],[17,"STATX_BLOCKS","","",null,null],[17,"STATX_BASIC_STATS","","",null,null],[17,"STATX_BTIME","","",null,null],[17,"STATX_ALL","","",null,null],[17,"STATX__RESERVED","","",null,null],[17,"STATX_ATTR_COMPRESSED","","",null,null],[17,"STATX_ATTR_IMMUTABLE","","",null,null],[17,"STATX_ATTR_APPEND","","",null,null],[17,"STATX_ATTR_NODUMP","","",null,null],[17,"STATX_ATTR_ENCRYPTED","","",null,null],[17,"STATX_ATTR_AUTOMOUNT","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"VEOF","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCGRS485","","",null,null],[17,"TIOCSRS485","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"MADV_SOFT_OFFLINE","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"BOTHER","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null],[17,"REG_R8","","",null,null],[17,"REG_R9","","",null,null],[17,"REG_R10","","",null,null],[17,"REG_R11","","",null,null],[17,"REG_R12","","",null,null],[17,"REG_R13","","",null,null],[17,"REG_R14","","",null,null],[17,"REG_R15","","",null,null],[17,"REG_RDI","","",null,null],[17,"REG_RSI","","",null,null],[17,"REG_RBP","","",null,null],[17,"REG_RBX","","",null,null],[17,"REG_RDX","","",null,null],[17,"REG_RAX","","",null,null],[17,"REG_RCX","","",null,null],[17,"REG_RSP","","",null,null],[17,"REG_RIP","","",null,null],[17,"REG_EFL","","",null,null],[17,"REG_CSGSFS","","",null,null],[17,"REG_ERR","","",null,null],[17,"REG_TRAPNO","","",null,null],[17,"REG_OLDMASK","","",null,null],[17,"REG_CR2","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null],[17,"SYS_statx","","",null,null],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"into","","",130,[[],["u"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"into","","",131,[[],["u"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"into","","",132,[[],["u"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"into","","",35,[[],["u"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"into","","",36,[[],["u"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"into","","",44,[[],["u"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into","","",45,[[],["u"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"into","","",133,[[],["u"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"into","","",46,[[],["u"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"into","","",134,[[],["u"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"into","","",47,[[],["u"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"into","","",48,[[],["u"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"into","","",49,[[],["u"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"into","","",50,[[],["u"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"into","","",51,[[],["u"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"into","","",52,[[],["u"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"into","","",53,[[],["u"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"into","","",54,[[],["u"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"into","","",55,[[],["u"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"into","","",56,[[],["u"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"into","","",57,[[],["u"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"into","","",58,[[],["u"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"into","","",59,[[],["u"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"into","","",60,[[],["u"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"into","","",61,[[],["u"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"into","","",62,[[],["u"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"into","","",63,[[],["u"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"into","","",64,[[],["u"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"into","","",65,[[],["u"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"into","","",66,[[],["u"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"into","","",67,[[],["u"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"into","","",68,[[],["u"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"into","","",69,[[],["u"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"into","","",70,[[],["u"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"into","","",71,[[],["u"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"into","","",72,[[],["u"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"into","","",73,[[],["u"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"into","","",74,[[],["u"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"into","","",75,[[],["u"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"into","","",76,[[],["u"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"into","","",135,[[],["u"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"into","","",136,[[],["u"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"into","","",77,[[],["u"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"into","","",78,[[],["u"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"into","","",79,[[],["u"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"into","","",80,[[],["u"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"into","","",81,[[],["u"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"into","","",82,[[],["u"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"into","","",83,[[],["u"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"into","","",84,[[],["u"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"into","","",85,[[],["u"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"into","","",86,[[],["u"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"into","","",87,[[],["u"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"into","","",88,[[],["u"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"into","","",89,[[],["u"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"into","","",90,[[],["u"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"into","","",91,[[],["u"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"into","","",92,[[],["u"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"into","","",93,[[],["u"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"into","","",94,[[],["u"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"into","","",95,[[],["u"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"into","","",96,[[],["u"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"into","","",97,[[],["u"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"into","","",98,[[],["u"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"into","","",99,[[],["u"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"into","","",100,[[],["u"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"into","","",101,[[],["u"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"into","","",102,[[],["u"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"into","","",103,[[],["u"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"into","","",104,[[],["u"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"into","","",105,[[],["u"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"into","","",137,[[],["u"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"into","","",106,[[],["u"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"into","","",107,[[],["u"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"into","","",108,[[],["u"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"into","","",109,[[],["u"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"into","","",110,[[],["u"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"into","","",111,[[],["u"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"into","","",112,[[],["u"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"into","","",113,[[],["u"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"into","","",114,[[],["u"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"into","","",115,[[],["u"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"into","","",116,[[],["u"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"into","","",138,[[],["u"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"into","","",117,[[],["u"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"into","","",118,[[],["u"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"into","","",119,[[],["u"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"into","","",120,[[],["u"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"into","","",121,[[],["u"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"into","","",122,[[],["u"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"into","","",123,[[],["u"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"into","","",124,[[],["u"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"into","","",125,[[],["u"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"into","","",126,[[],["u"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"into","","",127,[[],["u"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"into","","",128,[[],["u"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"into","","",139,[[],["u"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"into","","",140,[[],["u"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"into","","",141,[[],["u"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"into","","",142,[[],["u"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"into","","",143,[[],["u"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"into","","",144,[[],["u"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"into","","",145,[[],["u"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"into","","",129,[[],["u"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"into","","",146,[[],["u"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"into","","",147,[[],["u"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"into","","",148,[[],["u"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"into","","",149,[[],["u"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"into","","",150,[[],["u"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"fmt","","",130,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"clone","","",146,[[["self"]],["dir"]]],[11,"clone","","",0,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["utimbuf"]]],[11,"clone","","",2,[[["self"]],["timeval"]]],[11,"clone","","",3,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["rlimit"]]],[11,"clone","","",5,[[["self"]],["rusage"]]],[11,"clone","","",6,[[["self"]],["ipv6_mreq"]]],[11,"clone","","",7,[[["self"]],["hostent"]]],[11,"clone","","",8,[[["self"]],["iovec"]]],[11,"clone","","",9,[[["self"]],["pollfd"]]],[11,"clone","","",10,[[["self"]],["winsize"]]],[11,"clone","","",11,[[["self"]],["linger"]]],[11,"clone","","",12,[[["self"]],["sigval"]]],[11,"clone","","",13,[[["self"]],["itimerval"]]],[11,"clone","","",14,[[["self"]],["tms"]]],[11,"clone","","",15,[[["self"]],["servent"]]],[11,"clone","","",16,[[["self"]],["protoent"]]],[11,"clone","","",147,[[["self"]],["file"]]],[11,"clone","","",148,[[["self"]],["fpos_t"]]],[11,"clone","","",149,[[["self"]],["timezone"]]],[11,"clone","","",17,[[["self"]],["in_addr"]]],[11,"clone","","",18,[[["self"]],["ip_mreq"]]],[11,"clone","","",19,[[["self"]],["sockaddr"]]],[11,"clone","","",20,[[["self"]],["sockaddr_in"]]],[11,"clone","","",21,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",22,[[["self"]],["addrinfo"]]],[11,"clone","","",23,[[["self"]],["sockaddr_ll"]]],[11,"clone","","",131,[[["self"]],["fd_set"]]],[11,"clone","","",24,[[["self"]],["tm"]]],[11,"clone","","",25,[[["self"]],["sched_param"]]],[11,"clone","","",26,[[["self"]],["dl_info"]]],[11,"clone","","",27,[[["self"]],["lconv"]]],[11,"clone","","",28,[[["self"]],["in_pktinfo"]]],[11,"clone","","",29,[[["self"]],["ifaddrs"]]],[11,"clone","","",132,[[["self"]],["in6_rtmsg"]]],[11,"clone","","",30,[[["self"]],["arpreq"]]],[11,"clone","","",31,[[["self"]],["arpreq_old"]]],[11,"clone","","",32,[[["self"]],["arphdr"]]],[11,"clone","","",33,[[["self"]],["mmsghdr"]]],[11,"clone","","",34,[[["self"]],["epoll_event"]]],[11,"clone","","",35,[[["self"]],["sockaddr_un"]]],[11,"clone","","",36,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",37,[[["self"]],["utsname"]]],[11,"clone","","",38,[[["self"]],["sigevent"]]],[11,"clone","","",150,[[["self"]],["fpos64_t"]]],[11,"clone","","",39,[[["self"]],["rlimit64"]]],[11,"clone","","",40,[[["self"]],["glob_t"]]],[11,"clone","","",41,[[["self"]],["passwd"]]],[11,"clone","","",42,[[["self"]],["spwd"]]],[11,"clone","","",43,[[["self"]],["dqblk"]]],[11,"clone","","",44,[[["self"]],["signalfd_siginfo"]]],[11,"clone","","",45,[[["self"]],["itimerspec"]]],[11,"clone","","",133,[[["self"]],["fsid_t"]]],[11,"clone","","",46,[[["self"]],["packet_mreq"]]],[11,"clone","","",134,[[["self"]],["cpu_set_t"]]],[11,"clone","","",47,[[["self"]],["if_nameindex"]]],[11,"clone","","",48,[[["self"]],["msginfo"]]],[11,"clone","","",49,[[["self"]],["sembuf"]]],[11,"clone","","",50,[[["self"]],["input_event"]]],[11,"clone","","",51,[[["self"]],["input_id"]]],[11,"clone","","",52,[[["self"]],["input_absinfo"]]],[11,"clone","","",53,[[["self"]],["input_keymap_entry"]]],[11,"clone","","",54,[[["self"]],["input_mask"]]],[11,"clone","","",55,[[["self"]],["ff_replay"]]],[11,"clone","","",56,[[["self"]],["ff_trigger"]]],[11,"clone","","",57,[[["self"]],["ff_envelope"]]],[11,"clone","","",58,[[["self"]],["ff_constant_effect"]]],[11,"clone","","",59,[[["self"]],["ff_ramp_effect"]]],[11,"clone","","",60,[[["self"]],["ff_condition_effect"]]],[11,"clone","","",61,[[["self"]],["ff_periodic_effect"]]],[11,"clone","","",62,[[["self"]],["ff_rumble_effect"]]],[11,"clone","","",63,[[["self"]],["ff_effect"]]],[11,"clone","","",64,[[["self"]],["dl_phdr_info"]]],[11,"clone","","",65,[[["self"]],["elf32_ehdr"]]],[11,"clone","","",66,[[["self"]],["elf64_ehdr"]]],[11,"clone","","",67,[[["self"]],["elf32_sym"]]],[11,"clone","","",68,[[["self"]],["elf64_sym"]]],[11,"clone","","",69,[[["self"]],["elf32_phdr"]]],[11,"clone","","",70,[[["self"]],["elf64_phdr"]]],[11,"clone","","",71,[[["self"]],["elf32_shdr"]]],[11,"clone","","",72,[[["self"]],["elf64_shdr"]]],[11,"clone","","",73,[[["self"]],["elf32_chdr"]]],[11,"clone","","",74,[[["self"]],["elf64_chdr"]]],[11,"clone","","",75,[[["self"]],["ucred"]]],[11,"clone","","",76,[[["self"]],["mntent"]]],[11,"clone","","",135,[[["self"]],["posix_spawn_file_actions_t"]]],[11,"clone","","",136,[[["self"]],["posix_spawnattr_t"]]],[11,"clone","","",77,[[["self"]],["genlmsghdr"]]],[11,"clone","","",78,[[["self"]],["in6_pktinfo"]]],[11,"clone","","",79,[[["self"]],["arpd_request"]]],[11,"clone","","",80,[[["self"]],["inotify_event"]]],[11,"clone","","",81,[[["self"]],["sockaddr_vm"]]],[11,"clone","","",82,[[["self"]],["sockaddr_nl"]]],[11,"clone","","",83,[[["self"]],["dirent"]]],[11,"clone","","",84,[[["self"]],["dirent64"]]],[11,"clone","","",85,[[["self"]],["sockaddr_alg"]]],[11,"clone","","",86,[[["self"]],["af_alg_iv"]]],[11,"clone","","",87,[[["self"]],["mq_attr"]]],[11,"clone","","",88,[[["self"]],["statx"]]],[11,"clone","","",89,[[["self"]],["statx_timestamp"]]],[11,"clone","","",90,[[["self"]],["aiocb"]]],[11,"clone","","",91,[[["self"]],["__exit_status"]]],[11,"clone","","",92,[[["self"]],["__timeval"]]],[11,"clone","","",93,[[["self"]],["glob64_t"]]],[11,"clone","","",94,[[["self"]],["msghdr"]]],[11,"clone","","",95,[[["self"]],["cmsghdr"]]],[11,"clone","","",96,[[["self"]],["termios"]]],[11,"clone","","",97,[[["self"]],["mallinfo"]]],[11,"clone","","",98,[[["self"]],["nlmsghdr"]]],[11,"clone","","",99,[[["self"]],["nlmsgerr"]]],[11,"clone","","",100,[[["self"]],["nl_pktinfo"]]],[11,"clone","","",101,[[["self"]],["nl_mmap_req"]]],[11,"clone","","",102,[[["self"]],["nl_mmap_hdr"]]],[11,"clone","","",103,[[["self"]],["nlattr"]]],[11,"clone","","",104,[[["self"]],["rtentry"]]],[11,"clone","","",105,[[["self"]],["utmpx"]]],[11,"clone","","",137,[[["self"]],["sigset_t"]]],[11,"clone","","",106,[[["self"]],["sysinfo"]]],[11,"clone","","",107,[[["self"]],["msqid_ds"]]],[11,"clone","","",108,[[["self"]],["sigaction"]]],[11,"clone","","",109,[[["self"]],["statfs"]]],[11,"clone","","",110,[[["self"]],["flock"]]],[11,"clone","","",111,[[["self"]],["siginfo_t"]]],[11,"clone","","",112,[[["self"]],["stack_t"]]],[11,"clone","","",113,[[["self"]],["stat"]]],[11,"clone","","",114,[[["self"]],["stat64"]]],[11,"clone","","",115,[[["self"]],["statfs64"]]],[11,"clone","","",116,[[["self"]],["statvfs64"]]],[11,"clone","","",138,[[["self"]],["pthread_attr_t"]]],[11,"clone","","",117,[[["self"]],["_libc_fpxreg"]]],[11,"clone","","",118,[[["self"]],["_libc_xmmreg"]]],[11,"clone","","",119,[[["self"]],["_libc_fpstate"]]],[11,"clone","","",120,[[["self"]],["user_regs_struct"]]],[11,"clone","","",121,[[["self"]],["user"]]],[11,"clone","","",122,[[["self"]],["mcontext_t"]]],[11,"clone","","",123,[[["self"]],["ipc_perm"]]],[11,"clone","","",124,[[["self"]],["shmid_ds"]]],[11,"clone","","",125,[[["self"]],["termios2"]]],[11,"clone","","",126,[[["self"]],["user_fpregs_struct"]]],[11,"clone","","",127,[[["self"]],["ucontext_t"]]],[11,"clone","","",128,[[["self"]],["statvfs"]]],[11,"clone","","",139,[[["self"]],["sem_t"]]],[11,"clone","","",140,[[["self"]],["pthread_mutexattr_t"]]],[11,"clone","","",141,[[["self"]],["pthread_rwlockattr_t"]]],[11,"clone","","",142,[[["self"]],["pthread_condattr_t"]]],[11,"clone","","",143,[[["self"]],["pthread_cond_t"]]],[11,"clone","","",144,[[["self"]],["pthread_mutex_t"]]],[11,"clone","","",145,[[["self"]],["pthread_rwlock_t"]]],[11,"clone","","",129,[[["self"]],["in6_addr"]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"in_addr"],[3,"ip_mreq"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"Elf32_Chdr"],[3,"Elf64_Chdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"sockaddr_vm"],[3,"sockaddr_nl"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"af_alg_iv"],[3,"mq_attr"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"utmpx"],[3,"sysinfo"],[3,"msqid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"in6_addr"],[4,"c_void"],[3,"fd_set"],[3,"in6_rtmsg"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"sigset_t"],[3,"pthread_attr_t"],[3,"sem_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"],[4,"fpos64_t"]]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","i":[[3,"Record","log","The \"payload\" of a log message.",null,null],[3,"RecordBuilder","","Builder for `Record`.",null,null],[3,"Metadata","","Metadata about a log message.",null,null],[3,"MetadataBuilder","","Builder for `Metadata`.",null,null],[3,"SetLoggerError","","The type returned by [`set_logger`] if [`set_logger`] has…",null,null],[3,"ParseLevelError","","The type returned by [`from_str`] when the string doesn't…",null,null],[4,"Level","","An enum representing the available verbosity levels of the…",null,null],[13,"Error","","The \"error\" level.",0,null],[13,"Warn","","The \"warn\" level.",0,null],[13,"Info","","The \"info\" level.",0,null],[13,"Debug","","The \"debug\" level.",0,null],[13,"Trace","","The \"trace\" level.",0,null],[4,"LevelFilter","","An enum representing the available verbosity level filters…",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"set_max_level","","Sets the global maximum log level.",null,[[["levelfilter"]]]],[5,"max_level","","Returns the current maximum log level.",null,[[],["levelfilter"]]],[5,"set_boxed_logger","","Sets the global logger to a `Box<Log>`.",null,[[["log"],["box",["log"]]],[["result",["setloggererror"]],["setloggererror"]]]],[5,"set_logger","","Sets the global logger to a `&'static Log`.",null,[[["log"]],[["result",["setloggererror"]],["setloggererror"]]]],[5,"set_logger_racy","","A thread-unsafe version of [`set_logger`].",null,[[["log"]],[["result",["setloggererror"]],["setloggererror"]]]],[5,"logger","","Returns a reference to the logger.",null,[[],["log"]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",null,null],[8,"Log","","A trait encapsulating the operations required of a logger.",null,null],[10,"enabled","","Determines if a log message with the specified metadata…",2,[[["metadata"],["self"]],["bool"]]],[10,"log","","Logs the `Record`.",2,[[["record"],["self"]]]],[10,"flush","","Flushes any buffered records.",2,[[["self"]]]],[11,"max","","Returns the most verbose logging level.",0,[[],["level"]]],[11,"to_level_filter","","Converts the `Level` to the equivalent `LevelFilter`.",0,[[["self"]],["levelfilter"]]],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter"]]],[11,"to_level","","Converts `self` to the equivalent `Level`.",1,[[["self"]],[["option",["level"]],["level"]]]],[11,"builder","","Returns a new builder.",3,[[],["recordbuilder"]]],[11,"args","","The message body.",3,[[["self"]],["arguments"]]],[11,"metadata","","Metadata about the log directive.",3,[[["self"]],["metadata"]]],[11,"level","","The verbosity level of the message.",3,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",3,[[["self"]],["str"]]],[11,"module_path","","The module path of the message.",3,[[["self"]],[["option",["str"]],["str"]]]],[11,"module_path_static","","The module path of the message, if it is a `'static` string.",3,[[["self"]],[["option",["str"]],["str"]]]],[11,"file","","The source file containing the message.",3,[[["self"]],[["option",["str"]],["str"]]]],[11,"file_static","","The module path of the message, if it is a `'static` string.",3,[[["self"]],[["option",["str"]],["str"]]]],[11,"line","","The line containing the message.",3,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"new","","Construct new `RecordBuilder`.",4,[[],["recordbuilder"]]],[11,"args","","Set `args`.",4,[[["self"],["arguments"]],["recordbuilder"]]],[11,"metadata","","Set `metadata`. Construct a `Metadata` object with…",4,[[["self"],["metadata"]],["recordbuilder"]]],[11,"level","","Set `Metadata::level`.",4,[[["self"],["level"]],["recordbuilder"]]],[11,"target","","Set `Metadata::target`",4,[[["self"],["str"]],["recordbuilder"]]],[11,"module_path","","Set `module_path`",4,[[["self"],["option",["str"]],["str"]],["recordbuilder"]]],[11,"module_path_static","","Set `module_path` to a `'static` string",4,[[["self"],["option",["str"]],["str"]],["recordbuilder"]]],[11,"file","","Set `file`",4,[[["self"],["option",["str"]],["str"]],["recordbuilder"]]],[11,"file_static","","Set `file` to a `'static` string.",4,[[["self"],["option",["str"]],["str"]],["recordbuilder"]]],[11,"line","","Set `line`",4,[[["self"],["u32"],["option",["u32"]]],["recordbuilder"]]],[11,"build","","Invoke the builder and return a `Record`",4,[[["self"]],["record"]]],[11,"builder","","Returns a new builder.",5,[[],["metadatabuilder"]]],[11,"level","","The verbosity level of the message.",5,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",5,[[["self"]],["str"]]],[11,"new","","Construct a new `MetadataBuilder`.",6,[[],["metadatabuilder"]]],[11,"level","","Setter for `level`.",6,[[["self"],["level"]],["metadatabuilder"]]],[11,"target","","Setter for `target`.",6,[[["self"],["str"]],["metadatabuilder"]]],[11,"build","","Returns a `Metadata` object.",6,[[["self"]],["metadata"]]],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in…",null,null],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["level"]]],[11,"clone","","",1,[[["self"]],["levelfilter"]]],[11,"clone","","",3,[[["self"]],["record"]]],[11,"clone","","",5,[[["self"]],["metadata"]]],[11,"cmp","","",0,[[["level"],["self"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["levelfilter"]],["ordering"]]],[11,"cmp","","",5,[[["metadata"],["self"]],["ordering"]]],[11,"cmp","","",6,[[["self"],["metadatabuilder"]],["ordering"]]],[11,"eq","","",0,[[["level"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"eq","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"eq","","",1,[[["level"],["self"]],["bool"]]],[11,"eq","","",5,[[["metadata"],["self"]],["bool"]]],[11,"ne","","",5,[[["metadata"],["self"]],["bool"]]],[11,"eq","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"ne","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"eq","","",8,[[["parselevelerror"],["self"]],["bool"]]],[11,"ne","","",8,[[["parselevelerror"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["level"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["level"],["self"]],["bool"]]],[11,"le","","",0,[[["level"],["self"]],["bool"]]],[11,"gt","","",0,[[["level"],["self"]],["bool"]]],[11,"ge","","",0,[[["level"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["levelfilter"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"le","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"gt","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"ge","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["levelfilter"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"le","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"gt","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"ge","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"partial_cmp","","",1,[[["level"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["level"],["self"]],["bool"]]],[11,"le","","",1,[[["level"],["self"]],["bool"]]],[11,"gt","","",1,[[["level"],["self"]],["bool"]]],[11,"ge","","",1,[[["level"],["self"]],["bool"]]],[11,"partial_cmp","","",5,[[["metadata"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",5,[[["metadata"],["self"]],["bool"]]],[11,"le","","",5,[[["metadata"],["self"]],["bool"]]],[11,"gt","","",5,[[["metadata"],["self"]],["bool"]]],[11,"ge","","",5,[[["metadata"],["self"]],["bool"]]],[11,"partial_cmp","","",6,[[["self"],["metadatabuilder"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"le","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"gt","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"ge","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"from_str","","",0,[[["str"]],[["level"],["result",["level"]]]]],[11,"from_str","","",1,[[["str"]],[["levelfilter"],["result",["levelfilter"]]]]],[11,"description","","",7,[[["self"]],["str"]]],[11,"description","","",8,[[["self"]],["str"]]]],"p":[[4,"Level"],[4,"LevelFilter"],[8,"Log"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"]]};
searchIndex["memchr"] = {"doc":"The `memchr` crate provides heavily optimized routines for…","i":[[3,"Memchr","memchr","An iterator for `memchr`.",null,null],[3,"Memchr2","","An iterator for `memchr2`.",null,null],[3,"Memchr3","","An iterator for `memchr3`.",null,null],[5,"memchr_iter","","An iterator over all occurrences of the needle in a…",null,[[["u8"]],["memchr"]]],[5,"memchr2_iter","","An iterator over all occurrences of the needles in a…",null,[[["u8"]],["memchr2"]]],[5,"memchr3_iter","","An iterator over all occurrences of the needles in a…",null,[[["u8"]],["memchr3"]]],[5,"memrchr_iter","","An iterator over all occurrences of the needle in a…",null,[[["u8"]],[["rev",["memchr"]],["memchr"]]]],[5,"memrchr2_iter","","An iterator over all occurrences of the needles in a…",null,[[["u8"]],[["memchr2"],["rev",["memchr2"]]]]],[5,"memrchr3_iter","","An iterator over all occurrences of the needles in a…",null,[[["u8"]],[["memchr3"],["rev",["memchr3"]]]]],[5,"memchr","","Search for the first occurrence of a byte in a slice.",null,[[["u8"]],[["option",["usize"]],["usize"]]]],[5,"memchr2","","Like `memchr`, but searches for two bytes instead of one.",null,[[["u8"]],[["option",["usize"]],["usize"]]]],[5,"memchr3","","Like `memchr`, but searches for three bytes instead of one.",null,[[["u8"]],[["option",["usize"]],["usize"]]]],[5,"memrchr","","Search for the last occurrence of a byte in a slice.",null,[[["u8"]],[["option",["usize"]],["usize"]]]],[5,"memrchr2","","Like `memrchr`, but searches for two bytes instead of one.",null,[[["u8"]],[["option",["usize"]],["usize"]]]],[5,"memrchr3","","Like `memrchr`, but searches for three bytes instead of one.",null,[[["u8"]],[["option",["usize"]],["usize"]]]],[11,"new","","Creates a new iterator that yields all positions of needle…",0,[[["u8"]],["memchr"]]],[11,"new","","Creates a new iterator that yields all positions of needle…",1,[[["u8"]],["memchr2"]]],[11,"new","","Create a new `Memchr3` that's initialized to zero with a…",2,[[["u8"]],["memchr3"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"next_back","","",1,[[["self"]],["option"]]],[11,"next_back","","",2,[[["self"]],["option"]]],[11,"next","","",0,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",0,[[["self"]]]],[11,"next","","",1,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",1,[[["self"]]]],[11,"next","","",2,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",2,[[["self"]]]]],"p":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]};
searchIndex["pnet"] = {"doc":"libpnet","i":[[0,"datalink","pnet","Support for sending and receiving data link layer packets.",null,null],[0,"linux","pnet::datalink","Support for sending and receiving data link layer packets…",null,null],[3,"Config","pnet::datalink::linux","Configuration for the Linux datalink backend.",null,null],[12,"write_buffer_size","","The size of buffer to use when writing packets. Defaults…",0,null],[12,"read_buffer_size","","The size of buffer to use when reading packets. Defaults…",0,null],[12,"read_timeout","","The read timeout. Defaults to None.",0,null],[12,"write_timeout","","The write timeout. Defaults to None.",0,null],[12,"channel_type","","Specifies whether to read packets at the datalink layer or…",0,null],[12,"fanout","","Specifies packet fanout option, if desired. Defaults to…",0,null],[5,"channel","","Create a data link channel using the Linux's `AF_PACKET`…",null,[[["config"],["networkinterface"]],[["error"],["channel"],["result",["channel","error"]]]]],[5,"interfaces","","Get a list of available network interfaces for the current…",null,[[],[["networkinterface"],["vec",["networkinterface"]]]]],[0,"dummy","pnet::datalink","Support for sending and receiving data link layer packets…",null,null],[3,"Config","pnet::datalink::dummy","Configuration for the dummy datalink backend. Contains…",null,null],[5,"channel","","Create a data link channel backed by FIFO queues. Useful…",null,[[["networkinterface"],["config"]],[["error"],["channel"],["result",["channel","error"]]]]],[5,"interfaces","","Get three fake interfaces generated with…",null,[[],[["networkinterface"],["vec",["networkinterface"]]]]],[5,"dummy_interface","","Generates a fake `NetworkInterface`. The name of the…",null,[[["u8"]],["networkinterface"]]],[6,"EtherType","pnet::datalink","Type alias for an `EtherType`.",null,null],[4,"ChannelType","","Type of data link channel to present (Linux only).",null,null],[13,"Layer2","","Send and receive layer 2 packets directly, including…",1,null],[13,"Layer3","","Send and receive \"cooked\" packets - send and receive…",1,null],[4,"Channel","","A channel for sending and receiving at the data link layer.",null,null],[13,"Ethernet","","A datalink channel which sends and receives Ethernet…",2,null],[13,"PleaseIncludeACatchAllVariantWhenMatchingOnThisEnum","","This variant should never be used.",2,null],[4,"FanoutType","","Socket fanout type (Linux only).",null,null],[13,"HASH","","",3,null],[13,"LB","","",3,null],[13,"CPU","","",3,null],[13,"ROLLOVER","","",3,null],[13,"RND","","",3,null],[13,"QM","","",3,null],[13,"CBPF","","",3,null],[13,"EBPF","","",3,null],[3,"FanoutOption","","Fanout settings (Linux only).",null,null],[12,"group_id","","",4,null],[12,"fanout_type","","",4,null],[12,"defrag","","",4,null],[12,"rollover","","",4,null],[3,"Config","","A generic configuration type, encapsulating all options…",null,null],[12,"write_buffer_size","","The size of buffer to use when writing packets. Defaults…",5,null],[12,"read_buffer_size","","The size of buffer to use when reading packets. Defaults…",5,null],[12,"read_timeout","","Linux/BPF/Netmap only: The read timeout. Defaults to None.",5,null],[12,"write_timeout","","Linux/BPF/Netmap only: The write timeout. Defaults to None.",5,null],[12,"channel_type","","Linux only: Specifies whether to read packets at the…",5,null],[12,"bpf_fd_attempts","","BPF/OS X only: The number of /dev/bpf* file descriptors to…",5,null],[12,"linux_fanout","","",5,null],[5,"channel","","Create a new datalink channel for sending and receiving…",null,[[["networkinterface"],["config"]],[["error"],["channel"],["result",["channel","error"]]]]],[8,"DataLinkSender","","Trait to enable sending `$packet` packets.",null,null],[10,"build_and_send","","Create and send a number of packets.",6,[[["fnmut"],["self"],["usize"]],[["result",["error"]],["option",["result"]]]]],[10,"send_to","","Send a packet.",6,[[["self"],["networkinterface"],["option",["networkinterface"]]],[["result",["error"]],["option",["result"]]]]],[8,"DataLinkReceiver","","Structure for receiving packets at the data link layer.…",null,null],[10,"next","","Get the next ethernet frame in the channel.",7,[[["self"]],[["error"],["result",["error"]]]]],[3,"NetworkInterface","","Represents a network interface and its associated addresses.",null,null],[12,"name","","The name of the interface.",8,null],[12,"index","","The interface index (operating system specific).",8,null],[12,"mac","","A MAC address for the interface.",8,null],[12,"ips","","IP addresses and netmasks for the interface.",8,null],[12,"flags","","Operating system specific flags for the interface.",8,null],[5,"interfaces","","Get a list of available network interfaces for the current…",null,[[],[["networkinterface"],["vec",["networkinterface"]]]]],[3,"MacAddr","","A MAC address",null,null],[12,"0","","",9,null],[12,"1","","",9,null],[12,"2","","",9,null],[12,"3","","",9,null],[12,"4","","",9,null],[12,"5","","",9,null],[4,"ParseMacAddrErr","","Represents an error which occurred whilst parsing a MAC…",null,null],[13,"TooManyComponents","","The MAC address has too many components, eg.…",10,null],[13,"TooFewComponents","","The MAC address has too few components, eg. 00:11",10,null],[13,"InvalidComponent","","One of the components contains an invalid value, eg.…",10,null],[0,"packet","pnet","Support for packet parsing and manipulation.",null,null],[0,"ethernet","pnet::packet","An ethernet packet abstraction.",null,null],[3,"EthernetPacket","pnet::packet::ethernet","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableEthernetPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"EthernetIterable","","Used to iterate over a slice of `EthernetPacket`s",null,null],[3,"Ethernet","","Represents an Ethernet packet.",null,null],[12,"destination","","",11,null],[12,"source","","",11,null],[12,"ethertype","","",11,null],[12,"payload","","",11,null],[0,"EtherTypes","","`EtherTypes` are defined at:…",null,null],[17,"Ipv4","pnet::packet::ethernet::EtherTypes","Internet Protocol version 4 (IPv4) [RFC7042].",null,null],[17,"Arp","","Address Resolution Protocol (ARP) [RFC7042].",null,null],[17,"WakeOnLan","","Wake on Lan.",null,null],[17,"Trill","","IETF TRILL Protocol [IEEE].",null,null],[17,"DECnet","","DECnet Phase IV.",null,null],[17,"Rarp","","Reverse Address Resolution Protocol (RARP) [RFC903].",null,null],[17,"AppleTalk","","AppleTalk - EtherTalk [Apple].",null,null],[17,"Aarp","","AppleTalk Address Resolution Protocol (AARP) [Apple].",null,null],[17,"Ipx","","IPX [Xerox].",null,null],[17,"Qnx","","QNX Qnet [QNX Software Systems].",null,null],[17,"Ipv6","","Internet Protocol version 6 (IPv6) [RFC7042].",null,null],[17,"FlowControl","","Ethernet Flow Control [IEEE 802.3x].",null,null],[17,"CobraNet","","CobraNet [CobraNet].",null,null],[17,"Mpls","","MPLS Unicast [RFC 3032].",null,null],[17,"MplsMcast","","MPLS Multicast [RFC 5332].",null,null],[17,"PppoeDiscovery","","PPPOE Discovery Stage [RFC 2516].",null,null],[17,"PppoeSession","","PPPoE Session Stage [RFC 2516].",null,null],[17,"Vlan","","VLAN-tagged frame (IEEE 802.1Q).",null,null],[17,"PBridge","","Provider Bridging [IEEE 802.1ad / IEEE 802.1aq].",null,null],[17,"Lldp","","Link Layer Discovery Protocol (LLDP) [IEEE 802.1AB].",null,null],[17,"Ptp","","Precision Time Protocol (PTP) over Ethernet [IEEE 1588].",null,null],[17,"Cfm","","CFM / Y.1731 [IEEE 802.1ag].",null,null],[17,"QinQ","","Q-in-Q Vlan Tagging [IEEE 802.1Q].",null,null],[3,"EtherType","pnet::packet::ethernet","Represents the `Ethernet::ethertype` field.",null,null],[12,"0","","",12,null],[0,"gre","pnet::packet","Minimal GRE Packet implementation: suitable for inspection…",null,null],[3,"GrePacket","pnet::packet::gre","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableGrePacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"GreIterable","","Used to iterate over a slice of `GrePacket`s",null,null],[3,"Gre","","GRE (Generic Routing Encapsulation) Packet.",null,null],[12,"checksum_present","","",13,null],[12,"routing_present","","",13,null],[12,"key_present","","",13,null],[12,"sequence_present","","",13,null],[12,"strict_source_route","","",13,null],[12,"recursion_control","","",13,null],[12,"zero_flags","","",13,null],[12,"version","","",13,null],[12,"protocol_type","","",13,null],[12,"checksum","","",13,null],[12,"offset","","",13,null],[12,"key","","",13,null],[12,"sequence","","",13,null],[12,"routing","","",13,null],[12,"payload","","",13,null],[3,"U16BEPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableU16BEPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"U16BEIterable","","Used to iterate over a slice of `U16BEPacket`s",null,null],[3,"U16BE","","`u16be`, but we can't use that directly in a `Vec` :(",null,null],[3,"U32BEPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableU32BEPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"U32BEIterable","","Used to iterate over a slice of `U32BEPacket`s",null,null],[3,"U32BE","","`u32be`, but we can't use that directly in a `Vec` :(",null,null],[0,"ip","pnet::packet","Defines the type and constants for IP next header/next…",null,null],[0,"IpNextHeaderProtocols","pnet::packet::ip","Protocol numbers as defined at:…",null,null],[17,"Hopopt","pnet::packet::ip::IpNextHeaderProtocols","IPv6 Hop-by-Hop Option [RFC2460]",null,null],[17,"Icmp","","Internet Control Message [RFC792]",null,null],[17,"Igmp","","Internet Group Management [RFC1112]",null,null],[17,"Ggp","","Gateway-to-Gateway [RFC823]",null,null],[17,"Ipv4","","IPv4 encapsulation [RFC2003]",null,null],[17,"St","","Stream [RFC1190][RFC1819]",null,null],[17,"Tcp","","Transmission Control [RFC793]",null,null],[17,"Cbt","","CBT",null,null],[17,"Egp","","Exterior Gateway Protocol [RFC888]",null,null],[17,"Igp","","any private interior gateway (used by Cisco for their IGRP)",null,null],[17,"BbnRccMon","","BBN RCC Monitoring",null,null],[17,"NvpII","","Network Voice Protocol [RFC741]",null,null],[17,"Pup","","PUP",null,null],[17,"Argus","","ARGUS",null,null],[17,"Emcon","","EMCON",null,null],[17,"Xnet","","Cross Net Debugger",null,null],[17,"Chaos","","Chaos",null,null],[17,"Udp","","User Datagram [RFC768]",null,null],[17,"Mux","","Multiplexing",null,null],[17,"DcnMeas","","DCN Measurement Subsystems",null,null],[17,"Hmp","","Host Monitoring [RFC869]",null,null],[17,"Prm","","Packet Radio Measurement",null,null],[17,"XnsIdp","","XEROX NS IDP",null,null],[17,"Trunk1","","Trunk-1",null,null],[17,"Trunk2","","Trunk-2",null,null],[17,"Leaf1","","Leaf-1",null,null],[17,"Leaf2","","Leaf-2",null,null],[17,"Rdp","","Reliable Data Protocol [RFC908]",null,null],[17,"Irtp","","Internet Reliable Transaction [RFC938]",null,null],[17,"IsoTp4","","ISO Transport Protocol Class 4 [RFC905]",null,null],[17,"Netblt","","Bulk Data Transfer Protocol [RFC969]",null,null],[17,"MfeNsp","","MFE Network Services Protocol",null,null],[17,"MeritInp","","MERIT Internodal Protocol",null,null],[17,"Dccp","","Datagram Congestion Control Protocol [RFC4340]",null,null],[17,"ThreePc","","Third Party Connect Protocol",null,null],[17,"Idpr","","Inter-Domain Policy Routing Protocol",null,null],[17,"Xtp","","XTP",null,null],[17,"Ddp","","Datagram Delivery Protocol",null,null],[17,"IdprCmtp","","IDPR Control Message Transport Proto",null,null],[17,"TpPlusPlus","","TP++ Transport Protocol",null,null],[17,"Il","","IL Transport Protocol",null,null],[17,"Ipv6","","IPv6 encapsulation [RFC2473]",null,null],[17,"Sdrp","","Source Demand Routing Protocol",null,null],[17,"Ipv6Route","","Routing Header for IPv6",null,null],[17,"Ipv6Frag","","Fragment Header for IPv6",null,null],[17,"Idrp","","Inter-Domain Routing Protocol",null,null],[17,"Rsvp","","Reservation Protocol [RFC2205][RFC3209]",null,null],[17,"Gre","","Generic Routing Encapsulation [RFC1701]",null,null],[17,"Dsr","","Dynamic Source Routing Protocol [RFC4728]",null,null],[17,"Bna","","BNA",null,null],[17,"Esp","","Encap Security Payload [RFC4303]",null,null],[17,"Ah","","Authentication Header [RFC4302]",null,null],[17,"INlsp","","Integrated Net Layer Security TUBA",null,null],[17,"Swipe","","IP with Encryption",null,null],[17,"Narp","","NBMA Address Resolution Protocol [RFC1735]",null,null],[17,"Mobile","","IP Mobility",null,null],[17,"Tlsp","","Transport Layer Security Protocol using Kryptonet key…",null,null],[17,"Skip","","SKIP",null,null],[17,"Ipv6Icmp","","",null,null],[17,"Icmpv6","","ICMPv6 [RFC4443]",null,null],[17,"Ipv6NoNxt","","No Next Header for IPv6 [RFC2460]",null,null],[17,"Ipv6Opts","","Destination Options for IPv6 [RFC2460]",null,null],[17,"HostInternal","","any host internal protocol",null,null],[17,"Cftp","","CFTP",null,null],[17,"LocalNetwork","","any local network",null,null],[17,"SatExpak","","SATNET and Backroom EXPAK",null,null],[17,"Kryptolan","","Kryptolan",null,null],[17,"Rvd","","MIT Remote Virtual Disk Protocol",null,null],[17,"Ippc","","Internet Pluribus Packet Core",null,null],[17,"DistributedFs","","any distributed file system",null,null],[17,"SatMon","","SATNET Monitoring",null,null],[17,"Visa","","VISA Protocol",null,null],[17,"Ipcv","","Internet Packet Core Utility",null,null],[17,"Cpnx","","Computer Protocol Network Executive",null,null],[17,"Cphb","","Computer Protocol Heart Beat",null,null],[17,"Wsn","","Wang Span Network",null,null],[17,"Pvp","","Packet Video Protocol",null,null],[17,"BrSatMon","","Backroom SATNET Monitoring",null,null],[17,"SunNd","","SUN ND PROTOCOL-Temporary",null,null],[17,"WbMon","","WIDEBAND Monitoring",null,null],[17,"WbExpak","","WIDEBAND EXPAK",null,null],[17,"IsoIp","","ISO Internet Protocol",null,null],[17,"Vmtp","","VMTP",null,null],[17,"SecureVmtp","","SECURE-VMTP",null,null],[17,"Vines","","VINES",null,null],[17,"TtpOrIptm","","Transaction Transport Protocol/IP Traffic Manager",null,null],[17,"NsfnetIgp","","NSFNET-IGP",null,null],[17,"Dgp","","Dissimilar Gateway Protocol",null,null],[17,"Tcf","","TCF",null,null],[17,"Eigrp","","EIGRP",null,null],[17,"OspfigP","","OSPFIGP [RFC1583][RFC2328][RFC5340]",null,null],[17,"SpriteRpc","","Sprite RPC Protocol",null,null],[17,"Larp","","Locus Address Resolution Protocol",null,null],[17,"Mtp","","Multicast Transport Protocol",null,null],[17,"Ax25","","AX.25 Frames",null,null],[17,"IpIp","","IP-within-IP Encapsulation Protocol",null,null],[17,"Micp","","Mobile Internetworking Control Pro.",null,null],[17,"SccSp","","Semaphore Communications Sec. Pro.",null,null],[17,"Etherip","","Ethernet-within-IP Encapsulation [RFC3378]",null,null],[17,"Encap","","Encapsulation Header [RFC1241]",null,null],[17,"PrivEncryption","","any private encryption scheme",null,null],[17,"Gmtp","","GMTP",null,null],[17,"Ifmp","","Ipsilon Flow Management Protocol",null,null],[17,"Pnni","","PNNI over IP",null,null],[17,"Pim","","Protocol Independent Multicast [RFC4601]",null,null],[17,"Aris","","ARIS",null,null],[17,"Scps","","SCPS",null,null],[17,"Qnx","","QNX",null,null],[17,"AN","","Active Networks",null,null],[17,"IpComp","","IP Payload Compression Protocol [RFC2393]",null,null],[17,"Snp","","Sitara Networks Protocol",null,null],[17,"CompaqPeer","","Compaq Peer Protocol",null,null],[17,"IpxInIp","","IPX in IP",null,null],[17,"Vrrp","","Virtual Router Redundancy Protocol [RFC5798]",null,null],[17,"Pgm","","PGM Reliable Transport Protocol",null,null],[17,"ZeroHop","","any 0-hop protocol",null,null],[17,"L2tp","","Layer Two Tunneling Protocol [RFC3931]",null,null],[17,"Ddx","","D-II Data Exchange (DDX)",null,null],[17,"Iatp","","Interactive Agent Transfer Protocol",null,null],[17,"Stp","","Schedule Transfer Protocol",null,null],[17,"Srp","","SpectraLink Radio Protocol",null,null],[17,"Uti","","UTI",null,null],[17,"Smp","","Simple Message Protocol",null,null],[17,"Sm","","Simple Multicast Protocol",null,null],[17,"Ptp","","Performance Transparency Protocol",null,null],[17,"IsisOverIpv4","","",null,null],[17,"Fire","","",null,null],[17,"Crtp","","Combat Radio Transport Protocol",null,null],[17,"Crudp","","Combat Radio User Datagram",null,null],[17,"Sscopmce","","",null,null],[17,"Iplt","","",null,null],[17,"Sps","","Secure Packet Shield",null,null],[17,"Pipe","","Private IP Encapsulation within IP",null,null],[17,"Sctp","","Stream Control Transmission Protocol",null,null],[17,"Fc","","Fibre Channel [RFC6172]",null,null],[17,"RsvpE2eIgnore","","[RFC3175]",null,null],[17,"MobilityHeader","","[RFC6275]",null,null],[17,"UdpLite","","[RFC3828]",null,null],[17,"MplsInIp","","[RFC4023]",null,null],[17,"Manet","","MANET Protocols [RFC5498]",null,null],[17,"Hip","","Host Identity Protocol [RFC5201]",null,null],[17,"Shim6","","Shim6 Protocol [RFC5533]",null,null],[17,"Wesp","","Wrapped Encapsulating Security Payload [RFC5840]",null,null],[17,"Rohc","","Robust Header Compression [RFC5858]",null,null],[17,"Test1","","Use for experimentation and testing [RFC3692]",null,null],[17,"Test2","","Use for experimentation and testing [RFC3692]",null,null],[17,"Reserved","","",null,null],[3,"IpNextHeaderProtocol","pnet::packet::ip","Represents an IPv4 next level protocol, or an IPv6 next…",null,null],[12,"0","","",14,null],[0,"ipv4","pnet::packet","An IPv4 packet abstraction.",null,null],[0,"Ipv4Flags","pnet::packet::ipv4","The IPv4 header flags.",null,null],[17,"DontFragment","pnet::packet::ipv4::Ipv4Flags","Don't Fragment flag.",null,null],[17,"MoreFragments","","More Fragments flag.",null,null],[0,"Ipv4OptionNumbers","pnet::packet::ipv4","IPv4 header options numbers as defined in…",null,null],[17,"EOL","pnet::packet::ipv4::Ipv4OptionNumbers","End of Options List.",null,null],[17,"NOP","","No Operation.",null,null],[17,"SEC","","Security.",null,null],[17,"LSR","","Loose Source Route.",null,null],[17,"TS","","Time Stamp.",null,null],[17,"ESEC","","Extended Security.",null,null],[17,"CIPSO","","Commercial Security.",null,null],[17,"RR","","Record Route.",null,null],[17,"SID","","Stream ID.",null,null],[17,"SSR","","Strict Source Route.",null,null],[17,"ZSU","","Experimental Measurement.",null,null],[17,"MTUP","","MTU Probe.",null,null],[17,"MTUR","","MTU Reply.",null,null],[17,"FINN","","Experimental Flow Control.",null,null],[17,"VISA","","Experimental Access Control.",null,null],[17,"ENCODE","","ENCODE.",null,null],[17,"IMITD","","IMI Traffic Descriptor.",null,null],[17,"EIP","","Extended Internet Protocol.",null,null],[17,"TR","","Traceroute.",null,null],[17,"ADDEXT","","Address Extension.",null,null],[17,"RTRALT","","Router Alert.",null,null],[17,"SDB","","Selective Directed Broadcast.",null,null],[17,"DPS","","Dynamic Packet State.",null,null],[17,"UMP","","Upstream Multicast Pkt.",null,null],[17,"QS","","Quick-Start.",null,null],[17,"EXP","","RFC3692-style Experiment.",null,null],[3,"Ipv4OptionNumber","pnet::packet::ipv4","Represents an IPv4 option.",null,null],[12,"0","","",15,null],[3,"Ipv4Packet","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableIpv4Packet","","A structure enabling manipulation of on the wire packets",null,null],[3,"Ipv4Iterable","","Used to iterate over a slice of `Ipv4Packet`s",null,null],[3,"Ipv4","","Represents an IPv4 Packet.",null,null],[12,"version","","",16,null],[12,"header_length","","",16,null],[12,"dscp","","",16,null],[12,"ecn","","",16,null],[12,"total_length","","",16,null],[12,"identification","","",16,null],[12,"flags","","",16,null],[12,"fragment_offset","","",16,null],[12,"ttl","","",16,null],[12,"next_level_protocol","","",16,null],[12,"checksum","","",16,null],[12,"source","","",16,null],[12,"destination","","",16,null],[12,"options","","",16,null],[12,"payload","","",16,null],[5,"checksum","","Calculates a checksum of an IPv4 packet header. The…",null,[[["ipv4packet"]],["u16"]]],[3,"Ipv4OptionPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableIpv4OptionPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"Ipv4OptionIterable","","Used to iterate over a slice of `Ipv4OptionPacket`s",null,null],[3,"Ipv4Option","","Represents the IPv4 Option field.",null,null],[0,"ipv6","pnet::packet","An IPv6 packet abstraction.",null,null],[3,"Ipv6Packet","pnet::packet::ipv6","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableIpv6Packet","","A structure enabling manipulation of on the wire packets",null,null],[3,"Ipv6Iterable","","Used to iterate over a slice of `Ipv6Packet`s",null,null],[3,"Ipv6","","Represents an IPv6 Packet.",null,null],[12,"version","","",17,null],[12,"traffic_class","","",17,null],[12,"flow_label","","",17,null],[12,"payload_length","","",17,null],[12,"next_header","","",17,null],[12,"hop_limit","","",17,null],[12,"source","","",17,null],[12,"destination","","",17,null],[12,"payload","","",17,null],[3,"ExtensionPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableExtensionPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"ExtensionIterable","","Used to iterate over a slice of `ExtensionPacket`s",null,null],[3,"Extension","","Represents an IPv6 Extension.",null,null],[12,"next_header","","",18,null],[12,"hdr_ext_len","","",18,null],[12,"options","","",18,null],[6,"HopByHop","","Represents an IPv6 Hop-by-Hop Options.",null,null],[6,"HopByHopPacket","","A structure enabling manipulation of on the wire packets.",null,null],[6,"MutableHopByHopPacket","","A structure enabling manipulation of on the wire packets.",null,null],[3,"RoutingPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableRoutingPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"RoutingIterable","","Used to iterate over a slice of `RoutingPacket`s",null,null],[3,"Routing","","Represents an IPv6 Routing Extension.",null,null],[12,"next_header","","",19,null],[12,"hdr_ext_len","","",19,null],[12,"routing_type","","",19,null],[12,"segments_left","","",19,null],[12,"data","","",19,null],[3,"FragmentPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableFragmentPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"FragmentIterable","","Used to iterate over a slice of `FragmentPacket`s",null,null],[3,"Fragment","","Represents an IPv6 Fragment Extension.",null,null],[12,"next_header","","",20,null],[12,"reserved","","",20,null],[12,"fragment_offset_with_flags","","",20,null],[12,"id","","",20,null],[12,"payload","","",20,null],[6,"Destination","","Represents an Destination Options.",null,null],[6,"DestinationPacket","","A structure enabling manipulation of on the wire packets.",null,null],[6,"MutableDestinationPacket","","A structure enabling manipulation of on the wire packets.",null,null],[0,"udp","pnet::packet","A UDP packet abstraction.",null,null],[3,"UdpPacket","pnet::packet::udp","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableUdpPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"UdpIterable","","Used to iterate over a slice of `UdpPacket`s",null,null],[3,"Udp","","Represents a UDP Packet.",null,null],[12,"source","","",21,null],[12,"destination","","",21,null],[12,"length","","",21,null],[12,"checksum","","",21,null],[12,"payload","","",21,null],[5,"ipv4_checksum","","Calculate a checksum for a packet built on IPv4.",null,[[["udppacket"],["ipv4addr"]],["u16"]]],[5,"ipv4_checksum_adv","","Calculate a checksum for a packet built on IPv4. Advanced…",null,[[["udppacket"],["ipv4addr"]],["u16"]]],[5,"ipv6_checksum","","Calculate a checksum for a packet built on IPv6.",null,[[["udppacket"],["ipv6addr"]],["u16"]]],[5,"ipv6_checksum_adv","","Calculate the checksum for a packet built on IPv6.…",null,[[["ipv6addr"],["udppacket"]],["u16"]]],[0,"tcp","pnet::packet","An TCP packet abstraction.",null,null],[0,"TcpFlags","pnet::packet::tcp","The TCP flags.",null,null],[17,"NS","pnet::packet::tcp::TcpFlags","NS – ECN-nonce concealment protection (experimental: see…",null,null],[17,"CWR","","CWR – Congestion Window Reduced (CWR) flag is set by the…",null,null],[17,"ECE","","ECE – ECN-Echo has a dual role, depending on the value of…",null,null],[17,"URG","","URG – indicates that the Urgent pointer field is…",null,null],[17,"ACK","","ACK – indicates that the Acknowledgment field is…",null,null],[17,"PSH","","PSH – Push function. Asks to push the buffered data to the…",null,null],[17,"RST","","RST – Reset the connection.",null,null],[17,"SYN","","SYN – Synchronize sequence numbers. Only the first packet…",null,null],[17,"FIN","","FIN – No more data from sender.",null,null],[3,"TcpPacket","pnet::packet::tcp","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableTcpPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"TcpIterable","","Used to iterate over a slice of `TcpPacket`s",null,null],[3,"Tcp","","Represents a TCP packet.",null,null],[12,"source","","",22,null],[12,"destination","","",22,null],[12,"sequence","","",22,null],[12,"acknowledgement","","",22,null],[12,"data_offset","","",22,null],[12,"reserved","","",22,null],[12,"flags","","",22,null],[12,"window","","",22,null],[12,"checksum","","",22,null],[12,"urgent_ptr","","",22,null],[12,"options","","",22,null],[12,"payload","","",22,null],[3,"TcpOptionNumber","","Represents a TCP option.",null,null],[12,"0","","",23,null],[0,"TcpOptionNumbers","","The TCP header options.",null,null],[17,"EOL","pnet::packet::tcp::TcpOptionNumbers","End of Options list.",null,null],[17,"NOP","","No operation.",null,null],[17,"MSS","","Maximum segment size.",null,null],[17,"WSCALE","","Window scale.",null,null],[17,"SACK_PERMITTED","","Selective acknowledgements permitted.",null,null],[17,"SACK","","Selective acknowledgment.",null,null],[17,"TIMESTAMPS","","Timestamps.",null,null],[3,"TcpOptionPacket","pnet::packet::tcp","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableTcpOptionPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"TcpOptionIterable","","Used to iterate over a slice of `TcpOptionPacket`s",null,null],[3,"TcpOption","","A TCP option.",null,null],[5,"ipv4_checksum","","Calculate a checksum for a packet built on IPv4.",null,[[["tcppacket"],["ipv4addr"]],["u16"]]],[5,"ipv4_checksum_adv","","Calculate the checksum for a packet built on IPv4,…",null,[[["tcppacket"],["ipv4addr"]],["u16"]]],[5,"ipv6_checksum","","Calculate a checksum for a packet built on IPv6.",null,[[["tcppacket"],["ipv6addr"]],["u16"]]],[5,"ipv6_checksum_adv","","Calculate the checksum for a packet built on IPv6,…",null,[[["ipv6addr"],["tcppacket"]],["u16"]]],[0,"arp","pnet::packet","ARP packet abstraction.",null,null],[3,"ArpOperation","pnet::packet::arp","Represents an ARP operation.",null,null],[12,"0","","",24,null],[0,"ArpOperations","","The ARP protocol operations.",null,null],[17,"Request","pnet::packet::arp::ArpOperations","ARP request",null,null],[17,"Reply","","ARP reply",null,null],[3,"ArpHardwareType","pnet::packet::arp","Represents the ARP hardware types.",null,null],[12,"0","","",25,null],[0,"ArpHardwareTypes","","The ARP protocol hardware types.",null,null],[17,"Ethernet","pnet::packet::arp::ArpHardwareTypes","Ethernet",null,null],[3,"ArpPacket","pnet::packet::arp","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableArpPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"ArpIterable","","Used to iterate over a slice of `ArpPacket`s",null,null],[3,"Arp","","Represents an ARP Packet.",null,null],[12,"hardware_type","","",26,null],[12,"protocol_type","","",26,null],[12,"hw_addr_len","","",26,null],[12,"proto_addr_len","","",26,null],[12,"operation","","",26,null],[12,"sender_hw_addr","","",26,null],[12,"sender_proto_addr","","",26,null],[12,"target_hw_addr","","",26,null],[12,"target_proto_addr","","",26,null],[12,"payload","","",26,null],[0,"icmp","pnet::packet","An ICMP packet abstraction.",null,null],[3,"IcmpType","pnet::packet::icmp","Represents the \"ICMP type\" header field.",null,null],[12,"0","","",27,null],[3,"IcmpCode","","Represents the \"ICMP code\" header field.",null,null],[12,"0","","",28,null],[3,"IcmpPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableIcmpPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"IcmpIterable","","Used to iterate over a slice of `IcmpPacket`s",null,null],[3,"Icmp","","Represents a generic ICMP packet.",null,null],[12,"icmp_type","","",29,null],[12,"icmp_code","","",29,null],[12,"checksum","","",29,null],[12,"payload","","",29,null],[5,"checksum","","Calculates a checksum of an ICMP packet.",null,[[["icmppacket"]],["u16"]]],[0,"IcmpTypes","","The enumeration of the recognized ICMP types.",null,null],[17,"EchoReply","pnet::packet::icmp::IcmpTypes","ICMP type for \"echo reply\" packet.",null,null],[17,"DestinationUnreachable","","ICMP type for \"destination unreachable\" packet.",null,null],[17,"SourceQuench","","ICMP type for \"source quench\" packet.",null,null],[17,"RedirectMessage","","ICMP type for \"redirect message\" packet.",null,null],[17,"EchoRequest","","ICMP type for \"echo request\" packet.",null,null],[17,"RouterAdvertisement","","ICMP type for \"router advertisement\" packet.",null,null],[17,"RouterSolicitation","","ICMP type for \"router solicitation\" packet.",null,null],[17,"TimeExceeded","","ICMP type for \"time exceeded\" packet.",null,null],[17,"ParameterProblem","","ICMP type for \"parameter problem\" packet.",null,null],[17,"Timestamp","","ICMP type for \"timestamp\" packet.",null,null],[17,"TimestampReply","","ICMP type for \"timestamp reply\" packet.",null,null],[17,"InformationRequest","","ICMP type for \"information request\" packet.",null,null],[17,"InformationReply","","ICMP type for \"information reply\" packet.",null,null],[17,"AddressMaskRequest","","ICMP type for \"address mask request\" packet.",null,null],[17,"AddressMaskReply","","ICMP type for \"address mask reply\" packet.",null,null],[17,"Traceroute","","ICMP type for \"traceroute\" packet.",null,null],[0,"echo_reply","pnet::packet::icmp","abstraction for ICMP \"echo reply\" packets.",null,null],[3,"Identifier","pnet::packet::icmp::echo_reply","Represent the \"identifier\" field of the ICMP echo replay…",null,null],[12,"0","","",30,null],[3,"SequenceNumber","","Represent the \"sequence number\" field of the ICMP echo…",null,null],[12,"0","","",31,null],[0,"IcmpCodes","","Enumeration of available ICMP codes for ICMP echo replay…",null,null],[17,"NoCode","pnet::packet::icmp::echo_reply::IcmpCodes","0 is the only available ICMP code for \"echo reply\" ICMP…",null,null],[3,"EchoReplyPacket","pnet::packet::icmp::echo_reply","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableEchoReplyPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"EchoReplyIterable","","Used to iterate over a slice of `EchoReplyPacket`s",null,null],[3,"EchoReply","","Represents an ICMP echo reply packet.",null,null],[12,"icmp_type","","",32,null],[12,"icmp_code","","",32,null],[12,"checksum","","",32,null],[12,"identifier","","",32,null],[12,"sequence_number","","",32,null],[12,"payload","","",32,null],[0,"echo_request","pnet::packet::icmp","abstraction for \"echo request\" ICMP packets.",null,null],[3,"Identifier","pnet::packet::icmp::echo_request","Represents the identifier field.",null,null],[12,"0","","",33,null],[3,"SequenceNumber","","Represents the sequence number field.",null,null],[12,"0","","",34,null],[0,"IcmpCodes","","Enumeration of available ICMP codes for \"echo reply\" ICMP…",null,null],[17,"NoCode","pnet::packet::icmp::echo_request::IcmpCodes","0 is the only available ICMP code for \"echo reply\" ICMP…",null,null],[3,"EchoRequestPacket","pnet::packet::icmp::echo_request","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableEchoRequestPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"EchoRequestIterable","","Used to iterate over a slice of `EchoRequestPacket`s",null,null],[3,"EchoRequest","","Represents an \"echo request\" ICMP packet.",null,null],[12,"icmp_type","","",35,null],[12,"icmp_code","","",35,null],[12,"checksum","","",35,null],[12,"identifier","","",35,null],[12,"sequence_number","","",35,null],[12,"payload","","",35,null],[0,"destination_unreachable","pnet::packet::icmp","abstraction for \"destination unreachable\" ICMP packets.",null,null],[0,"IcmpCodes","pnet::packet::icmp::destination_unreachable","Enumeration of the recognized ICMP codes for \"destination…",null,null],[17,"DestinationNetworkUnreachable","pnet::packet::icmp::destination_unreachable::IcmpCodes","ICMP code for \"destination network unreachable\" packet.",null,null],[17,"DestinationHostUnreachable","","ICMP code for \"destination host unreachable\" packet.",null,null],[17,"DestinationProtocolUnreachable","","ICMP code for \"destination protocol unreachable\" packet.",null,null],[17,"DestinationPortUnreachable","","ICMP code for \"destination port unreachable\" packet.",null,null],[17,"FragmentationRequiredAndDFFlagSet","","ICMP code for \"fragmentation required and DFF flag set\"…",null,null],[17,"SourceRouteFailed","","ICMP code for \"source route failed\" packet.",null,null],[17,"DestinationNetworkUnknown","","ICMP code for \"destination network unknown\" packet.",null,null],[17,"DestinationHostUnknown","","ICMP code for \"destination host unknown\" packet.",null,null],[17,"SourceHostIsolated","","ICMP code for \"source host isolated\" packet.",null,null],[17,"NetworkAdministrativelyProhibited","","ICMP code for \"network administrative prohibited\" packet.",null,null],[17,"HostAdministrativelyProhibited","","ICMP code for \"host administrative prohibited\" packet.",null,null],[17,"NetworkUnreachableForTOS","","ICMP code for \"network unreachable for this Type Of…",null,null],[17,"HostUnreachableForTOS","","ICMP code for \"host unreachable for this Type Of Service\"…",null,null],[17,"CommunicationAdministrativelyProhibited","","ICMP code for \"communication administratively prohibited\"…",null,null],[17,"HostPrecedenceViolation","","ICMP code for \"host precedence violation\" packet.",null,null],[17,"PrecedenceCutoffInEffect","","ICMP code for \"precedence cut off in effect\" packet.",null,null],[3,"DestinationUnreachablePacket","pnet::packet::icmp::destination_unreachable","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableDestinationUnreachablePacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"DestinationUnreachableIterable","","Used to iterate over a slice of…",null,null],[3,"DestinationUnreachable","","Represents an \"echo request\" ICMP packet.",null,null],[12,"icmp_type","","",36,null],[12,"icmp_code","","",36,null],[12,"checksum","","",36,null],[12,"unused","","",36,null],[12,"payload","","",36,null],[0,"time_exceeded","pnet::packet::icmp","abstraction for \"time exceeded\" ICMP packets.",null,null],[0,"IcmpCodes","pnet::packet::icmp::time_exceeded","Enumeration of the recognized ICMP codes for \"time…",null,null],[17,"TimeToLiveExceededInTransit","pnet::packet::icmp::time_exceeded::IcmpCodes","ICMP code for \"time to live exceeded in transit\" packet.",null,null],[17,"FragmentReasemblyTimeExceeded","","ICMP code for \"fragment reassembly time exceeded\" packet.",null,null],[3,"TimeExceededPacket","pnet::packet::icmp::time_exceeded","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableTimeExceededPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"TimeExceededIterable","","Used to iterate over a slice of `TimeExceededPacket`s",null,null],[3,"TimeExceeded","","Represents an \"echo request\" ICMP packet.",null,null],[12,"icmp_type","","",37,null],[12,"icmp_code","","",37,null],[12,"checksum","","",37,null],[12,"unused","","",37,null],[12,"payload","","",37,null],[0,"icmpv6","pnet::packet","An ICMPv6 packet abstraction.",null,null],[3,"Icmpv6Type","pnet::packet::icmpv6","Represents the \"ICMPv6 type\" header field.",null,null],[12,"0","","",38,null],[3,"Icmpv6Code","","Represents the \"ICMPv6 code\" header field.",null,null],[12,"0","","",39,null],[3,"Icmpv6Packet","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableIcmpv6Packet","","A structure enabling manipulation of on the wire packets",null,null],[3,"Icmpv6Iterable","","Used to iterate over a slice of `Icmpv6Packet`s",null,null],[3,"Icmpv6","","Represents a generic ICMPv6 packet [RFC 4443 § 2.1]",null,null],[12,"icmpv6_type","","",40,null],[12,"icmpv6_code","","",40,null],[12,"checksum","","",40,null],[12,"payload","","",40,null],[5,"checksum","","Calculates a checksum of an ICMPv6 packet.",null,[[["icmpv6packet"],["ipv6addr"]],["u16"]]],[0,"Icmpv6Types","","The enumeration of the recognized ICMPv6 types.",null,null],[17,"DestinationUnreachable","pnet::packet::icmpv6::Icmpv6Types","ICMPv6 type for \"destination unreachable\".",null,null],[17,"PacketTooBig","","ICMPv6 type for \"packet too big\".",null,null],[17,"TimeExceeded","","ICMPv6 type for \"time exceeded\".",null,null],[17,"ParameterProblem","","ICMPv6 type for \"parameter problem\".",null,null],[17,"EchoRequest","","ICMPv6 type for \"echo request\".",null,null],[17,"EchoReply","","ICMPv6 type for \"echo reply\".",null,null],[17,"RouterSolicit","","ICMPv6 type for \"router solicitation\".",null,null],[17,"RouterAdvert","","ICMPv6 type for \"router advertisement\".",null,null],[17,"NeighborSolicit","","ICMPv6 type for \"neighbor solicitation\".",null,null],[17,"NeighborAdvert","","ICMPv6 type for \"neighbor advertisement\".",null,null],[17,"Redirect","","ICMPv6 type for \"redirect\".",null,null],[0,"ndp","pnet::packet::icmpv6","Abstractions for the Neighbor Discovery Protocol [RFC 4861]",null,null],[0,"Icmpv6Codes","pnet::packet::icmpv6::ndp","",null,null],[17,"NoCode","pnet::packet::icmpv6::ndp::Icmpv6Codes","0 is the only available ICMPv6 Code for the NDP.",null,null],[3,"NdpOptionType","pnet::packet::icmpv6::ndp","Represents a Neighbor Discovery Option Type.",null,null],[12,"0","","",41,null],[0,"NdpOptionTypes","","Neighbor Discovery Option Types [RFC 4861 § 4.6]",null,null],[17,"SourceLLAddr","pnet::packet::icmpv6::ndp::NdpOptionTypes","Source Link-Layer Address Option [RFC 4861 § 4.6.1]",null,null],[17,"TargetLLAddr","","Target Link-Layer Address Option [RFC 4861 § 4.6.1]",null,null],[17,"PrefixInformation","","Prefix Information Option [RFC 4861 § 4.6.2]",null,null],[17,"RedirectedHeader","","Redirected Header Option [RFC 4861 § 4.6.3]",null,null],[17,"MTU","","MTU Option [RFC 4861 § 4.6.4]",null,null],[3,"NdpOptionPacket","pnet::packet::icmpv6::ndp","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableNdpOptionPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"NdpOptionIterable","","Used to iterate over a slice of `NdpOptionPacket`s",null,null],[3,"NdpOption","","Neighbor Discovery Option [RFC 4861 § 4.6]",null,null],[12,"option_type","","",42,null],[12,"length","","",42,null],[12,"data","","",42,null],[3,"RouterSolicitPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableRouterSolicitPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"RouterSolicitIterable","","Used to iterate over a slice of `RouterSolicitPacket`s",null,null],[3,"RouterSolicit","","Router Solicitation Message [RFC 4861 § 4.1]",null,null],[12,"icmpv6_type","","",43,null],[12,"icmpv6_code","","",43,null],[12,"checksum","","",43,null],[12,"reserved","","",43,null],[12,"options","","",43,null],[12,"payload","","",43,null],[0,"RouterAdvertFlags","","The enumeration of recognized Router Advert flags.",null,null],[17,"ManagedAddressConf","pnet::packet::icmpv6::ndp::RouterAdvertFlags","\"Managed Address Configuration\" flag. This is set when…",null,null],[17,"OtherConf","","\"Other Configuration\" flag. This is set when other…",null,null],[3,"RouterAdvertPacket","pnet::packet::icmpv6::ndp","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableRouterAdvertPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"RouterAdvertIterable","","Used to iterate over a slice of `RouterAdvertPacket`s",null,null],[3,"RouterAdvert","","Router Advertisement Message Format [RFC 4861 § 4.2]",null,null],[12,"icmpv6_type","","",44,null],[12,"icmpv6_code","","",44,null],[12,"checksum","","",44,null],[12,"hop_limit","","",44,null],[12,"flags","","",44,null],[12,"lifetime","","",44,null],[12,"reachable_time","","",44,null],[12,"retrans_time","","",44,null],[12,"options","","",44,null],[12,"payload","","",44,null],[3,"NeighborSolicitPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableNeighborSolicitPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"NeighborSolicitIterable","","Used to iterate over a slice of `NeighborSolicitPacket`s",null,null],[3,"NeighborSolicit","","Neighbor Solicitation Message Format [RFC 4861 § 4.3]",null,null],[12,"icmpv6_type","","",45,null],[12,"icmpv6_code","","",45,null],[12,"checksum","","",45,null],[12,"reserved","","",45,null],[12,"target_addr","","",45,null],[12,"options","","",45,null],[12,"payload","","",45,null],[0,"NeighborAdvertFlags","","Enumeration of recognized Neighbor Advert flags.",null,null],[17,"Router","pnet::packet::icmpv6::ndp::NeighborAdvertFlags","Indicates that the sender is a router.",null,null],[17,"Solicited","","Indicates that the advertisement was sent due to the…",null,null],[17,"Override","","Indicates that the advertisement should override an…",null,null],[3,"NeighborAdvertPacket","pnet::packet::icmpv6::ndp","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableNeighborAdvertPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"NeighborAdvertIterable","","Used to iterate over a slice of `NeighborAdvertPacket`s",null,null],[3,"NeighborAdvert","","Neighbor Advertisement Message Format [RFC 4861 § 4.4]",null,null],[12,"icmpv6_type","","",46,null],[12,"icmpv6_code","","",46,null],[12,"checksum","","",46,null],[12,"flags","","",46,null],[12,"reserved","","",46,null],[12,"target_addr","","",46,null],[12,"options","","",46,null],[12,"payload","","",46,null],[3,"RedirectPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableRedirectPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"RedirectIterable","","Used to iterate over a slice of `RedirectPacket`s",null,null],[3,"Redirect","","Redirect Message Format [RFC 4861 § 4.5]",null,null],[12,"icmpv6_type","","",47,null],[12,"icmpv6_code","","",47,null],[12,"checksum","","",47,null],[12,"reserved","","",47,null],[12,"target_addr","","",47,null],[12,"dest_addr","","",47,null],[12,"options","","",47,null],[12,"payload","","",47,null],[0,"vlan","pnet::packet","A VLAN packet abstraction.",null,null],[3,"ClassOfService","pnet::packet::vlan","Represents an IEEE 802.1p class of a service.",null,null],[12,"0","","",48,null],[0,"ClassesOfService","","IEEE 802.1p classes of service as defined in…",null,null],[17,"BK","pnet::packet::vlan::ClassesOfService","Background",null,null],[17,"BE","","Best Effort",null,null],[17,"EE","","Excellent Effort",null,null],[17,"CA","","Critical Applications",null,null],[17,"VI","","Video, < 100 ms latency",null,null],[17,"VO","","Voice, < 10 ms latency",null,null],[17,"IC","","Internetwork Control",null,null],[17,"NC","","Network Control",null,null],[3,"VlanPacket","pnet::packet::vlan","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableVlanPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"VlanIterable","","Used to iterate over a slice of `VlanPacket`s",null,null],[3,"Vlan","","Represents a VLAN-tagged packet.",null,null],[12,"priority_code_point","","",49,null],[12,"drop_eligible_indicator","","",49,null],[12,"vlan_identifier","","",49,null],[12,"ethertype","","",49,null],[12,"payload","","",49,null],[0,"util","pnet::packet","Utilities for working with packets, eg. checksumming.",null,null],[8,"Octets","pnet::packet::util","Convert a value to a byte array.",null,null],[16,"Output","","Output type - bytes array.",50,null],[10,"octets","","Return a value as bytes (big-endian order).",50,[[["self"]]]],[5,"checksum","","Calculates a checksum. Used by ipv4 and icmp. The two…",null,[[["usize"]],["u16"]]],[5,"ipv4_checksum","","Calculate the checksum for a packet built on IPv4. Used by…",null,[[["usize"],["ipnextheaderprotocol"],["ipv4addr"]],["u16"]]],[5,"ipv6_checksum","","Calculate the checksum for a packet built on IPv6.",null,[[["usize"],["ipv6addr"],["ipnextheaderprotocol"]],["u16"]]],[8,"Packet","pnet::packet","Represents a generic network packet.",null,null],[10,"packet","","Retrieve the underlying buffer for the packet.",51,[[["self"]]]],[10,"payload","","Retrieve the payload for the packet.",51,[[["self"]]]],[8,"MutablePacket","","Represents a generic, mutable, network packet.",null,null],[10,"packet_mut","","Retreive the underlying, mutable, buffer for the packet.",52,[[["self"]]]],[10,"payload_mut","","Retreive the mutable payload for the packet.",52,[[["self"]]]],[11,"clone_from","","Initialize this packet by cloning another.",52,[[["self"],["t"]]]],[8,"FromPacket","","Used to convert on-the-wire packets to their #[packet]…",null,null],[16,"T","","The type of the packet to convert from.",53,null],[10,"from_packet","","Converts a wire-format packet to #[packet] struct format.",53,[[["self"]]]],[8,"PacketSize","","Used to find the calculated size of the packet. This is…",null,null],[10,"packet_size","","Get the calculated size of the packet.",54,[[["self"]],["usize"]]],[4,"PacketData","","Packet data.",null,null],[13,"Owned","","A packet owns its contents.",55,null],[13,"Borrowed","","A packet borrows its contents.",55,null],[4,"MutPacketData","","Mutable packet data.",null,null],[13,"Owned","","Owned mutable packet data.",56,null],[13,"Borrowed","","Borrowed mutable packet data.",56,null],[8,"PrimitiveValues","","Used to convert a type to primitive values representing it.",null,null],[16,"T","","A tuple of types, to represent the current value.",57,null],[10,"to_primitive_values","","Convert a value to primitive types representing it.",57,[[["self"]]]],[0,"transport","pnet","Support for sending and receiving transport layer packets.",null,null],[4,"TransportProtocol","pnet::transport","Represents a transport layer protocol.",null,null],[13,"Ipv4","","Represents a transport protocol built on top of IPv4",58,null],[13,"Ipv6","","Represents a transport protocol built on top of IPv6",58,null],[4,"TransportChannelType","","Type of transport channel to present.",null,null],[13,"Layer4","","The application will send and receive transport layer…",59,null],[13,"Layer3","","The application will send and receive IPv4 packets, with…",59,null],[3,"TransportSender","","Structure used for sending at the transport layer. Should…",null,null],[12,"socket","","",60,null],[3,"TransportReceiver","","Structure used for receiving at the transport layer.…",null,null],[12,"socket","","",61,null],[12,"buffer","","",61,null],[12,"channel_type","","",61,null],[3,"Config","","Structure used for holding all configurable options for…",null,null],[5,"transport_channel","","Create a new `(TransportSender, TransportReceiver)` pair.",null,[[["usize"],["transportchanneltype"]],[["result",["error"]],["error"]]]],[5,"transport_channel_with","","Create a new `(TransportSender, TransportReceiver)` pair…",null,[[["config"],["usize"],["transportchanneltype"]],[["result",["error"]],["error"]]]],[3,"Ipv4TransportChannelIterator","","An iterator over packets of type `Ipv4Packet`.",null,null],[5,"ipv4_packet_iter","","Return a packet iterator with packets of type `Ipv4Packet`…",null,[[["transportreceiver"]],["ipv4transportchanneliterator"]]],[3,"UdpTransportChannelIterator","","An iterator over packets of type `UdpPacket`.",null,null],[5,"udp_packet_iter","","Return a packet iterator with packets of type `UdpPacket`…",null,[[["transportreceiver"]],["udptransportchanneliterator"]]],[3,"IcmpTransportChannelIterator","","An iterator over packets of type `IcmpPacket`.",null,null],[5,"icmp_packet_iter","","Return a packet iterator with packets of type `IcmpPacket`…",null,[[["transportreceiver"]],["icmptransportchanneliterator"]]],[3,"Icmpv6TransportChannelIterator","","An iterator over packets of type `Icmpv6Packet`.",null,null],[5,"icmpv6_packet_iter","","Return a packet iterator with packets of type…",null,[[["transportreceiver"]],["icmpv6transportchanneliterator"]]],[3,"TcpTransportChannelIterator","","An iterator over packets of type `TcpPacket`.",null,null],[5,"tcp_packet_iter","","Return a packet iterator with packets of type `TcpPacket`…",null,[[["transportreceiver"]],["tcptransportchanneliterator"]]],[14,"transport_channel_iterator","","Create an iterator for some packet type.",null,null],[0,"util","pnet","Miscellaneous utilities for low-level networking.",null,null],[3,"MacAddr","pnet::util","A MAC address",null,null],[12,"0","","",9,null],[12,"1","","",9,null],[12,"2","","",9,null],[12,"3","","",9,null],[12,"4","","",9,null],[12,"5","","",9,null],[4,"ParseMacAddrErr","","Represents an error which occurred whilst parsing a MAC…",null,null],[13,"TooManyComponents","","The MAC address has too many components, eg.…",10,null],[13,"TooFewComponents","","The MAC address has too few components, eg. 00:11",10,null],[13,"InvalidComponent","","One of the components contains an invalid value, eg.…",10,null],[5,"checksum","","Calculates a checksum. Used by ipv4 and icmp. The two…",null,[[["usize"]],["u16"]]],[5,"ipv4_checksum","","Calculate the checksum for a packet built on IPv4. Used by…",null,[[["usize"],["ipnextheaderprotocol"],["ipv4addr"]],["u16"]]],[5,"ipv6_checksum","","Calculate the checksum for a packet built on IPv6.",null,[[["usize"],["ipv6addr"],["ipnextheaderprotocol"]],["u16"]]],[8,"Octets","","Convert a value to a byte array.",null,null],[16,"Output","","Output type - bytes array.",50,null],[10,"octets","","Return a value as bytes (big-endian order).",50,[[["self"]]]],[11,"from","pnet::datalink::linux","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","pnet::datalink::dummy","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","pnet::datalink","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","pnet::util","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","pnet::packet::ethernet","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"into_iter","","",65,[[],["i"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","pnet::packet::gre","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"into_iter","","",68,[[],["i"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"into_iter","","",71,[[],["i"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"into_iter","","",75,[[],["i"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","pnet::packet::ip","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","pnet::packet::ipv4","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"into_iter","","",79,[[],["i"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"into_iter","","",82,[[],["i"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","pnet::packet::ipv6","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"into_iter","","",86,[[],["i"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"into_iter","","",89,[[],["i"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"into_iter","","",92,[[],["i"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"into_iter","","",95,[[],["i"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","pnet::packet::udp","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"into_iter","","",98,[[],["i"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","pnet::packet::tcp","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"into_iter","","",101,[[],["i"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"into_iter","","",104,[[],["i"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"from","pnet::packet::arp","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"into_iter","","",108,[[],["i"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","pnet::packet::icmp","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"into_iter","","",111,[[],["i"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","pnet::packet::icmp::echo_reply","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"into_iter","","",114,[[],["i"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","pnet::packet::icmp::echo_request","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"into_iter","","",117,[[],["i"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","pnet::packet::icmp::destination_unreachable","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"into_iter","","",120,[[],["i"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","pnet::packet::icmp::time_exceeded","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"into_iter","","",123,[[],["i"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","pnet::packet::icmpv6","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"into_iter","","",126,[[],["i"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","pnet::packet::icmpv6::ndp","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"into_iter","","",129,[[],["i"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[],["u"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[],["u"]]],[11,"into_iter","","",132,[[],["i"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[],["u"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[],["u"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"into_iter","","",135,[[],["i"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"into_iter","","",138,[[],["i"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[],["u"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"into_iter","","",141,[[],["i"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[],["u"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"into_iter","","",144,[[],["i"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","pnet::packet::vlan","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"into_iter","","",147,[[],["i"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","pnet::packet","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","pnet::transport","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,[[["self"],["t"]]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[],["u"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[],["u"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[],["u"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[],["u"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"fmt","pnet::util","",10,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",9,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",10,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",9,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"cmp","","",9,[[["self"],["macaddr"]],["ordering"]]],[11,"clone","","",9,[[["self"]],["macaddr"]]],[11,"clone","","",10,[[["self"]],["parsemacaddrerr"]]],[11,"hash","","",9,[[["self"],["__h"]]]],[11,"eq","","",10,[[["parsemacaddrerr"],["self"]],["bool"]]],[11,"eq","","",9,[[["self"]],["bool"]]],[11,"eq","","",9,[[["self"],["macaddr"]],["bool"]]],[11,"ne","","",9,[[["self"],["macaddr"]],["bool"]]],[11,"from_str","","",9,[[["str"]],[["macaddr"],["result",["macaddr","parsemacaddrerr"]],["parsemacaddrerr"]]]],[11,"from","","",9,[[],["macaddr"]]],[11,"description","","",10,[[["self"]],["str"]]],[11,"partial_cmp","","",9,[[["self"],["macaddr"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",9,[[["self"],["macaddr"]],["bool"]]],[11,"le","","",9,[[["self"],["macaddr"]],["bool"]]],[11,"gt","","",9,[[["self"],["macaddr"]],["bool"]]],[11,"ge","","",9,[[["self"],["macaddr"]],["bool"]]],[11,"default","","",9,[[],["macaddr"]]],[11,"clone","pnet::datalink::linux","",0,[[["self"]],["config"]]],[11,"clone","pnet::datalink","",8,[[["self"]],["networkinterface"]]],[11,"clone","","",1,[[["self"]],["channeltype"]]],[11,"clone","","",4,[[["self"]],["fanoutoption"]]],[11,"clone","","",3,[[["self"]],["fanouttype"]]],[11,"clone","","",5,[[["self"]],["config"]]],[11,"hash","pnet::datalink::linux","",0,[[["self"],["__h"]]]],[11,"hash","pnet::datalink","",3,[[["self"],["__h"]]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"hash","","",8,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"from","pnet::datalink::linux","",0,[[["config"]],["config"]]],[11,"from","pnet::datalink::dummy","Will not use the `super::Config`. This will simply call…",62,[[["config"]],["config"]]],[11,"eq","pnet::datalink","",8,[[["networkinterface"],["self"]],["bool"]]],[11,"ne","","",8,[[["networkinterface"],["self"]],["bool"]]],[11,"eq","","",5,[[["config"],["self"]],["bool"]]],[11,"ne","","",5,[[["config"],["self"]],["bool"]]],[11,"eq","","",3,[[["self"],["fanouttype"]],["bool"]]],[11,"eq","pnet::datalink::linux","",0,[[["config"],["self"]],["bool"]]],[11,"ne","","",0,[[["config"],["self"]],["bool"]]],[11,"eq","pnet::datalink","",4,[[["fanoutoption"],["self"]],["bool"]]],[11,"ne","","",4,[[["fanoutoption"],["self"]],["bool"]]],[11,"eq","","",1,[[["channeltype"],["self"]],["bool"]]],[11,"ne","","",1,[[["channeltype"],["self"]],["bool"]]],[11,"fmt","","",8,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",1,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",4,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",5,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",3,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::datalink::linux","",0,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::datalink::dummy","",62,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"default","pnet::datalink","",5,[[],["config"]]],[11,"default","pnet::datalink::dummy","Creates a default config with one input and one output…",62,[[],["config"]]],[11,"default","pnet::datalink::linux","",0,[[],["config"]]],[11,"packet_mut","pnet::packet::ipv6","",85,[[["self"]]]],[11,"payload_mut","","",85,[[["self"]]]],[11,"packet_mut","pnet::packet::icmp::echo_request","",116,[[["self"]]]],[11,"payload_mut","","",116,[[["self"]]]],[11,"packet_mut","pnet::packet::tcp","",103,[[["self"]]]],[11,"payload_mut","","",103,[[["self"]]]],[11,"packet_mut","pnet::packet::icmpv6::ndp","",128,[[["self"]]]],[11,"payload_mut","","",128,[[["self"]]]],[11,"packet_mut","pnet::packet::gre","",70,[[["self"]]]],[11,"payload_mut","","",70,[[["self"]]]],[11,"packet_mut","pnet::packet::vlan","",146,[[["self"]]]],[11,"payload_mut","","",146,[[["self"]]]],[11,"packet_mut","pnet::packet::arp","",107,[[["self"]]]],[11,"payload_mut","","",107,[[["self"]]]],[11,"packet_mut","pnet::packet::gre","",67,[[["self"]]]],[11,"payload_mut","","",67,[[["self"]]]],[11,"packet_mut","pnet::packet::ipv4","",81,[[["self"]]]],[11,"payload_mut","","",81,[[["self"]]]],[11,"packet_mut","pnet::packet::icmpv6::ndp","",143,[[["self"]]]],[11,"payload_mut","","",143,[[["self"]]]],[11,"packet_mut","pnet::packet::ethernet","",64,[[["self"]]]],[11,"payload_mut","","",64,[[["self"]]]],[11,"packet_mut","pnet::packet::icmpv6::ndp","",131,[[["self"]]]],[11,"payload_mut","","",131,[[["self"]]]],[11,"packet_mut","","",134,[[["self"]]]],[11,"payload_mut","","",134,[[["self"]]]],[11,"packet_mut","pnet::packet::ipv6","",91,[[["self"]]]],[11,"payload_mut","","",91,[[["self"]]]],[11,"packet_mut","pnet::packet::udp","",97,[[["self"]]]],[11,"payload_mut","","",97,[[["self"]]]],[11,"packet_mut","pnet::packet::ipv6","",94,[[["self"]]]],[11,"payload_mut","","",94,[[["self"]]]],[11,"packet_mut","pnet::packet::icmp::destination_unreachable","",119,[[["self"]]]],[11,"payload_mut","","",119,[[["self"]]]],[11,"packet_mut","pnet::packet::icmpv6","",125,[[["self"]]]],[11,"payload_mut","","",125,[[["self"]]]],[11,"packet_mut","pnet::packet::ipv6","",88,[[["self"]]]],[11,"payload_mut","","",88,[[["self"]]]],[11,"packet_mut","pnet::packet::icmpv6::ndp","",140,[[["self"]]]],[11,"payload_mut","","",140,[[["self"]]]],[11,"packet_mut","pnet::packet::ipv4","",78,[[["self"]]]],[11,"payload_mut","","",78,[[["self"]]]],[11,"packet_mut","pnet::packet::icmp::time_exceeded","",122,[[["self"]]]],[11,"payload_mut","","",122,[[["self"]]]],[11,"packet_mut","pnet::packet::icmp","",110,[[["self"]]]],[11,"payload_mut","","",110,[[["self"]]]],[11,"packet_mut","pnet::packet::gre","",74,[[["self"]]]],[11,"payload_mut","","",74,[[["self"]]]],[11,"packet_mut","pnet::packet::icmp::echo_reply","",113,[[["self"]]]],[11,"payload_mut","","",113,[[["self"]]]],[11,"packet_mut","pnet::packet::icmpv6::ndp","",137,[[["self"]]]],[11,"payload_mut","","",137,[[["self"]]]],[11,"packet_mut","pnet::packet::tcp","",100,[[["self"]]]],[11,"payload_mut","","",100,[[["self"]]]],[11,"packet","pnet::packet::icmp::echo_request","",116,[[["self"]]]],[11,"payload","","",116,[[["self"]]]],[11,"packet","pnet::packet::tcp","",103,[[["self"]]]],[11,"payload","","",103,[[["self"]]]],[11,"packet","","",99,[[["self"]]]],[11,"payload","","",99,[[["self"]]]],[11,"packet","pnet::packet::ipv6","",93,[[["self"]]]],[11,"payload","","",93,[[["self"]]]],[11,"packet","pnet::packet::icmpv6::ndp","",136,[[["self"]]]],[11,"payload","","",136,[[["self"]]]],[11,"packet","pnet::packet::gre","",70,[[["self"]]]],[11,"payload","","",70,[[["self"]]]],[11,"packet","pnet::packet::icmpv6","",125,[[["self"]]]],[11,"payload","","",125,[[["self"]]]],[11,"packet","pnet::packet::ipv6","",91,[[["self"]]]],[11,"payload","","",91,[[["self"]]]],[11,"packet","pnet::packet::icmpv6::ndp","",137,[[["self"]]]],[11,"payload","","",137,[[["self"]]]],[11,"packet","","",140,[[["self"]]]],[11,"payload","","",140,[[["self"]]]],[11,"packet","pnet::packet::gre","",67,[[["self"]]]],[11,"payload","","",67,[[["self"]]]],[11,"packet","pnet::packet::vlan","",145,[[["self"]]]],[11,"payload","","",145,[[["self"]]]],[11,"packet","pnet::packet::ipv4","",78,[[["self"]]]],[11,"payload","","",78,[[["self"]]]],[11,"packet","pnet::packet::icmpv6::ndp","",131,[[["self"]]]],[11,"payload","","",131,[[["self"]]]],[11,"packet","pnet::packet::ipv4","",81,[[["self"]]]],[11,"payload","","",81,[[["self"]]]],[11,"packet","pnet::packet::ethernet","",64,[[["self"]]]],[11,"payload","","",64,[[["self"]]]],[11,"packet","pnet::packet::icmp::destination_unreachable","",118,[[["self"]]]],[11,"payload","","",118,[[["self"]]]],[11,"packet","pnet::packet::icmpv6::ndp","",127,[[["self"]]]],[11,"payload","","",127,[[["self"]]]],[11,"packet","pnet::packet::icmp","",109,[[["self"]]]],[11,"payload","","",109,[[["self"]]]],[11,"packet","pnet::packet::icmp::echo_reply","",113,[[["self"]]]],[11,"payload","","",113,[[["self"]]]],[11,"packet","pnet::packet::ipv4","",80,[[["self"]]]],[11,"payload","","",80,[[["self"]]]],[11,"packet","pnet::packet::arp","",107,[[["self"]]]],[11,"payload","","",107,[[["self"]]]],[11,"packet","pnet::packet::ipv4","",77,[[["self"]]]],[11,"payload","","",77,[[["self"]]]],[11,"packet","pnet::packet::icmp::destination_unreachable","",119,[[["self"]]]],[11,"payload","","",119,[[["self"]]]],[11,"packet","pnet::packet::icmpv6::ndp","",130,[[["self"]]]],[11,"payload","","",130,[[["self"]]]],[11,"packet","pnet::packet::ipv6","",84,[[["self"]]]],[11,"payload","","",84,[[["self"]]]],[11,"packet","pnet::packet::tcp","",100,[[["self"]]]],[11,"payload","","",100,[[["self"]]]],[11,"packet","pnet::packet::ethernet","",63,[[["self"]]]],[11,"payload","","",63,[[["self"]]]],[11,"packet","pnet::packet::tcp","",102,[[["self"]]]],[11,"payload","","",102,[[["self"]]]],[11,"packet","pnet::packet::arp","",106,[[["self"]]]],[11,"payload","","",106,[[["self"]]]],[11,"packet","pnet::packet::ipv6","",85,[[["self"]]]],[11,"payload","","",85,[[["self"]]]],[11,"packet","","",90,[[["self"]]]],[11,"payload","","",90,[[["self"]]]],[11,"packet","pnet::packet::vlan","",146,[[["self"]]]],[11,"payload","","",146,[[["self"]]]],[11,"packet","pnet::packet::icmpv6::ndp","",139,[[["self"]]]],[11,"payload","","",139,[[["self"]]]],[11,"packet","","",133,[[["self"]]]],[11,"payload","","",133,[[["self"]]]],[11,"packet","pnet::packet::ipv6","",88,[[["self"]]]],[11,"payload","","",88,[[["self"]]]],[11,"packet","pnet::packet::icmpv6::ndp","",128,[[["self"]]]],[11,"payload","","",128,[[["self"]]]],[11,"packet","","",143,[[["self"]]]],[11,"payload","","",143,[[["self"]]]],[11,"packet","pnet::packet::gre","",69,[[["self"]]]],[11,"payload","","",69,[[["self"]]]],[11,"packet","pnet::packet::udp","",97,[[["self"]]]],[11,"payload","","",97,[[["self"]]]],[11,"packet","pnet::packet::gre","",73,[[["self"]]]],[11,"payload","","",73,[[["self"]]]],[11,"packet","pnet::packet::icmpv6::ndp","",142,[[["self"]]]],[11,"payload","","",142,[[["self"]]]],[11,"packet","pnet::packet::icmp","",110,[[["self"]]]],[11,"payload","","",110,[[["self"]]]],[11,"packet","pnet::packet::gre","",66,[[["self"]]]],[11,"payload","","",66,[[["self"]]]],[11,"packet","pnet::packet::ipv6","",94,[[["self"]]]],[11,"payload","","",94,[[["self"]]]],[11,"packet","pnet::packet::icmp::time_exceeded","",122,[[["self"]]]],[11,"payload","","",122,[[["self"]]]],[11,"packet","","",121,[[["self"]]]],[11,"payload","","",121,[[["self"]]]],[11,"packet","pnet::packet::udp","",96,[[["self"]]]],[11,"payload","","",96,[[["self"]]]],[11,"packet","pnet::packet::icmp::echo_request","",115,[[["self"]]]],[11,"payload","","",115,[[["self"]]]],[11,"packet","pnet::packet::icmp::echo_reply","",112,[[["self"]]]],[11,"payload","","",112,[[["self"]]]],[11,"packet","pnet::packet::icmpv6","",124,[[["self"]]]],[11,"payload","","",124,[[["self"]]]],[11,"packet","pnet::packet::icmpv6::ndp","",134,[[["self"]]]],[11,"payload","","",134,[[["self"]]]],[11,"packet","pnet::packet::gre","",74,[[["self"]]]],[11,"payload","","",74,[[["self"]]]],[11,"packet","pnet::packet::ipv6","",87,[[["self"]]]],[11,"payload","","",87,[[["self"]]]],[11,"next","pnet::packet::vlan","",147,[[["self"]],[["option",["vlanpacket"]],["vlanpacket"]]]],[11,"size_hint","","",147,[[["self"]]]],[11,"next","pnet::packet::icmp::time_exceeded","",123,[[["self"]],[["timeexceededpacket"],["option",["timeexceededpacket"]]]]],[11,"size_hint","","",123,[[["self"]]]],[11,"next","pnet::packet::icmp::destination_unreachable","",120,[[["self"]],[["destinationunreachablepacket"],["option",["destinationunreachablepacket"]]]]],[11,"size_hint","","",120,[[["self"]]]],[11,"next","pnet::packet::tcp","",101,[[["self"]],[["tcppacket"],["option",["tcppacket"]]]]],[11,"size_hint","","",101,[[["self"]]]],[11,"next","pnet::packet::ethernet","",65,[[["self"]],[["ethernetpacket"],["option",["ethernetpacket"]]]]],[11,"size_hint","","",65,[[["self"]]]],[11,"next","pnet::packet::ipv4","",82,[[["self"]],[["option",["ipv4optionpacket"]],["ipv4optionpacket"]]]],[11,"size_hint","","",82,[[["self"]]]],[11,"next","pnet::packet::ipv6","",86,[[["self"]],[["option",["ipv6packet"]],["ipv6packet"]]]],[11,"size_hint","","",86,[[["self"]]]],[11,"next","pnet::packet::gre","",71,[[["self"]],[["u16bepacket"],["option",["u16bepacket"]]]]],[11,"size_hint","","",71,[[["self"]]]],[11,"next","pnet::packet::icmpv6::ndp","",144,[[["self"]],[["redirectpacket"],["option",["redirectpacket"]]]]],[11,"size_hint","","",144,[[["self"]]]],[11,"next","","",141,[[["self"]],[["neighboradvertpacket"],["option",["neighboradvertpacket"]]]]],[11,"size_hint","","",141,[[["self"]]]],[11,"next","","",135,[[["self"]],[["option",["routeradvertpacket"]],["routeradvertpacket"]]]],[11,"size_hint","","",135,[[["self"]]]],[11,"next","pnet::packet::arp","",108,[[["self"]],[["option",["arppacket"]],["arppacket"]]]],[11,"size_hint","","",108,[[["self"]]]],[11,"next","pnet::packet::icmpv6::ndp","",132,[[["self"]],[["routersolicitpacket"],["option",["routersolicitpacket"]]]]],[11,"size_hint","","",132,[[["self"]]]],[11,"next","","",129,[[["self"]],[["option",["ndpoptionpacket"]],["ndpoptionpacket"]]]],[11,"size_hint","","",129,[[["self"]]]],[11,"next","pnet::packet::ipv6","",89,[[["self"]],[["option",["extensionpacket"]],["extensionpacket"]]]],[11,"size_hint","","",89,[[["self"]]]],[11,"next","pnet::packet::icmp::echo_reply","",114,[[["self"]],[["echoreplypacket"],["option",["echoreplypacket"]]]]],[11,"size_hint","","",114,[[["self"]]]],[11,"next","pnet::packet::tcp","",104,[[["self"]],[["tcpoptionpacket"],["option",["tcpoptionpacket"]]]]],[11,"size_hint","","",104,[[["self"]]]],[11,"next","pnet::packet::ipv4","",79,[[["self"]],[["option",["ipv4packet"]],["ipv4packet"]]]],[11,"size_hint","","",79,[[["self"]]]],[11,"next","pnet::packet::gre","",75,[[["self"]],[["u32bepacket"],["option",["u32bepacket"]]]]],[11,"size_hint","","",75,[[["self"]]]],[11,"next","pnet::packet::ipv6","",92,[[["self"]],[["routingpacket"],["option",["routingpacket"]]]]],[11,"size_hint","","",92,[[["self"]]]],[11,"next","pnet::packet::gre","",68,[[["self"]],[["grepacket"],["option",["grepacket"]]]]],[11,"size_hint","","",68,[[["self"]]]],[11,"next","pnet::packet::icmp::echo_request","",117,[[["self"]],[["option",["echorequestpacket"]],["echorequestpacket"]]]],[11,"size_hint","","",117,[[["self"]]]],[11,"next","pnet::packet::icmpv6","",126,[[["self"]],[["icmpv6packet"],["option",["icmpv6packet"]]]]],[11,"size_hint","","",126,[[["self"]]]],[11,"next","pnet::packet::icmpv6::ndp","",138,[[["self"]],[["neighborsolicitpacket"],["option",["neighborsolicitpacket"]]]]],[11,"size_hint","","",138,[[["self"]]]],[11,"next","pnet::packet::ipv6","",95,[[["self"]],[["fragmentpacket"],["option",["fragmentpacket"]]]]],[11,"size_hint","","",95,[[["self"]]]],[11,"next","pnet::packet::icmp","",111,[[["self"]],[["icmppacket"],["option",["icmppacket"]]]]],[11,"size_hint","","",111,[[["self"]]]],[11,"next","pnet::packet::udp","",98,[[["self"]],[["udppacket"],["option",["udppacket"]]]]],[11,"size_hint","","",98,[[["self"]]]],[11,"fmt","pnet::packet::ethernet","",12,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::ip","",14,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmpv6","",39,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmp","",109,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::ipv6","",18,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmpv6::ndp","",142,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmpv6","",124,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmp::echo_request","",115,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::ipv6","",93,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmp::echo_reply","",32,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmpv6","",40,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::ipv6","",90,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::udp","",97,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::vlan","",49,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::gre","",72,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::udp","",21,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmp::echo_reply","",113,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmp::time_exceeded","",121,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::ethernet","",12,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::tcp","",103,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::gre","",67,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",69,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::tcp","",99,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmpv6::ndp","",46,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::tcp","",102,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmpv6::ndp","",143,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::ipv6","",17,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",94,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::ethernet","",64,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::ipv6","",87,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmpv6::ndp","",131,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::ipv4","",80,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::arp","",24,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmp::destination_unreachable","",118,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmpv6::ndp","",47,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::gre","",66,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmp::destination_unreachable","",119,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::ipv4","",83,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmp::echo_request","",35,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::vlan","",145,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::tcp","",105,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmpv6::ndp","",42,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::ipv4","",16,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmp","",29,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::gre","",73,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmpv6::ndp","",41,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",127,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::arp","",106,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmp","",110,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::gre","",76,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmpv6::ndp","",128,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::vlan","",146,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmp::echo_request","",33,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::tcp","",23,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::ip","",14,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::udp","",96,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmpv6::ndp","",43,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::ipv6","",88,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmp::destination_unreachable","",36,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmp::echo_request","",116,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::gre","",70,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmp::echo_request","",34,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::ipv6","",20,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmpv6::ndp","",137,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::tcp","",22,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::gre","",13,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmpv6::ndp","",134,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::ipv4","",77,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmpv6::ndp","",140,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",44,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::ipv6","",91,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmpv6::ndp","",133,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmp::time_exceeded","",37,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmpv6::ndp","",136,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::ipv4","",15,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::gre","",74,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::ipv6","",19,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::arp","",107,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmp::time_exceeded","",122,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::ethernet","",11,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmp::echo_reply","",31,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::ipv4","",81,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",78,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmpv6::ndp","",139,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",45,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::ipv6","",84,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmpv6","",38,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::tcp","",100,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::ipv6","",85,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmpv6::ndp","",130,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::arp","",26,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmp","",28,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::arp","",25,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::vlan","",48,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmp::echo_reply","",30,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmpv6","",125,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmp","",27,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::ethernet","",63,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","pnet::packet::icmp::echo_reply","",112,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"cmp","","",31,[[["sequencenumber"],["self"]],["ordering"]]],[11,"cmp","pnet::packet::tcp","",23,[[["tcpoptionnumber"],["self"]],["ordering"]]],[11,"cmp","pnet::packet::icmp::echo_reply","",30,[[["self"],["identifier"]],["ordering"]]],[11,"cmp","pnet::packet::ip","",14,[[["ipnextheaderprotocol"],["self"]],["ordering"]]],[11,"cmp","pnet::packet::arp","",24,[[["arpoperation"],["self"]],["ordering"]]],[11,"cmp","pnet::packet::ipv4","",15,[[["self"],["ipv4optionnumber"]],["ordering"]]],[11,"cmp","pnet::packet::icmp","",28,[[["self"],["icmpcode"]],["ordering"]]],[11,"cmp","","",27,[[["icmptype"],["self"]],["ordering"]]],[11,"cmp","pnet::packet::icmpv6::ndp","",41,[[["self"],["ndpoptiontype"]],["ordering"]]],[11,"cmp","pnet::packet::icmpv6","",38,[[["icmpv6type"],["self"]],["ordering"]]],[11,"cmp","pnet::packet::vlan","",48,[[["self"],["classofservice"]],["ordering"]]],[11,"cmp","pnet::packet::icmp::echo_request","",33,[[["identifier"],["self"]],["ordering"]]],[11,"cmp","","",34,[[["sequencenumber"],["self"]],["ordering"]]],[11,"cmp","pnet::packet::icmpv6","",39,[[["icmpv6code"],["self"]],["ordering"]]],[11,"cmp","pnet::packet::ethernet","",12,[[["self"],["ethertype"]],["ordering"]]],[11,"cmp","pnet::packet::arp","",25,[[["self"],["arphardwaretype"]],["ordering"]]],[11,"clone","pnet::packet::icmp::destination_unreachable","",36,[[["self"]],["destinationunreachable"]]],[11,"clone","pnet::packet::icmp::echo_reply","",30,[[["self"]],["identifier"]]],[11,"clone","pnet::packet::gre","",13,[[["self"]],["gre"]]],[11,"clone","pnet::packet::icmpv6","",39,[[["self"]],["icmpv6code"]]],[11,"clone","pnet::packet::tcp","",23,[[["self"]],["tcpoptionnumber"]]],[11,"clone","pnet::packet::ethernet","",11,[[["self"]],["ethernet"]]],[11,"clone","pnet::packet::icmp::echo_reply","",31,[[["self"]],["sequencenumber"]]],[11,"clone","pnet::packet::ethernet","",12,[[["self"]],["ethertype"]]],[11,"clone","pnet::packet::ip","",14,[[["self"]],["ipnextheaderprotocol"]]],[11,"clone","pnet::packet::icmp::echo_reply","",32,[[["self"]],["echoreply"]]],[11,"clone","pnet::packet::icmp::echo_request","",33,[[["self"]],["identifier"]]],[11,"clone","pnet::packet::icmpv6","",40,[[["self"]],["icmpv6"]]],[11,"clone","pnet::packet::arp","",26,[[["self"]],["arp"]]],[11,"clone","pnet::packet::ipv6","",17,[[["self"]],["ipv6"]]],[11,"clone","pnet::packet::icmpv6::ndp","",47,[[["self"]],["redirect"]]],[11,"clone","","",46,[[["self"]],["neighboradvert"]]],[11,"clone","","",42,[[["self"]],["ndpoption"]]],[11,"clone","pnet::packet::ipv6","",20,[[["self"]],["fragment"]]],[11,"clone","pnet::packet::icmp::echo_request","",34,[[["self"]],["sequencenumber"]]],[11,"clone","pnet::packet::icmpv6::ndp","",43,[[["self"]],["routersolicit"]]],[11,"clone","","",45,[[["self"]],["neighborsolicit"]]],[11,"clone","pnet::packet::udp","",21,[[["self"]],["udp"]]],[11,"clone","pnet::packet::arp","",25,[[["self"]],["arphardwaretype"]]],[11,"clone","pnet::packet::gre","",76,[[["self"]],["u32be"]]],[11,"clone","pnet::packet::icmp","",28,[[["self"]],["icmpcode"]]],[11,"clone","pnet::packet::icmp::time_exceeded","",37,[[["self"]],["timeexceeded"]]],[11,"clone","pnet::packet::gre","",72,[[["self"]],["u16be"]]],[11,"clone","pnet::packet::vlan","",49,[[["self"]],["vlan"]]],[11,"clone","pnet::packet::ipv4","",15,[[["self"]],["ipv4optionnumber"]]],[11,"clone","","",16,[[["self"]],["ipv4"]]],[11,"clone","pnet::packet::icmpv6","",38,[[["self"]],["icmpv6type"]]],[11,"clone","pnet::packet::ipv6","",18,[[["self"]],["extension"]]],[11,"clone","pnet::packet::vlan","",48,[[["self"]],["classofservice"]]],[11,"clone","pnet::packet::icmpv6::ndp","",41,[[["self"]],["ndpoptiontype"]]],[11,"clone","pnet::packet::tcp","",22,[[["self"]],["tcp"]]],[11,"clone","pnet::packet::icmpv6::ndp","",44,[[["self"]],["routeradvert"]]],[11,"clone","pnet::packet::tcp","",105,[[["self"]],["tcpoption"]]],[11,"clone","pnet::packet::icmp::echo_request","",35,[[["self"]],["echorequest"]]],[11,"clone","pnet::packet::icmp","",27,[[["self"]],["icmptype"]]],[11,"clone","pnet::packet::arp","",24,[[["self"]],["arpoperation"]]],[11,"clone","pnet::packet::ipv4","",83,[[["self"]],["ipv4option"]]],[11,"clone","pnet::packet::icmp","",29,[[["self"]],["icmp"]]],[11,"clone","pnet::packet::ipv6","",19,[[["self"]],["routing"]]],[11,"hash","pnet::packet::ethernet","",12,[[["self"],["__h"]]]],[11,"hash","pnet::packet::icmp::echo_request","",34,[[["self"],["__h"]]]],[11,"hash","pnet::packet::ipv4","",15,[[["self"],["__h"]]]],[11,"hash","pnet::packet::icmpv6","",38,[[["self"],["__h"]]]],[11,"hash","pnet::packet::icmp::echo_reply","",30,[[["self"],["__h"]]]],[11,"hash","pnet::packet::ip","",14,[[["self"],["__h"]]]],[11,"hash","pnet::packet::arp","",25,[[["self"],["__h"]]]],[11,"hash","pnet::packet::icmp::echo_reply","",31,[[["self"],["__h"]]]],[11,"hash","pnet::packet::vlan","",48,[[["self"],["__h"]]]],[11,"hash","pnet::packet::icmpv6::ndp","",41,[[["self"],["__h"]]]],[11,"hash","pnet::packet::arp","",24,[[["self"],["__h"]]]],[11,"hash","pnet::packet::tcp","",23,[[["self"],["__h"]]]],[11,"hash","pnet::packet::icmp","",28,[[["self"],["__h"]]]],[11,"hash","pnet::packet::icmpv6","",39,[[["self"],["__h"]]]],[11,"hash","pnet::packet::icmp","",27,[[["self"],["__h"]]]],[11,"hash","pnet::packet::icmp::echo_request","",33,[[["self"],["__h"]]]],[11,"eq","pnet::packet::tcp","",103,[[["self"],["mutabletcpoptionpacket"]],["bool"]]],[11,"ne","","",103,[[["self"],["mutabletcpoptionpacket"]],["bool"]]],[11,"eq","pnet::packet::ipv4","",80,[[["ipv4optionpacket"],["self"]],["bool"]]],[11,"ne","","",80,[[["ipv4optionpacket"],["self"]],["bool"]]],[11,"eq","pnet::packet::ethernet","",63,[[["ethernetpacket"],["self"]],["bool"]]],[11,"ne","","",63,[[["ethernetpacket"],["self"]],["bool"]]],[11,"eq","pnet::packet::icmpv6::ndp","",136,[[["self"],["neighborsolicitpacket"]],["bool"]]],[11,"ne","","",136,[[["self"],["neighborsolicitpacket"]],["bool"]]],[11,"eq","","",142,[[["self"],["redirectpacket"]],["bool"]]],[11,"ne","","",142,[[["self"],["redirectpacket"]],["bool"]]],[11,"eq","","",134,[[["self"],["mutablerouteradvertpacket"]],["bool"]]],[11,"ne","","",134,[[["self"],["mutablerouteradvertpacket"]],["bool"]]],[11,"eq","pnet::packet::icmp","",27,[[["icmptype"],["self"]],["bool"]]],[11,"ne","","",27,[[["icmptype"],["self"]],["bool"]]],[11,"eq","pnet::packet::tcp","",23,[[["tcpoptionnumber"],["self"]],["bool"]]],[11,"ne","","",23,[[["tcpoptionnumber"],["self"]],["bool"]]],[11,"eq","pnet::packet::icmp::time_exceeded","",121,[[["timeexceededpacket"],["self"]],["bool"]]],[11,"ne","","",121,[[["timeexceededpacket"],["self"]],["bool"]]],[11,"eq","pnet::packet::icmpv6::ndp","",127,[[["self"],["ndpoptionpacket"]],["bool"]]],[11,"ne","","",127,[[["self"],["ndpoptionpacket"]],["bool"]]],[11,"eq","pnet::packet::icmpv6","",39,[[["icmpv6code"],["self"]],["bool"]]],[11,"ne","","",39,[[["icmpv6code"],["self"]],["bool"]]],[11,"eq","pnet::packet::icmp::echo_reply","",112,[[["self"],["echoreplypacket"]],["bool"]]],[11,"ne","","",112,[[["self"],["echoreplypacket"]],["bool"]]],[11,"eq","pnet::packet::gre","",70,[[["mutableu16bepacket"],["self"]],["bool"]]],[11,"ne","","",70,[[["mutableu16bepacket"],["self"]],["bool"]]],[11,"eq","pnet::packet::ipv4","",15,[[["self"],["ipv4optionnumber"]],["bool"]]],[11,"ne","","",15,[[["self"],["ipv4optionnumber"]],["bool"]]],[11,"eq","pnet::packet::vlan","",146,[[["mutablevlanpacket"],["self"]],["bool"]]],[11,"ne","","",146,[[["mutablevlanpacket"],["self"]],["bool"]]],[11,"eq","pnet::packet::ipv6","",85,[[["mutableipv6packet"],["self"]],["bool"]]],[11,"ne","","",85,[[["mutableipv6packet"],["self"]],["bool"]]],[11,"eq","pnet::packet::icmpv6::ndp","",41,[[["self"],["ndpoptiontype"]],["bool"]]],[11,"ne","","",41,[[["self"],["ndpoptiontype"]],["bool"]]],[11,"eq","pnet::packet::ipv6","",84,[[["self"],["ipv6packet"]],["bool"]]],[11,"ne","","",84,[[["self"],["ipv6packet"]],["bool"]]],[11,"eq","","",87,[[["self"],["extensionpacket"]],["bool"]]],[11,"ne","","",87,[[["self"],["extensionpacket"]],["bool"]]],[11,"eq","pnet::packet::ethernet","",12,[[["self"],["ethertype"]],["bool"]]],[11,"ne","","",12,[[["self"],["ethertype"]],["bool"]]],[11,"eq","pnet::packet::icmpv6","",38,[[["icmpv6type"],["self"]],["bool"]]],[11,"ne","","",38,[[["icmpv6type"],["self"]],["bool"]]],[11,"eq","pnet::packet::icmpv6::ndp","",133,[[["self"],["routeradvertpacket"]],["bool"]]],[11,"ne","","",133,[[["self"],["routeradvertpacket"]],["bool"]]],[11,"eq","pnet::packet::ipv6","",94,[[["self"],["mutablefragmentpacket"]],["bool"]]],[11,"ne","","",94,[[["self"],["mutablefragmentpacket"]],["bool"]]],[11,"eq","pnet::packet::icmpv6::ndp","",131,[[["self"],["mutableroutersolicitpacket"]],["bool"]]],[11,"ne","","",131,[[["self"],["mutableroutersolicitpacket"]],["bool"]]],[11,"eq","pnet::packet::gre","",73,[[["self"],["u32bepacket"]],["bool"]]],[11,"ne","","",73,[[["self"],["u32bepacket"]],["bool"]]],[11,"eq","pnet::packet::icmpv6::ndp","",137,[[["mutableneighborsolicitpacket"],["self"]],["bool"]]],[11,"ne","","",137,[[["mutableneighborsolicitpacket"],["self"]],["bool"]]],[11,"eq","pnet::packet::icmpv6","",125,[[["self"],["mutableicmpv6packet"]],["bool"]]],[11,"ne","","",125,[[["self"],["mutableicmpv6packet"]],["bool"]]],[11,"eq","pnet::packet::tcp","",102,[[["self"],["tcpoptionpacket"]],["bool"]]],[11,"ne","","",102,[[["self"],["tcpoptionpacket"]],["bool"]]],[11,"eq","pnet::packet::ipv6","",93,[[["self"],["fragmentpacket"]],["bool"]]],[11,"ne","","",93,[[["self"],["fragmentpacket"]],["bool"]]],[11,"eq","pnet::packet::icmpv6::ndp","",130,[[["routersolicitpacket"],["self"]],["bool"]]],[11,"ne","","",130,[[["routersolicitpacket"],["self"]],["bool"]]],[11,"eq","pnet::packet::udp","",96,[[["udppacket"],["self"]],["bool"]]],[11,"ne","","",96,[[["udppacket"],["self"]],["bool"]]],[11,"eq","pnet::packet::ipv4","",81,[[["mutableipv4optionpacket"],["self"]],["bool"]]],[11,"ne","","",81,[[["mutableipv4optionpacket"],["self"]],["bool"]]],[11,"eq","pnet::packet::icmpv6::ndp","",139,[[["neighboradvertpacket"],["self"]],["bool"]]],[11,"ne","","",139,[[["neighboradvertpacket"],["self"]],["bool"]]],[11,"eq","pnet::packet::arp","",24,[[["arpoperation"],["self"]],["bool"]]],[11,"ne","","",24,[[["arpoperation"],["self"]],["bool"]]],[11,"eq","pnet::packet::icmp","",28,[[["self"],["icmpcode"]],["bool"]]],[11,"ne","","",28,[[["self"],["icmpcode"]],["bool"]]],[11,"eq","pnet::packet::icmpv6::ndp","",140,[[["mutableneighboradvertpacket"],["self"]],["bool"]]],[11,"ne","","",140,[[["mutableneighboradvertpacket"],["self"]],["bool"]]],[11,"eq","pnet::packet::ip","",14,[[["ipnextheaderprotocol"],["self"]],["bool"]]],[11,"ne","","",14,[[["ipnextheaderprotocol"],["self"]],["bool"]]],[11,"eq","pnet::packet::tcp","",99,[[["tcppacket"],["self"]],["bool"]]],[11,"ne","","",99,[[["tcppacket"],["self"]],["bool"]]],[11,"eq","pnet::packet::icmp::echo_request","",34,[[["sequencenumber"],["self"]],["bool"]]],[11,"ne","","",34,[[["sequencenumber"],["self"]],["bool"]]],[11,"eq","","",116,[[["self"],["mutableechorequestpacket"]],["bool"]]],[11,"ne","","",116,[[["self"],["mutableechorequestpacket"]],["bool"]]],[11,"eq","pnet::packet::ipv6","",90,[[["self"],["routingpacket"]],["bool"]]],[11,"ne","","",90,[[["self"],["routingpacket"]],["bool"]]],[11,"eq","pnet::packet::icmpv6","",124,[[["self"],["icmpv6packet"]],["bool"]]],[11,"ne","","",124,[[["self"],["icmpv6packet"]],["bool"]]],[11,"eq","pnet::packet::ipv6","",91,[[["mutableroutingpacket"],["self"]],["bool"]]],[11,"ne","","",91,[[["mutableroutingpacket"],["self"]],["bool"]]],[11,"eq","pnet::packet::icmp::echo_reply","",113,[[["self"],["mutableechoreplypacket"]],["bool"]]],[11,"ne","","",113,[[["self"],["mutableechoreplypacket"]],["bool"]]],[11,"eq","pnet::packet::gre","",67,[[["mutablegrepacket"],["self"]],["bool"]]],[11,"ne","","",67,[[["mutablegrepacket"],["self"]],["bool"]]],[11,"eq","pnet::packet::udp","",97,[[["self"],["mutableudppacket"]],["bool"]]],[11,"ne","","",97,[[["self"],["mutableudppacket"]],["bool"]]],[11,"eq","pnet::packet::icmp","",110,[[["self"],["mutableicmppacket"]],["bool"]]],[11,"ne","","",110,[[["self"],["mutableicmppacket"]],["bool"]]],[11,"eq","pnet::packet::gre","",66,[[["self"],["grepacket"]],["bool"]]],[11,"ne","","",66,[[["self"],["grepacket"]],["bool"]]],[11,"eq","pnet::packet::vlan","",145,[[["self"],["vlanpacket"]],["bool"]]],[11,"ne","","",145,[[["self"],["vlanpacket"]],["bool"]]],[11,"eq","pnet::packet::icmp::echo_reply","",30,[[["self"],["identifier"]],["bool"]]],[11,"ne","","",30,[[["self"],["identifier"]],["bool"]]],[11,"eq","pnet::packet::icmp::time_exceeded","",122,[[["self"],["mutabletimeexceededpacket"]],["bool"]]],[11,"ne","","",122,[[["self"],["mutabletimeexceededpacket"]],["bool"]]],[11,"eq","pnet::packet::gre","",69,[[["u16bepacket"],["self"]],["bool"]]],[11,"ne","","",69,[[["u16bepacket"],["self"]],["bool"]]],[11,"eq","pnet::packet::ipv6","",88,[[["mutableextensionpacket"],["self"]],["bool"]]],[11,"ne","","",88,[[["mutableextensionpacket"],["self"]],["bool"]]],[11,"eq","pnet::packet::gre","",74,[[["self"],["mutableu32bepacket"]],["bool"]]],[11,"ne","","",74,[[["self"],["mutableu32bepacket"]],["bool"]]],[11,"eq","pnet::packet::vlan","",48,[[["self"],["classofservice"]],["bool"]]],[11,"ne","","",48,[[["self"],["classofservice"]],["bool"]]],[11,"eq","pnet::packet::ethernet","",64,[[["self"],["mutableethernetpacket"]],["bool"]]],[11,"ne","","",64,[[["self"],["mutableethernetpacket"]],["bool"]]],[11,"eq","pnet::packet::arp","",107,[[["self"],["mutablearppacket"]],["bool"]]],[11,"ne","","",107,[[["self"],["mutablearppacket"]],["bool"]]],[11,"eq","pnet::packet::icmp::destination_unreachable","",119,[[["mutabledestinationunreachablepacket"],["self"]],["bool"]]],[11,"ne","","",119,[[["mutabledestinationunreachablepacket"],["self"]],["bool"]]],[11,"eq","pnet::packet::icmp","",109,[[["icmppacket"],["self"]],["bool"]]],[11,"ne","","",109,[[["icmppacket"],["self"]],["bool"]]],[11,"eq","pnet::packet::icmpv6::ndp","",128,[[["self"],["mutablendpoptionpacket"]],["bool"]]],[11,"ne","","",128,[[["self"],["mutablendpoptionpacket"]],["bool"]]],[11,"eq","","",143,[[["mutableredirectpacket"],["self"]],["bool"]]],[11,"ne","","",143,[[["mutableredirectpacket"],["self"]],["bool"]]],[11,"eq","pnet::packet::arp","",106,[[["self"],["arppacket"]],["bool"]]],[11,"ne","","",106,[[["self"],["arppacket"]],["bool"]]],[11,"eq","pnet::packet::ipv4","",78,[[["self"],["mutableipv4packet"]],["bool"]]],[11,"ne","","",78,[[["self"],["mutableipv4packet"]],["bool"]]],[11,"eq","pnet::packet::arp","",25,[[["self"],["arphardwaretype"]],["bool"]]],[11,"ne","","",25,[[["self"],["arphardwaretype"]],["bool"]]],[11,"eq","pnet::packet::icmp::echo_reply","",31,[[["sequencenumber"],["self"]],["bool"]]],[11,"ne","","",31,[[["sequencenumber"],["self"]],["bool"]]],[11,"eq","pnet::packet::icmp::echo_request","",33,[[["identifier"],["self"]],["bool"]]],[11,"ne","","",33,[[["identifier"],["self"]],["bool"]]],[11,"eq","pnet::packet::ipv4","",77,[[["self"],["ipv4packet"]],["bool"]]],[11,"ne","","",77,[[["self"],["ipv4packet"]],["bool"]]],[11,"eq","pnet::packet::tcp","",100,[[["mutabletcppacket"],["self"]],["bool"]]],[11,"ne","","",100,[[["mutabletcppacket"],["self"]],["bool"]]],[11,"eq","pnet::packet::icmp::echo_request","",115,[[["self"],["echorequestpacket"]],["bool"]]],[11,"ne","","",115,[[["self"],["echorequestpacket"]],["bool"]]],[11,"eq","pnet::packet::icmp::destination_unreachable","",118,[[["destinationunreachablepacket"],["self"]],["bool"]]],[11,"ne","","",118,[[["destinationunreachablepacket"],["self"]],["bool"]]],[11,"from_packet","pnet::packet::ipv4","",77,[[["self"]],["ipv4"]]],[11,"from_packet","pnet::packet::icmp::echo_reply","",112,[[["self"]],["echoreply"]]],[11,"from_packet","pnet::packet::icmpv6::ndp","",134,[[["self"]],["routeradvert"]]],[11,"from_packet","pnet::packet::ipv4","",78,[[["self"]],["ipv4"]]],[11,"from_packet","pnet::packet::vlan","",145,[[["self"]],["vlan"]]],[11,"from_packet","pnet::packet::arp","",106,[[["self"]],["arp"]]],[11,"from_packet","pnet::packet::icmpv6::ndp","",140,[[["self"]],["neighboradvert"]]],[11,"from_packet","pnet::packet::gre","",66,[[["self"]],["gre"]]],[11,"from_packet","pnet::packet::tcp","",103,[[["self"]],["tcpoption"]]],[11,"from_packet","pnet::packet::ipv6","",94,[[["self"]],["fragment"]]],[11,"from_packet","pnet::packet::icmp::destination_unreachable","",119,[[["self"]],["destinationunreachable"]]],[11,"from_packet","pnet::packet::gre","",69,[[["self"]],["u16be"]]],[11,"from_packet","pnet::packet::icmpv6","",124,[[["self"]],["icmpv6"]]],[11,"from_packet","pnet::packet::arp","",107,[[["self"]],["arp"]]],[11,"from_packet","pnet::packet::tcp","",99,[[["self"]],["tcp"]]],[11,"from_packet","pnet::packet::ipv4","",81,[[["self"]],["ipv4option"]]],[11,"from_packet","pnet::packet::tcp","",100,[[["self"]],["tcp"]]],[11,"from_packet","pnet::packet::icmpv6::ndp","",143,[[["self"]],["redirect"]]],[11,"from_packet","pnet::packet::tcp","",102,[[["self"]],["tcpoption"]]],[11,"from_packet","pnet::packet::udp","",96,[[["self"]],["udp"]]],[11,"from_packet","pnet::packet::gre","",73,[[["self"]],["u32be"]]],[11,"from_packet","pnet::packet::ipv6","",85,[[["self"]],["ipv6"]]],[11,"from_packet","pnet::packet::icmpv6","",125,[[["self"]],["icmpv6"]]],[11,"from_packet","pnet::packet::icmp::echo_reply","",113,[[["self"]],["echoreply"]]],[11,"from_packet","pnet::packet::ipv4","",80,[[["self"]],["ipv4option"]]],[11,"from_packet","pnet::packet::ipv6","",91,[[["self"]],["routing"]]],[11,"from_packet","pnet::packet::icmp::time_exceeded","",122,[[["self"]],["timeexceeded"]]],[11,"from_packet","pnet::packet::icmpv6::ndp","",139,[[["self"]],["neighboradvert"]]],[11,"from_packet","pnet::packet::ipv6","",93,[[["self"]],["fragment"]]],[11,"from_packet","pnet::packet::icmp::echo_request","",115,[[["self"]],["echorequest"]]],[11,"from_packet","pnet::packet::ipv6","",88,[[["self"]],["extension"]]],[11,"from_packet","pnet::packet::udp","",97,[[["self"]],["udp"]]],[11,"from_packet","pnet::packet::ipv6","",87,[[["self"]],["extension"]]],[11,"from_packet","pnet::packet::icmpv6::ndp","",127,[[["self"]],["ndpoption"]]],[11,"from_packet","pnet::packet::icmp","",109,[[["self"]],["icmp"]]],[11,"from_packet","pnet::packet::gre","",67,[[["self"]],["gre"]]],[11,"from_packet","pnet::packet::icmp::destination_unreachable","",118,[[["self"]],["destinationunreachable"]]],[11,"from_packet","pnet::packet::ethernet","",64,[[["self"]],["ethernet"]]],[11,"from_packet","","",63,[[["self"]],["ethernet"]]],[11,"from_packet","pnet::packet::gre","",70,[[["self"]],["u16be"]]],[11,"from_packet","pnet::packet::icmpv6::ndp","",136,[[["self"]],["neighborsolicit"]]],[11,"from_packet","","",137,[[["self"]],["neighborsolicit"]]],[11,"from_packet","pnet::packet::icmp","",110,[[["self"]],["icmp"]]],[11,"from_packet","pnet::packet::icmp::time_exceeded","",121,[[["self"]],["timeexceeded"]]],[11,"from_packet","pnet::packet::icmpv6::ndp","",142,[[["self"]],["redirect"]]],[11,"from_packet","","",133,[[["self"]],["routeradvert"]]],[11,"from_packet","pnet::packet::gre","",74,[[["self"]],["u32be"]]],[11,"from_packet","pnet::packet::vlan","",146,[[["self"]],["vlan"]]],[11,"from_packet","pnet::packet::ipv6","",90,[[["self"]],["routing"]]],[11,"from_packet","pnet::packet::icmpv6::ndp","",131,[[["self"]],["routersolicit"]]],[11,"from_packet","pnet::packet::icmp::echo_request","",116,[[["self"]],["echorequest"]]],[11,"from_packet","pnet::packet::icmpv6::ndp","",130,[[["self"]],["routersolicit"]]],[11,"from_packet","pnet::packet::ipv6","",84,[[["self"]],["ipv6"]]],[11,"from_packet","pnet::packet::icmpv6::ndp","",128,[[["self"]],["ndpoption"]]],[11,"to_primitive_values","pnet::packet::icmp::echo_reply","",30,[[["self"]]]],[11,"to_primitive_values","pnet::packet::ipv4","",15,[[["self"]]]],[11,"to_primitive_values","pnet::packet::icmp","",28,[[["self"]]]],[11,"to_primitive_values","pnet::packet::ethernet","",12,[[["self"]]]],[11,"to_primitive_values","pnet::packet::icmpv6","",39,[[["self"]]]],[11,"to_primitive_values","pnet::packet::arp","",25,[[["self"]]]],[11,"to_primitive_values","pnet::packet::ip","",14,[[["self"]]]],[11,"to_primitive_values","pnet::packet::icmp::echo_request","",33,[[["self"]]]],[11,"to_primitive_values","pnet::packet::icmpv6","",38,[[["self"]]]],[11,"to_primitive_values","pnet::packet::tcp","",23,[[["self"]]]],[11,"to_primitive_values","pnet::packet::icmp::echo_reply","",31,[[["self"]]]],[11,"to_primitive_values","pnet::packet::arp","",24,[[["self"]]]],[11,"to_primitive_values","pnet::packet::icmp","",27,[[["self"]]]],[11,"to_primitive_values","pnet::packet::icmp::echo_request","",34,[[["self"]]]],[11,"to_primitive_values","pnet::packet::vlan","",48,[[["self"]]]],[11,"to_primitive_values","pnet::packet::icmpv6::ndp","",41,[[["self"]]]],[11,"partial_cmp","pnet::packet::ipv4","",15,[[["self"],["ipv4optionnumber"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",15,[[["self"],["ipv4optionnumber"]],["bool"]]],[11,"le","","",15,[[["self"],["ipv4optionnumber"]],["bool"]]],[11,"gt","","",15,[[["self"],["ipv4optionnumber"]],["bool"]]],[11,"ge","","",15,[[["self"],["ipv4optionnumber"]],["bool"]]],[11,"partial_cmp","pnet::packet::ethernet","",12,[[["self"],["ethertype"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",12,[[["self"],["ethertype"]],["bool"]]],[11,"le","","",12,[[["self"],["ethertype"]],["bool"]]],[11,"gt","","",12,[[["self"],["ethertype"]],["bool"]]],[11,"ge","","",12,[[["self"],["ethertype"]],["bool"]]],[11,"partial_cmp","pnet::packet::icmp::echo_request","",34,[[["sequencenumber"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",34,[[["sequencenumber"],["self"]],["bool"]]],[11,"le","","",34,[[["sequencenumber"],["self"]],["bool"]]],[11,"gt","","",34,[[["sequencenumber"],["self"]],["bool"]]],[11,"ge","","",34,[[["sequencenumber"],["self"]],["bool"]]],[11,"partial_cmp","pnet::packet::icmp","",27,[[["icmptype"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",27,[[["icmptype"],["self"]],["bool"]]],[11,"le","","",27,[[["icmptype"],["self"]],["bool"]]],[11,"gt","","",27,[[["icmptype"],["self"]],["bool"]]],[11,"ge","","",27,[[["icmptype"],["self"]],["bool"]]],[11,"partial_cmp","pnet::packet::icmp::echo_reply","",31,[[["sequencenumber"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",31,[[["sequencenumber"],["self"]],["bool"]]],[11,"le","","",31,[[["sequencenumber"],["self"]],["bool"]]],[11,"gt","","",31,[[["sequencenumber"],["self"]],["bool"]]],[11,"ge","","",31,[[["sequencenumber"],["self"]],["bool"]]],[11,"partial_cmp","pnet::packet::icmpv6","",39,[[["icmpv6code"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",39,[[["icmpv6code"],["self"]],["bool"]]],[11,"le","","",39,[[["icmpv6code"],["self"]],["bool"]]],[11,"gt","","",39,[[["icmpv6code"],["self"]],["bool"]]],[11,"ge","","",39,[[["icmpv6code"],["self"]],["bool"]]],[11,"partial_cmp","pnet::packet::icmp::echo_request","",33,[[["identifier"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",33,[[["identifier"],["self"]],["bool"]]],[11,"le","","",33,[[["identifier"],["self"]],["bool"]]],[11,"gt","","",33,[[["identifier"],["self"]],["bool"]]],[11,"ge","","",33,[[["identifier"],["self"]],["bool"]]],[11,"partial_cmp","pnet::packet::icmpv6::ndp","",41,[[["self"],["ndpoptiontype"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",41,[[["self"],["ndpoptiontype"]],["bool"]]],[11,"le","","",41,[[["self"],["ndpoptiontype"]],["bool"]]],[11,"gt","","",41,[[["self"],["ndpoptiontype"]],["bool"]]],[11,"ge","","",41,[[["self"],["ndpoptiontype"]],["bool"]]],[11,"partial_cmp","pnet::packet::tcp","",23,[[["tcpoptionnumber"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",23,[[["tcpoptionnumber"],["self"]],["bool"]]],[11,"le","","",23,[[["tcpoptionnumber"],["self"]],["bool"]]],[11,"gt","","",23,[[["tcpoptionnumber"],["self"]],["bool"]]],[11,"ge","","",23,[[["tcpoptionnumber"],["self"]],["bool"]]],[11,"partial_cmp","pnet::packet::arp","",25,[[["self"],["arphardwaretype"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",25,[[["self"],["arphardwaretype"]],["bool"]]],[11,"le","","",25,[[["self"],["arphardwaretype"]],["bool"]]],[11,"gt","","",25,[[["self"],["arphardwaretype"]],["bool"]]],[11,"ge","","",25,[[["self"],["arphardwaretype"]],["bool"]]],[11,"partial_cmp","pnet::packet::icmp","",28,[[["self"],["icmpcode"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",28,[[["self"],["icmpcode"]],["bool"]]],[11,"le","","",28,[[["self"],["icmpcode"]],["bool"]]],[11,"gt","","",28,[[["self"],["icmpcode"]],["bool"]]],[11,"ge","","",28,[[["self"],["icmpcode"]],["bool"]]],[11,"partial_cmp","pnet::packet::arp","",24,[[["arpoperation"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",24,[[["arpoperation"],["self"]],["bool"]]],[11,"le","","",24,[[["arpoperation"],["self"]],["bool"]]],[11,"gt","","",24,[[["arpoperation"],["self"]],["bool"]]],[11,"ge","","",24,[[["arpoperation"],["self"]],["bool"]]],[11,"partial_cmp","pnet::packet::vlan","",48,[[["self"],["classofservice"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",48,[[["self"],["classofservice"]],["bool"]]],[11,"le","","",48,[[["self"],["classofservice"]],["bool"]]],[11,"gt","","",48,[[["self"],["classofservice"]],["bool"]]],[11,"ge","","",48,[[["self"],["classofservice"]],["bool"]]],[11,"partial_cmp","pnet::packet::icmpv6","",38,[[["icmpv6type"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",38,[[["icmpv6type"],["self"]],["bool"]]],[11,"le","","",38,[[["icmpv6type"],["self"]],["bool"]]],[11,"gt","","",38,[[["icmpv6type"],["self"]],["bool"]]],[11,"ge","","",38,[[["icmpv6type"],["self"]],["bool"]]],[11,"partial_cmp","pnet::packet::ip","",14,[[["ipnextheaderprotocol"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",14,[[["ipnextheaderprotocol"],["self"]],["bool"]]],[11,"le","","",14,[[["ipnextheaderprotocol"],["self"]],["bool"]]],[11,"gt","","",14,[[["ipnextheaderprotocol"],["self"]],["bool"]]],[11,"ge","","",14,[[["ipnextheaderprotocol"],["self"]],["bool"]]],[11,"partial_cmp","pnet::packet::icmp::echo_reply","",30,[[["self"],["identifier"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",30,[[["self"],["identifier"]],["bool"]]],[11,"le","","",30,[[["self"],["identifier"]],["bool"]]],[11,"gt","","",30,[[["self"],["identifier"]],["bool"]]],[11,"ge","","",30,[[["self"],["identifier"]],["bool"]]],[11,"packet_size","pnet::packet::ipv6","",91,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::arp","",106,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::gre","",74,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::ethernet","",63,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::icmp::echo_request","",116,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::icmpv6::ndp","",131,[[["self"]],["usize"]]],[11,"packet_size","","",128,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::ipv6","",84,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::icmpv6::ndp","",133,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::icmp","",110,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::icmpv6::ndp","",136,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::udp","",96,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::gre","",73,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::tcp","",99,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::gre","",69,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::icmp::echo_reply","",112,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::icmpv6","",125,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::ipv6","",87,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::icmp::time_exceeded","",122,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::icmp::destination_unreachable","",118,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::ipv6","",90,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::ipv4","",77,[[["self"]],["usize"]]],[11,"packet_size","","",81,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::icmp::destination_unreachable","",119,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::icmp","",109,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::ipv4","",80,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::gre","",66,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::ipv6","",93,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::icmpv6::ndp","",130,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::ethernet","",64,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::icmpv6::ndp","",134,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::arp","",107,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::vlan","",146,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::icmpv6::ndp","",143,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::tcp","",102,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::ipv6","",94,[[["self"]],["usize"]]],[11,"packet_size","","",85,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::icmpv6::ndp","",142,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::ipv4","",78,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::icmpv6::ndp","",137,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::ipv6","",88,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::icmpv6::ndp","",140,[[["self"]],["usize"]]],[11,"packet_size","","",139,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::tcp","",103,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::icmpv6","",124,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::udp","",97,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::gre","",67,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::tcp","",100,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::gre","",70,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::icmp::time_exceeded","",121,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::icmp::echo_reply","",113,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::icmpv6::ndp","",127,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::vlan","",145,[[["self"]],["usize"]]],[11,"packet_size","pnet::packet::icmp::echo_request","",115,[[["self"]],["usize"]]],[11,"index_mut","pnet::packet","",56,[[["self"],["range",["usize"]],["usize"]]]],[11,"index_mut","","",56,[[["self"],["rangefrom",["usize"]],["usize"]]]],[11,"index_mut","","",56,[[["self"],["usize"]],["u8"]]],[11,"index_mut","","",56,[[["self"],["rangeto",["usize"]],["usize"]]]],[11,"index_mut","","",56,[[["rangefull"],["self"]]]],[11,"to_primitive_values","pnet::util","",9,[[["self"]]]],[11,"eq","pnet::packet","",56,[[["mutpacketdata"],["self"]],["bool"]]],[11,"ne","","",56,[[["mutpacketdata"],["self"]],["bool"]]],[11,"eq","","",55,[[["packetdata"],["self"]],["bool"]]],[11,"ne","","",55,[[["packetdata"],["self"]],["bool"]]],[11,"index","","",56,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index","","",55,[[["usize"],["self"],["rangeto",["usize"]]]]],[11,"index","","",55,[[["usize"],["self"],["range",["usize"]]]]],[11,"index","","",55,[[["rangefull"],["self"]]]],[11,"index","","",55,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index","","",56,[[["rangefull"],["self"]]]],[11,"index","","",55,[[["self"],["usize"]],["u8"]]],[11,"index","","",56,[[["self"],["usize"]],["u8"]]],[11,"index","","",56,[[["usize"],["self"],["range",["usize"]]]]],[11,"index","","",56,[[["usize"],["self"],["rangeto",["usize"]]]]],[11,"clone","pnet::transport","",58,[[["self"]],["transportprotocol"]]],[11,"clone","","",59,[[["self"]],["transportchanneltype"]]],[11,"clone","","",148,[[["self"]],["config"]]],[11,"hash","","",148,[[["self"],["__h"]]]],[11,"eq","","",148,[[["config"],["self"]],["bool"]]],[11,"ne","","",148,[[["config"],["self"]],["bool"]]],[11,"fmt","","",148,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"new","pnet::datalink::dummy","Creates a new `Config` with the given channels as the…",62,[[["sender",["box"]],["result",["box","error"]],["box"],["receiver",["result"]]],["config"]]],[11,"inject_handle","","Get the `Sender` handle that can inject packets in the…",62,[[["self"]],[["option",["sender"]],["sender",["result"]]]]],[11,"read_handle","","Get the `Receiver` handle where packets sent to the fake…",62,[[["self"]],[["option",["receiver"]],["receiver",["box"]]]]],[11,"mac_address","pnet::datalink","Retrieve the MAC address associated with the interface.",8,[[["self"]],["macaddr"]]],[11,"is_up","","",8,[[["self"]],["bool"]]],[11,"is_broadcast","","",8,[[["self"]],["bool"]]],[11,"is_loopback","","Is the interface a loopback interface?",8,[[["self"]],["bool"]]],[11,"is_point_to_point","","",8,[[["self"]],["bool"]]],[11,"is_multicast","","",8,[[["self"]],["bool"]]],[11,"new","pnet::util","Construct a new MacAddr",9,[[["u8"]],["macaddr"]]],[11,"zero","","Construct an all-zero MacAddr",9,[[],["macaddr"]]],[11,"broadcast","","Construct a broadcast MacAddr",9,[[],["macaddr"]]],[11,"is_zero","","Returns true if the MacAddr is an all-zero address",9,[[["self"]],["bool"]]],[11,"is_universal","","Returns true if the MacAddr is a universally administered…",9,[[["self"]],["bool"]]],[11,"is_local","","Returns true if the MacAddr is a locally administered…",9,[[["self"]],["bool"]]],[11,"is_unicast","","Returns true if the MacAddr is a unicast address",9,[[["self"]],["bool"]]],[11,"is_multicast","","Returns true if the MacAddr is a multicast address",9,[[["self"]],["bool"]]],[11,"is_broadcast","","Returns true if the MacAddr is a broadcast address",9,[[["self"]],["bool"]]],[11,"new","pnet::packet::ethernet","Constructs a new EthernetPacket. If the provided buffer is…",63,[[],[["ethernetpacket"],["option",["ethernetpacket"]]]]],[11,"owned","","Constructs a new EthernetPacket. If the provided buffer is…",63,[[["vec",["u8"]],["u8"]],[["ethernetpacket"],["option",["ethernetpacket"]]]]],[11,"to_immutable","","Maps from a EthernetPacket to a EthernetPacket",63,[[["self"]],["ethernetpacket"]]],[11,"consume_to_immutable","","Maps from a EthernetPacket to a EthernetPacket while…",63,[[],["ethernetpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",63,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Ethernet instance when converted…",63,[[["ethernet"]],["usize"]]],[11,"get_destination","","Get the value of the destination field",63,[[["self"]],["macaddr"]]],[11,"get_source","","Get the value of the source field",63,[[["self"]],["macaddr"]]],[11,"get_ethertype","","Get the value of the ethertype field",63,[[["self"]],["ethertype"]]],[11,"new","","Constructs a new MutableEthernetPacket. If the provided…",64,[[],[["mutableethernetpacket"],["option",["mutableethernetpacket"]]]]],[11,"owned","","Constructs a new MutableEthernetPacket. If the provided…",64,[[["vec",["u8"]],["u8"]],[["option",["mutableethernetpacket"]],["mutableethernetpacket"]]]],[11,"to_immutable","","Maps from a MutableEthernetPacket to a EthernetPacket",64,[[["self"]],["ethernetpacket"]]],[11,"consume_to_immutable","","Maps from a MutableEthernetPacket to a EthernetPacket…",64,[[],["ethernetpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",64,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Ethernet instance when converted…",64,[[["ethernet"]],["usize"]]],[11,"populate","","Populates a EthernetPacket using a Ethernet structure",64,[[["self"],["ethernet"]]]],[11,"get_destination","","Get the value of the destination field",64,[[["self"]],["macaddr"]]],[11,"get_source","","Get the value of the source field",64,[[["self"]],["macaddr"]]],[11,"get_ethertype","","Get the value of the ethertype field",64,[[["self"]],["ethertype"]]],[11,"set_destination","","Set the value of the destination field",64,[[["macaddr"],["self"]]]],[11,"set_source","","Set the value of the source field",64,[[["macaddr"],["self"]]]],[11,"set_ethertype","","Set the value of the ethertype field",64,[[["self"],["ethertype"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",64,[[["self"]]]],[11,"new","","Construct a new `EtherType` instance.",12,[[["u16"]],["ethertype"]]],[11,"new","pnet::packet::gre","Constructs a new GrePacket. If the provided buffer is less…",66,[[],[["option",["grepacket"]],["grepacket"]]]],[11,"owned","","Constructs a new GrePacket. If the provided buffer is less…",66,[[["vec",["u8"]],["u8"]],[["option",["grepacket"]],["grepacket"]]]],[11,"to_immutable","","Maps from a GrePacket to a GrePacket",66,[[["self"]],["grepacket"]]],[11,"consume_to_immutable","","Maps from a GrePacket to a GrePacket while consuming the…",66,[[],["grepacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",66,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Gre instance when converted into…",66,[[["gre"]],["usize"]]],[11,"get_checksum_present","","Get the checksum_present field.",66,[[["self"]],["u8"]]],[11,"get_routing_present","","Get the routing_present field.",66,[[["self"]],["u8"]]],[11,"get_key_present","","Get the key_present field.",66,[[["self"]],["u8"]]],[11,"get_sequence_present","","Get the sequence_present field.",66,[[["self"]],["u8"]]],[11,"get_strict_source_route","","Get the strict_source_route field.",66,[[["self"]],["u8"]]],[11,"get_recursion_control","","Get the recursion_control field.",66,[[["self"]],["u8"]]],[11,"get_zero_flags","","Get the zero_flags field.",66,[[["self"]],["u8"]]],[11,"get_version","","Get the version field.",66,[[["self"]],["u8"]]],[11,"get_protocol_type","","Get the protocol_type field. This field is always stored…",66,[[["self"]],["u16"]]],[11,"get_checksum_raw","","Get the raw &[u8] value of the checksum field, without…",66,[[["self"]]]],[11,"get_checksum","","Get the value of the checksum field (copies contents)",66,[[["self"]],[["vec",["u16be"]],["u16be"]]]],[11,"get_checksum_iter","","Get the value of the checksum field as iterator",66,[[["self"]],["u16beiterable"]]],[11,"get_offset_raw","","Get the raw &[u8] value of the offset field, without copying",66,[[["self"]]]],[11,"get_offset","","Get the value of the offset field (copies contents)",66,[[["self"]],[["vec",["u16be"]],["u16be"]]]],[11,"get_offset_iter","","Get the value of the offset field as iterator",66,[[["self"]],["u16beiterable"]]],[11,"get_key_raw","","Get the raw &[u8] value of the key field, without copying",66,[[["self"]]]],[11,"get_key","","Get the value of the key field (copies contents)",66,[[["self"]],[["vec",["u32be"]],["u32be"]]]],[11,"get_key_iter","","Get the value of the key field as iterator",66,[[["self"]],["u32beiterable"]]],[11,"get_sequence_raw","","Get the raw &[u8] value of the sequence field, without…",66,[[["self"]]]],[11,"get_sequence","","Get the value of the sequence field (copies contents)",66,[[["self"]],[["vec",["u32be"]],["u32be"]]]],[11,"get_sequence_iter","","Get the value of the sequence field as iterator",66,[[["self"]],["u32beiterable"]]],[11,"get_routing_raw","","Get the raw &[u8] value of the routing field, without…",66,[[["self"]]]],[11,"get_routing","","Get the value of the routing field (copies contents)",66,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"new","","Constructs a new MutableGrePacket. If the provided buffer…",67,[[],[["option",["mutablegrepacket"]],["mutablegrepacket"]]]],[11,"owned","","Constructs a new MutableGrePacket. If the provided buffer…",67,[[["vec",["u8"]],["u8"]],[["option",["mutablegrepacket"]],["mutablegrepacket"]]]],[11,"to_immutable","","Maps from a MutableGrePacket to a GrePacket",67,[[["self"]],["grepacket"]]],[11,"consume_to_immutable","","Maps from a MutableGrePacket to a GrePacket while…",67,[[],["grepacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",67,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Gre instance when converted into…",67,[[["gre"]],["usize"]]],[11,"populate","","Populates a GrePacket using a Gre structure",67,[[["self"],["gre"]]]],[11,"get_checksum_present","","Get the checksum_present field.",67,[[["self"]],["u8"]]],[11,"get_routing_present","","Get the routing_present field.",67,[[["self"]],["u8"]]],[11,"get_key_present","","Get the key_present field.",67,[[["self"]],["u8"]]],[11,"get_sequence_present","","Get the sequence_present field.",67,[[["self"]],["u8"]]],[11,"get_strict_source_route","","Get the strict_source_route field.",67,[[["self"]],["u8"]]],[11,"get_recursion_control","","Get the recursion_control field.",67,[[["self"]],["u8"]]],[11,"get_zero_flags","","Get the zero_flags field.",67,[[["self"]],["u8"]]],[11,"get_version","","Get the version field.",67,[[["self"]],["u8"]]],[11,"get_protocol_type","","Get the protocol_type field. This field is always stored…",67,[[["self"]],["u16"]]],[11,"get_checksum_raw","","Get the raw &[u8] value of the checksum field, without…",67,[[["self"]]]],[11,"get_checksum","","Get the value of the checksum field (copies contents)",67,[[["self"]],[["vec",["u16be"]],["u16be"]]]],[11,"get_checksum_iter","","Get the value of the checksum field as iterator",67,[[["self"]],["u16beiterable"]]],[11,"get_offset_raw","","Get the raw &[u8] value of the offset field, without copying",67,[[["self"]]]],[11,"get_offset","","Get the value of the offset field (copies contents)",67,[[["self"]],[["vec",["u16be"]],["u16be"]]]],[11,"get_offset_iter","","Get the value of the offset field as iterator",67,[[["self"]],["u16beiterable"]]],[11,"get_key_raw","","Get the raw &[u8] value of the key field, without copying",67,[[["self"]]]],[11,"get_key","","Get the value of the key field (copies contents)",67,[[["self"]],[["vec",["u32be"]],["u32be"]]]],[11,"get_key_iter","","Get the value of the key field as iterator",67,[[["self"]],["u32beiterable"]]],[11,"get_sequence_raw","","Get the raw &[u8] value of the sequence field, without…",67,[[["self"]]]],[11,"get_sequence","","Get the value of the sequence field (copies contents)",67,[[["self"]],[["vec",["u32be"]],["u32be"]]]],[11,"get_sequence_iter","","Get the value of the sequence field as iterator",67,[[["self"]],["u32beiterable"]]],[11,"get_routing_raw","","Get the raw &[u8] value of the routing field, without…",67,[[["self"]]]],[11,"get_routing","","Get the value of the routing field (copies contents)",67,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"set_checksum_present","","Set the checksum_present field.",67,[[["self"],["u8"]]]],[11,"set_routing_present","","Set the routing_present field.",67,[[["self"],["u8"]]]],[11,"set_key_present","","Set the key_present field.",67,[[["self"],["u8"]]]],[11,"set_sequence_present","","Set the sequence_present field.",67,[[["self"],["u8"]]]],[11,"set_strict_source_route","","Set the strict_source_route field.",67,[[["self"],["u8"]]]],[11,"set_recursion_control","","Set the recursion_control field.",67,[[["self"],["u8"]]]],[11,"set_zero_flags","","Set the zero_flags field.",67,[[["self"],["u8"]]]],[11,"set_version","","Set the version field.",67,[[["self"],["u8"]]]],[11,"set_protocol_type","","Set the protocol_type field. This field is always stored…",67,[[["u16"],["self"]]]],[11,"get_checksum_raw_mut","","Get the raw &mut [u8] value of the checksum field, without…",67,[[["self"]]]],[11,"set_checksum","","Set the value of the checksum field (copies contents)",67,[[["self"]]]],[11,"get_offset_raw_mut","","Get the raw &mut [u8] value of the offset field, without…",67,[[["self"]]]],[11,"set_offset","","Set the value of the offset field (copies contents)",67,[[["self"]]]],[11,"get_key_raw_mut","","Get the raw &mut [u8] value of the key field, without…",67,[[["self"]]]],[11,"set_key","","Set the value of the key field (copies contents)",67,[[["self"]]]],[11,"get_sequence_raw_mut","","Get the raw &mut [u8] value of the sequence field, without…",67,[[["self"]]]],[11,"set_sequence","","Set the value of the sequence field (copies contents)",67,[[["self"]]]],[11,"get_routing_raw_mut","","Get the raw &mut [u8] value of the routing field, without…",67,[[["self"]]]],[11,"set_routing","","Set the value of the routing field (copies contents)",67,[[["self"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",67,[[["self"]]]],[11,"new","","Constructs a new U16BEPacket. If the provided buffer is…",69,[[],[["u16bepacket"],["option",["u16bepacket"]]]]],[11,"owned","","Constructs a new U16BEPacket. If the provided buffer is…",69,[[["vec",["u8"]],["u8"]],[["option",["u16bepacket"]],["u16bepacket"]]]],[11,"to_immutable","","Maps from a U16BEPacket to a U16BEPacket",69,[[["self"]],["u16bepacket"]]],[11,"consume_to_immutable","","Maps from a U16BEPacket to a U16BEPacket while consuming…",69,[[],["u16bepacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",69,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a U16BE instance when converted…",69,[[["u16be"]],["usize"]]],[11,"get_number","","Get the number field. This field is always stored…",69,[[["self"]],["u16"]]],[11,"new","","Constructs a new MutableU16BEPacket. If the provided…",70,[[],[["mutableu16bepacket"],["option",["mutableu16bepacket"]]]]],[11,"owned","","Constructs a new MutableU16BEPacket. If the provided…",70,[[["vec",["u8"]],["u8"]],[["option",["mutableu16bepacket"]],["mutableu16bepacket"]]]],[11,"to_immutable","","Maps from a MutableU16BEPacket to a U16BEPacket",70,[[["self"]],["u16bepacket"]]],[11,"consume_to_immutable","","Maps from a MutableU16BEPacket to a U16BEPacket while…",70,[[],["u16bepacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",70,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a U16BE instance when converted…",70,[[["u16be"]],["usize"]]],[11,"populate","","Populates a U16BEPacket using a U16BE structure",70,[[["self"],["u16be"]]]],[11,"get_number","","Get the number field. This field is always stored…",70,[[["self"]],["u16"]]],[11,"set_number","","Set the number field. This field is always stored…",70,[[["u16"],["self"]]]],[11,"set_unused","","Set the value of the unused field (copies contents)",70,[[["self"]]]],[11,"new","","Constructs a new U32BEPacket. If the provided buffer is…",73,[[],[["u32bepacket"],["option",["u32bepacket"]]]]],[11,"owned","","Constructs a new U32BEPacket. If the provided buffer is…",73,[[["vec",["u8"]],["u8"]],[["u32bepacket"],["option",["u32bepacket"]]]]],[11,"to_immutable","","Maps from a U32BEPacket to a U32BEPacket",73,[[["self"]],["u32bepacket"]]],[11,"consume_to_immutable","","Maps from a U32BEPacket to a U32BEPacket while consuming…",73,[[],["u32bepacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",73,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a U32BE instance when converted…",73,[[["u32be"]],["usize"]]],[11,"get_number","","Get the number field. This field is always stored…",73,[[["self"]],["u32"]]],[11,"new","","Constructs a new MutableU32BEPacket. If the provided…",74,[[],[["option",["mutableu32bepacket"]],["mutableu32bepacket"]]]],[11,"owned","","Constructs a new MutableU32BEPacket. If the provided…",74,[[["vec",["u8"]],["u8"]],[["option",["mutableu32bepacket"]],["mutableu32bepacket"]]]],[11,"to_immutable","","Maps from a MutableU32BEPacket to a U32BEPacket",74,[[["self"]],["u32bepacket"]]],[11,"consume_to_immutable","","Maps from a MutableU32BEPacket to a U32BEPacket while…",74,[[],["u32bepacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",74,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a U32BE instance when converted…",74,[[["u32be"]],["usize"]]],[11,"populate","","Populates a U32BEPacket using a U32BE structure",74,[[["u32be"],["self"]]]],[11,"get_number","","Get the number field. This field is always stored…",74,[[["self"]],["u32"]]],[11,"set_number","","Set the number field. This field is always stored…",74,[[["self"],["u32"]]]],[11,"set_unused","","Set the value of the unused field (copies contents)",74,[[["self"]]]],[11,"new","pnet::packet::ip","Create a new IpNextHeaderProtocol",14,[[["u8"]],["ipnextheaderprotocol"]]],[11,"new","pnet::packet::ipv4","Create a new `Ipv4OptionNumber` instance.",15,[[["u8"]],["ipv4optionnumber"]]],[11,"new","","Constructs a new Ipv4Packet. If the provided buffer is…",77,[[],[["option",["ipv4packet"]],["ipv4packet"]]]],[11,"owned","","Constructs a new Ipv4Packet. If the provided buffer is…",77,[[["vec",["u8"]],["u8"]],[["ipv4packet"],["option",["ipv4packet"]]]]],[11,"to_immutable","","Maps from a Ipv4Packet to a Ipv4Packet",77,[[["self"]],["ipv4packet"]]],[11,"consume_to_immutable","","Maps from a Ipv4Packet to a Ipv4Packet while consuming the…",77,[[],["ipv4packet"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",77,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Ipv4 instance when converted into…",77,[[["ipv4"]],["usize"]]],[11,"get_version","","Get the version field.",77,[[["self"]],["u8"]]],[11,"get_header_length","","Get the header_length field.",77,[[["self"]],["u8"]]],[11,"get_dscp","","Get the dscp field.",77,[[["self"]],["u8"]]],[11,"get_ecn","","Get the ecn field.",77,[[["self"]],["u8"]]],[11,"get_total_length","","Get the total_length field. This field is always stored…",77,[[["self"]],["u16"]]],[11,"get_identification","","Get the identification field. This field is always stored…",77,[[["self"]],["u16"]]],[11,"get_flags","","Get the flags field.",77,[[["self"]],["u8"]]],[11,"get_fragment_offset","","Get the fragment_offset field. This field is always stored…",77,[[["self"]],["u16"]]],[11,"get_ttl","","Get the ttl field.",77,[[["self"]],["u8"]]],[11,"get_next_level_protocol","","Get the value of the next_level_protocol field",77,[[["self"]],["ipnextheaderprotocol"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",77,[[["self"]],["u16"]]],[11,"get_source","","Get the value of the source field",77,[[["self"]],["ipv4addr"]]],[11,"get_destination","","Get the value of the destination field",77,[[["self"]],["ipv4addr"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",77,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",77,[[["self"]],[["vec",["ipv4option"]],["ipv4option"]]]],[11,"get_options_iter","","Get the value of the options field as iterator",77,[[["self"]],["ipv4optioniterable"]]],[11,"new","","Constructs a new MutableIpv4Packet. If the provided buffer…",78,[[],[["option",["mutableipv4packet"]],["mutableipv4packet"]]]],[11,"owned","","Constructs a new MutableIpv4Packet. If the provided buffer…",78,[[["vec",["u8"]],["u8"]],[["option",["mutableipv4packet"]],["mutableipv4packet"]]]],[11,"to_immutable","","Maps from a MutableIpv4Packet to a Ipv4Packet",78,[[["self"]],["ipv4packet"]]],[11,"consume_to_immutable","","Maps from a MutableIpv4Packet to a Ipv4Packet while…",78,[[],["ipv4packet"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",78,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Ipv4 instance when converted into…",78,[[["ipv4"]],["usize"]]],[11,"populate","","Populates a Ipv4Packet using a Ipv4 structure",78,[[["self"],["ipv4"]]]],[11,"get_version","","Get the version field.",78,[[["self"]],["u8"]]],[11,"get_header_length","","Get the header_length field.",78,[[["self"]],["u8"]]],[11,"get_dscp","","Get the dscp field.",78,[[["self"]],["u8"]]],[11,"get_ecn","","Get the ecn field.",78,[[["self"]],["u8"]]],[11,"get_total_length","","Get the total_length field. This field is always stored…",78,[[["self"]],["u16"]]],[11,"get_identification","","Get the identification field. This field is always stored…",78,[[["self"]],["u16"]]],[11,"get_flags","","Get the flags field.",78,[[["self"]],["u8"]]],[11,"get_fragment_offset","","Get the fragment_offset field. This field is always stored…",78,[[["self"]],["u16"]]],[11,"get_ttl","","Get the ttl field.",78,[[["self"]],["u8"]]],[11,"get_next_level_protocol","","Get the value of the next_level_protocol field",78,[[["self"]],["ipnextheaderprotocol"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",78,[[["self"]],["u16"]]],[11,"get_source","","Get the value of the source field",78,[[["self"]],["ipv4addr"]]],[11,"get_destination","","Get the value of the destination field",78,[[["self"]],["ipv4addr"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",78,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",78,[[["self"]],[["vec",["ipv4option"]],["ipv4option"]]]],[11,"get_options_iter","","Get the value of the options field as iterator",78,[[["self"]],["ipv4optioniterable"]]],[11,"set_version","","Set the version field.",78,[[["self"],["u8"]]]],[11,"set_header_length","","Set the header_length field.",78,[[["self"],["u8"]]]],[11,"set_dscp","","Set the dscp field.",78,[[["self"],["u8"]]]],[11,"set_ecn","","Set the ecn field.",78,[[["self"],["u8"]]]],[11,"set_total_length","","Set the total_length field. This field is always stored…",78,[[["u16"],["self"]]]],[11,"set_identification","","Set the identification field. This field is always stored…",78,[[["u16"],["self"]]]],[11,"set_flags","","Set the flags field.",78,[[["self"],["u8"]]]],[11,"set_fragment_offset","","Set the fragment_offset field. This field is always stored…",78,[[["u16"],["self"]]]],[11,"set_ttl","","Set the ttl field.",78,[[["self"],["u8"]]]],[11,"set_next_level_protocol","","Set the value of the next_level_protocol field",78,[[["self"],["ipnextheaderprotocol"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",78,[[["u16"],["self"]]]],[11,"set_source","","Set the value of the source field",78,[[["self"],["ipv4addr"]]]],[11,"set_destination","","Set the value of the destination field",78,[[["self"],["ipv4addr"]]]],[11,"get_options_raw_mut","","Get the raw &mut [u8] value of the options field, without…",78,[[["self"]]]],[11,"set_options","","Set the value of the options field (copies contents)",78,[[["self"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",78,[[["self"]]]],[11,"new","","Constructs a new Ipv4OptionPacket. If the provided buffer…",80,[[],[["option",["ipv4optionpacket"]],["ipv4optionpacket"]]]],[11,"owned","","Constructs a new Ipv4OptionPacket. If the provided buffer…",80,[[["vec",["u8"]],["u8"]],[["option",["ipv4optionpacket"]],["ipv4optionpacket"]]]],[11,"to_immutable","","Maps from a Ipv4OptionPacket to a Ipv4OptionPacket",80,[[["self"]],["ipv4optionpacket"]]],[11,"consume_to_immutable","","Maps from a Ipv4OptionPacket to a Ipv4OptionPacket while…",80,[[],["ipv4optionpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",80,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Ipv4Option instance when…",80,[[["ipv4option"]],["usize"]]],[11,"get_copied","","Get the copied field.",80,[[["self"]],["u8"]]],[11,"get_class","","Get the class field.",80,[[["self"]],["u8"]]],[11,"get_number","","Get the value of the number field",80,[[["self"]],["ipv4optionnumber"]]],[11,"get_length_raw","","Get the raw &[u8] value of the length field, without copying",80,[[["self"]]]],[11,"get_length","","Get the value of the length field (copies contents)",80,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"new","","Constructs a new MutableIpv4OptionPacket. If the provided…",81,[[],[["option",["mutableipv4optionpacket"]],["mutableipv4optionpacket"]]]],[11,"owned","","Constructs a new MutableIpv4OptionPacket. If the provided…",81,[[["vec",["u8"]],["u8"]],[["mutableipv4optionpacket"],["option",["mutableipv4optionpacket"]]]]],[11,"to_immutable","","Maps from a MutableIpv4OptionPacket to a Ipv4OptionPacket",81,[[["self"]],["ipv4optionpacket"]]],[11,"consume_to_immutable","","Maps from a MutableIpv4OptionPacket to a Ipv4OptionPacket…",81,[[],["ipv4optionpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",81,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Ipv4Option instance when…",81,[[["ipv4option"]],["usize"]]],[11,"populate","","Populates a Ipv4OptionPacket using a Ipv4Option structure",81,[[["self"],["ipv4option"]]]],[11,"get_copied","","Get the copied field.",81,[[["self"]],["u8"]]],[11,"get_class","","Get the class field.",81,[[["self"]],["u8"]]],[11,"get_number","","Get the value of the number field",81,[[["self"]],["ipv4optionnumber"]]],[11,"get_length_raw","","Get the raw &[u8] value of the length field, without copying",81,[[["self"]]]],[11,"get_length","","Get the value of the length field (copies contents)",81,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"set_copied","","Set the copied field.",81,[[["self"],["u8"]]]],[11,"set_class","","Set the class field.",81,[[["self"],["u8"]]]],[11,"set_number","","Set the value of the number field",81,[[["self"],["ipv4optionnumber"]]]],[11,"get_length_raw_mut","","Get the raw &mut [u8] value of the length field, without…",81,[[["self"]]]],[11,"set_length","","Set the value of the length field (copies contents)",81,[[["self"]]]],[11,"set_data","","Set the value of the data field (copies contents)",81,[[["self"]]]],[11,"new","pnet::packet::ipv6","Constructs a new Ipv6Packet. If the provided buffer is…",84,[[],[["ipv6packet"],["option",["ipv6packet"]]]]],[11,"owned","","Constructs a new Ipv6Packet. If the provided buffer is…",84,[[["vec",["u8"]],["u8"]],[["ipv6packet"],["option",["ipv6packet"]]]]],[11,"to_immutable","","Maps from a Ipv6Packet to a Ipv6Packet",84,[[["self"]],["ipv6packet"]]],[11,"consume_to_immutable","","Maps from a Ipv6Packet to a Ipv6Packet while consuming the…",84,[[],["ipv6packet"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",84,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Ipv6 instance when converted into…",84,[[["ipv6"]],["usize"]]],[11,"get_version","","Get the version field.",84,[[["self"]],["u8"]]],[11,"get_traffic_class","","Get the traffic_class field.",84,[[["self"]],["u8"]]],[11,"get_flow_label","","Get the flow_label field. This field is always stored…",84,[[["self"]],["u32"]]],[11,"get_payload_length","","Get the payload_length field. This field is always stored…",84,[[["self"]],["u16"]]],[11,"get_next_header","","Get the value of the next_header field",84,[[["self"]],["ipnextheaderprotocol"]]],[11,"get_hop_limit","","Get the hop_limit field.",84,[[["self"]],["u8"]]],[11,"get_source","","Get the value of the source field",84,[[["self"]],["ipv6addr"]]],[11,"get_destination","","Get the value of the destination field",84,[[["self"]],["ipv6addr"]]],[11,"new","","Constructs a new MutableIpv6Packet. If the provided buffer…",85,[[],[["mutableipv6packet"],["option",["mutableipv6packet"]]]]],[11,"owned","","Constructs a new MutableIpv6Packet. If the provided buffer…",85,[[["vec",["u8"]],["u8"]],[["option",["mutableipv6packet"]],["mutableipv6packet"]]]],[11,"to_immutable","","Maps from a MutableIpv6Packet to a Ipv6Packet",85,[[["self"]],["ipv6packet"]]],[11,"consume_to_immutable","","Maps from a MutableIpv6Packet to a Ipv6Packet while…",85,[[],["ipv6packet"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",85,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Ipv6 instance when converted into…",85,[[["ipv6"]],["usize"]]],[11,"populate","","Populates a Ipv6Packet using a Ipv6 structure",85,[[["ipv6"],["self"]]]],[11,"get_version","","Get the version field.",85,[[["self"]],["u8"]]],[11,"get_traffic_class","","Get the traffic_class field.",85,[[["self"]],["u8"]]],[11,"get_flow_label","","Get the flow_label field. This field is always stored…",85,[[["self"]],["u32"]]],[11,"get_payload_length","","Get the payload_length field. This field is always stored…",85,[[["self"]],["u16"]]],[11,"get_next_header","","Get the value of the next_header field",85,[[["self"]],["ipnextheaderprotocol"]]],[11,"get_hop_limit","","Get the hop_limit field.",85,[[["self"]],["u8"]]],[11,"get_source","","Get the value of the source field",85,[[["self"]],["ipv6addr"]]],[11,"get_destination","","Get the value of the destination field",85,[[["self"]],["ipv6addr"]]],[11,"set_version","","Set the version field.",85,[[["self"],["u8"]]]],[11,"set_traffic_class","","Set the traffic_class field.",85,[[["self"],["u8"]]]],[11,"set_flow_label","","Set the flow_label field. This field is always stored…",85,[[["self"],["u32"]]]],[11,"set_payload_length","","Set the payload_length field. This field is always stored…",85,[[["u16"],["self"]]]],[11,"set_next_header","","Set the value of the next_header field",85,[[["self"],["ipnextheaderprotocol"]]]],[11,"set_hop_limit","","Set the hop_limit field.",85,[[["self"],["u8"]]]],[11,"set_source","","Set the value of the source field",85,[[["ipv6addr"],["self"]]]],[11,"set_destination","","Set the value of the destination field",85,[[["ipv6addr"],["self"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",85,[[["self"]]]],[11,"new","","Constructs a new ExtensionPacket. If the provided buffer…",87,[[],[["extensionpacket"],["option",["extensionpacket"]]]]],[11,"owned","","Constructs a new ExtensionPacket. If the provided buffer…",87,[[["vec",["u8"]],["u8"]],[["extensionpacket"],["option",["extensionpacket"]]]]],[11,"to_immutable","","Maps from a ExtensionPacket to a ExtensionPacket",87,[[["self"]],["extensionpacket"]]],[11,"consume_to_immutable","","Maps from a ExtensionPacket to a ExtensionPacket while…",87,[[],["extensionpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",87,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Extension instance when converted…",87,[[["extension"]],["usize"]]],[11,"get_next_header","","Get the value of the next_header field",87,[[["self"]],["ipnextheaderprotocol"]]],[11,"get_hdr_ext_len","","Get the hdr_ext_len field.",87,[[["self"]],["u8"]]],[11,"new","","Constructs a new MutableExtensionPacket. If the provided…",88,[[],[["option",["mutableextensionpacket"]],["mutableextensionpacket"]]]],[11,"owned","","Constructs a new MutableExtensionPacket. If the provided…",88,[[["vec",["u8"]],["u8"]],[["mutableextensionpacket"],["option",["mutableextensionpacket"]]]]],[11,"to_immutable","","Maps from a MutableExtensionPacket to a ExtensionPacket",88,[[["self"]],["extensionpacket"]]],[11,"consume_to_immutable","","Maps from a MutableExtensionPacket to a ExtensionPacket…",88,[[],["extensionpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",88,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Extension instance when converted…",88,[[["extension"]],["usize"]]],[11,"populate","","Populates a ExtensionPacket using a Extension structure",88,[[["self"],["extension"]]]],[11,"get_next_header","","Get the value of the next_header field",88,[[["self"]],["ipnextheaderprotocol"]]],[11,"get_hdr_ext_len","","Get the hdr_ext_len field.",88,[[["self"]],["u8"]]],[11,"set_next_header","","Set the value of the next_header field",88,[[["self"],["ipnextheaderprotocol"]]]],[11,"set_hdr_ext_len","","Set the hdr_ext_len field.",88,[[["self"],["u8"]]]],[11,"set_options","","Set the value of the options field (copies contents)",88,[[["self"]]]],[11,"new","","",89,[[],["extensioniterable"]]],[11,"new","","Constructs a new RoutingPacket. If the provided buffer is…",90,[[],[["routingpacket"],["option",["routingpacket"]]]]],[11,"owned","","Constructs a new RoutingPacket. If the provided buffer is…",90,[[["vec",["u8"]],["u8"]],[["option",["routingpacket"]],["routingpacket"]]]],[11,"to_immutable","","Maps from a RoutingPacket to a RoutingPacket",90,[[["self"]],["routingpacket"]]],[11,"consume_to_immutable","","Maps from a RoutingPacket to a RoutingPacket while…",90,[[],["routingpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",90,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Routing instance when converted…",90,[[["routing"]],["usize"]]],[11,"get_next_header","","Get the value of the next_header field",90,[[["self"]],["ipnextheaderprotocol"]]],[11,"get_hdr_ext_len","","Get the hdr_ext_len field.",90,[[["self"]],["u8"]]],[11,"get_routing_type","","Get the routing_type field.",90,[[["self"]],["u8"]]],[11,"get_segments_left","","Get the segments_left field.",90,[[["self"]],["u8"]]],[11,"new","","Constructs a new MutableRoutingPacket. If the provided…",91,[[],[["option",["mutableroutingpacket"]],["mutableroutingpacket"]]]],[11,"owned","","Constructs a new MutableRoutingPacket. If the provided…",91,[[["vec",["u8"]],["u8"]],[["option",["mutableroutingpacket"]],["mutableroutingpacket"]]]],[11,"to_immutable","","Maps from a MutableRoutingPacket to a RoutingPacket",91,[[["self"]],["routingpacket"]]],[11,"consume_to_immutable","","Maps from a MutableRoutingPacket to a RoutingPacket while…",91,[[],["routingpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",91,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Routing instance when converted…",91,[[["routing"]],["usize"]]],[11,"populate","","Populates a RoutingPacket using a Routing structure",91,[[["self"],["routing"]]]],[11,"get_next_header","","Get the value of the next_header field",91,[[["self"]],["ipnextheaderprotocol"]]],[11,"get_hdr_ext_len","","Get the hdr_ext_len field.",91,[[["self"]],["u8"]]],[11,"get_routing_type","","Get the routing_type field.",91,[[["self"]],["u8"]]],[11,"get_segments_left","","Get the segments_left field.",91,[[["self"]],["u8"]]],[11,"set_next_header","","Set the value of the next_header field",91,[[["self"],["ipnextheaderprotocol"]]]],[11,"set_hdr_ext_len","","Set the hdr_ext_len field.",91,[[["self"],["u8"]]]],[11,"set_routing_type","","Set the routing_type field.",91,[[["self"],["u8"]]]],[11,"set_segments_left","","Set the segments_left field.",91,[[["self"],["u8"]]]],[11,"set_data","","Set the value of the data field (copies contents)",91,[[["self"]]]],[11,"new","","Constructs a new FragmentPacket. If the provided buffer is…",93,[[],[["option",["fragmentpacket"]],["fragmentpacket"]]]],[11,"owned","","Constructs a new FragmentPacket. If the provided buffer is…",93,[[["vec",["u8"]],["u8"]],[["option",["fragmentpacket"]],["fragmentpacket"]]]],[11,"to_immutable","","Maps from a FragmentPacket to a FragmentPacket",93,[[["self"]],["fragmentpacket"]]],[11,"consume_to_immutable","","Maps from a FragmentPacket to a FragmentPacket while…",93,[[],["fragmentpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",93,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Fragment instance when converted…",93,[[["fragment"]],["usize"]]],[11,"get_next_header","","Get the value of the next_header field",93,[[["self"]],["ipnextheaderprotocol"]]],[11,"get_reserved","","Get the reserved field.",93,[[["self"]],["u8"]]],[11,"get_fragment_offset_with_flags","","Get the fragment_offset_with_flags field. This field is…",93,[[["self"]],["u16"]]],[11,"get_id","","Get the id field. This field is always stored big-endian…",93,[[["self"]],["u32"]]],[11,"get_fragment_offset","","",93,[[["self"]],["u16"]]],[11,"is_last_fragment","","",93,[[["self"]],["bool"]]],[11,"new","","Constructs a new MutableFragmentPacket. If the provided…",94,[[],[["mutablefragmentpacket"],["option",["mutablefragmentpacket"]]]]],[11,"owned","","Constructs a new MutableFragmentPacket. If the provided…",94,[[["vec",["u8"]],["u8"]],[["option",["mutablefragmentpacket"]],["mutablefragmentpacket"]]]],[11,"to_immutable","","Maps from a MutableFragmentPacket to a FragmentPacket",94,[[["self"]],["fragmentpacket"]]],[11,"consume_to_immutable","","Maps from a MutableFragmentPacket to a FragmentPacket…",94,[[],["fragmentpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",94,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Fragment instance when converted…",94,[[["fragment"]],["usize"]]],[11,"populate","","Populates a FragmentPacket using a Fragment structure",94,[[["self"],["fragment"]]]],[11,"get_next_header","","Get the value of the next_header field",94,[[["self"]],["ipnextheaderprotocol"]]],[11,"get_reserved","","Get the reserved field.",94,[[["self"]],["u8"]]],[11,"get_fragment_offset_with_flags","","Get the fragment_offset_with_flags field. This field is…",94,[[["self"]],["u16"]]],[11,"get_id","","Get the id field. This field is always stored big-endian…",94,[[["self"]],["u32"]]],[11,"set_next_header","","Set the value of the next_header field",94,[[["self"],["ipnextheaderprotocol"]]]],[11,"set_reserved","","Set the reserved field.",94,[[["self"],["u8"]]]],[11,"set_fragment_offset_with_flags","","Set the fragment_offset_with_flags field. This field is…",94,[[["u16"],["self"]]]],[11,"set_id","","Set the id field. This field is always stored big-endian…",94,[[["self"],["u32"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",94,[[["self"]]]],[11,"get_fragment_offset","","",94,[[["self"]],["u16"]]],[11,"is_last_fragment","","",94,[[["self"]],["bool"]]],[11,"set_fragment_offset","","",94,[[["u16"],["self"]]]],[11,"set_last_fragment","","",94,[[["self"],["bool"]]]],[11,"new","pnet::packet::udp","Constructs a new UdpPacket. If the provided buffer is less…",96,[[],[["option",["udppacket"]],["udppacket"]]]],[11,"owned","","Constructs a new UdpPacket. If the provided buffer is less…",96,[[["vec",["u8"]],["u8"]],[["option",["udppacket"]],["udppacket"]]]],[11,"to_immutable","","Maps from a UdpPacket to a UdpPacket",96,[[["self"]],["udppacket"]]],[11,"consume_to_immutable","","Maps from a UdpPacket to a UdpPacket while consuming the…",96,[[],["udppacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",96,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Udp instance when converted into…",96,[[["udp"]],["usize"]]],[11,"get_source","","Get the source field. This field is always stored…",96,[[["self"]],["u16"]]],[11,"get_destination","","Get the destination field. This field is always stored…",96,[[["self"]],["u16"]]],[11,"get_length","","Get the length field. This field is always stored…",96,[[["self"]],["u16"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",96,[[["self"]],["u16"]]],[11,"new","","Constructs a new MutableUdpPacket. If the provided buffer…",97,[[],[["mutableudppacket"],["option",["mutableudppacket"]]]]],[11,"owned","","Constructs a new MutableUdpPacket. If the provided buffer…",97,[[["vec",["u8"]],["u8"]],[["option",["mutableudppacket"]],["mutableudppacket"]]]],[11,"to_immutable","","Maps from a MutableUdpPacket to a UdpPacket",97,[[["self"]],["udppacket"]]],[11,"consume_to_immutable","","Maps from a MutableUdpPacket to a UdpPacket while…",97,[[],["udppacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",97,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Udp instance when converted into…",97,[[["udp"]],["usize"]]],[11,"populate","","Populates a UdpPacket using a Udp structure",97,[[["self"],["udp"]]]],[11,"get_source","","Get the source field. This field is always stored…",97,[[["self"]],["u16"]]],[11,"get_destination","","Get the destination field. This field is always stored…",97,[[["self"]],["u16"]]],[11,"get_length","","Get the length field. This field is always stored…",97,[[["self"]],["u16"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",97,[[["self"]],["u16"]]],[11,"set_source","","Set the source field. This field is always stored…",97,[[["u16"],["self"]]]],[11,"set_destination","","Set the destination field. This field is always stored…",97,[[["u16"],["self"]]]],[11,"set_length","","Set the length field. This field is always stored…",97,[[["u16"],["self"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",97,[[["u16"],["self"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",97,[[["self"]]]],[11,"new","pnet::packet::tcp","Constructs a new TcpPacket. If the provided buffer is less…",99,[[],[["option",["tcppacket"]],["tcppacket"]]]],[11,"owned","","Constructs a new TcpPacket. If the provided buffer is less…",99,[[["vec",["u8"]],["u8"]],[["option",["tcppacket"]],["tcppacket"]]]],[11,"to_immutable","","Maps from a TcpPacket to a TcpPacket",99,[[["self"]],["tcppacket"]]],[11,"consume_to_immutable","","Maps from a TcpPacket to a TcpPacket while consuming the…",99,[[],["tcppacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",99,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Tcp instance when converted into…",99,[[["tcp"]],["usize"]]],[11,"get_source","","Get the source field. This field is always stored…",99,[[["self"]],["u16"]]],[11,"get_destination","","Get the destination field. This field is always stored…",99,[[["self"]],["u16"]]],[11,"get_sequence","","Get the sequence field. This field is always stored…",99,[[["self"]],["u32"]]],[11,"get_acknowledgement","","Get the acknowledgement field. This field is always stored…",99,[[["self"]],["u32"]]],[11,"get_data_offset","","Get the data_offset field.",99,[[["self"]],["u8"]]],[11,"get_reserved","","Get the reserved field.",99,[[["self"]],["u8"]]],[11,"get_flags","","Get the flags field. This field is always stored…",99,[[["self"]],["u16"]]],[11,"get_window","","Get the window field. This field is always stored…",99,[[["self"]],["u16"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",99,[[["self"]],["u16"]]],[11,"get_urgent_ptr","","Get the urgent_ptr field. This field is always stored…",99,[[["self"]],["u16"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",99,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",99,[[["self"]],[["vec",["tcpoption"]],["tcpoption"]]]],[11,"get_options_iter","","Get the value of the options field as iterator",99,[[["self"]],["tcpoptioniterable"]]],[11,"new","","Constructs a new MutableTcpPacket. If the provided buffer…",100,[[],[["option",["mutabletcppacket"]],["mutabletcppacket"]]]],[11,"owned","","Constructs a new MutableTcpPacket. If the provided buffer…",100,[[["vec",["u8"]],["u8"]],[["option",["mutabletcppacket"]],["mutabletcppacket"]]]],[11,"to_immutable","","Maps from a MutableTcpPacket to a TcpPacket",100,[[["self"]],["tcppacket"]]],[11,"consume_to_immutable","","Maps from a MutableTcpPacket to a TcpPacket while…",100,[[],["tcppacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",100,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Tcp instance when converted into…",100,[[["tcp"]],["usize"]]],[11,"populate","","Populates a TcpPacket using a Tcp structure",100,[[["self"],["tcp"]]]],[11,"get_source","","Get the source field. This field is always stored…",100,[[["self"]],["u16"]]],[11,"get_destination","","Get the destination field. This field is always stored…",100,[[["self"]],["u16"]]],[11,"get_sequence","","Get the sequence field. This field is always stored…",100,[[["self"]],["u32"]]],[11,"get_acknowledgement","","Get the acknowledgement field. This field is always stored…",100,[[["self"]],["u32"]]],[11,"get_data_offset","","Get the data_offset field.",100,[[["self"]],["u8"]]],[11,"get_reserved","","Get the reserved field.",100,[[["self"]],["u8"]]],[11,"get_flags","","Get the flags field. This field is always stored…",100,[[["self"]],["u16"]]],[11,"get_window","","Get the window field. This field is always stored…",100,[[["self"]],["u16"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",100,[[["self"]],["u16"]]],[11,"get_urgent_ptr","","Get the urgent_ptr field. This field is always stored…",100,[[["self"]],["u16"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",100,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",100,[[["self"]],[["vec",["tcpoption"]],["tcpoption"]]]],[11,"get_options_iter","","Get the value of the options field as iterator",100,[[["self"]],["tcpoptioniterable"]]],[11,"set_source","","Set the source field. This field is always stored…",100,[[["u16"],["self"]]]],[11,"set_destination","","Set the destination field. This field is always stored…",100,[[["u16"],["self"]]]],[11,"set_sequence","","Set the sequence field. This field is always stored…",100,[[["self"],["u32"]]]],[11,"set_acknowledgement","","Set the acknowledgement field. This field is always stored…",100,[[["self"],["u32"]]]],[11,"set_data_offset","","Set the data_offset field.",100,[[["self"],["u8"]]]],[11,"set_reserved","","Set the reserved field.",100,[[["self"],["u8"]]]],[11,"set_flags","","Set the flags field. This field is always stored…",100,[[["u16"],["self"]]]],[11,"set_window","","Set the window field. This field is always stored…",100,[[["u16"],["self"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",100,[[["u16"],["self"]]]],[11,"set_urgent_ptr","","Set the urgent_ptr field. This field is always stored…",100,[[["u16"],["self"]]]],[11,"get_options_raw_mut","","Get the raw &mut [u8] value of the options field, without…",100,[[["self"]]]],[11,"set_options","","Set the value of the options field (copies contents)",100,[[["self"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",100,[[["self"]]]],[11,"new","","Create a new `TcpOptionNumber` instance.",23,[[["u8"]],["tcpoptionnumber"]]],[11,"new","","Constructs a new TcpOptionPacket. If the provided buffer…",102,[[],[["tcpoptionpacket"],["option",["tcpoptionpacket"]]]]],[11,"owned","","Constructs a new TcpOptionPacket. If the provided buffer…",102,[[["vec",["u8"]],["u8"]],[["option",["tcpoptionpacket"]],["tcpoptionpacket"]]]],[11,"to_immutable","","Maps from a TcpOptionPacket to a TcpOptionPacket",102,[[["self"]],["tcpoptionpacket"]]],[11,"consume_to_immutable","","Maps from a TcpOptionPacket to a TcpOptionPacket while…",102,[[],["tcpoptionpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",102,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a TcpOption instance when converted…",102,[[["tcpoption"]],["usize"]]],[11,"get_number","","Get the value of the number field",102,[[["self"]],["tcpoptionnumber"]]],[11,"get_length_raw","","Get the raw &[u8] value of the length field, without copying",102,[[["self"]]]],[11,"get_length","","Get the value of the length field (copies contents)",102,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"new","","Constructs a new MutableTcpOptionPacket. If the provided…",103,[[],[["mutabletcpoptionpacket"],["option",["mutabletcpoptionpacket"]]]]],[11,"owned","","Constructs a new MutableTcpOptionPacket. If the provided…",103,[[["vec",["u8"]],["u8"]],[["option",["mutabletcpoptionpacket"]],["mutabletcpoptionpacket"]]]],[11,"to_immutable","","Maps from a MutableTcpOptionPacket to a TcpOptionPacket",103,[[["self"]],["tcpoptionpacket"]]],[11,"consume_to_immutable","","Maps from a MutableTcpOptionPacket to a TcpOptionPacket…",103,[[],["tcpoptionpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",103,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a TcpOption instance when converted…",103,[[["tcpoption"]],["usize"]]],[11,"populate","","Populates a TcpOptionPacket using a TcpOption structure",103,[[["self"],["tcpoption"]]]],[11,"get_number","","Get the value of the number field",103,[[["self"]],["tcpoptionnumber"]]],[11,"get_length_raw","","Get the raw &[u8] value of the length field, without copying",103,[[["self"]]]],[11,"get_length","","Get the value of the length field (copies contents)",103,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"set_number","","Set the value of the number field",103,[[["self"],["tcpoptionnumber"]]]],[11,"get_length_raw_mut","","Get the raw &mut [u8] value of the length field, without…",103,[[["self"]]]],[11,"set_length","","Set the value of the length field (copies contents)",103,[[["self"]]]],[11,"set_data","","Set the value of the data field (copies contents)",103,[[["self"]]]],[11,"nop","","NOP: This may be used to align option fields on 32-bit…",105,[[],["tcpoption"]]],[11,"timestamp","","Timestamp: TCP timestamps, defined in RFC 1323, can help…",105,[[["u32"]],["tcpoption"]]],[11,"mss","","MSS: The maximum segment size (MSS) is the largest amount…",105,[[["u16"]],["tcpoption"]]],[11,"wscale","","Window scale: The TCP window scale option, as defined in…",105,[[["u8"]],["tcpoption"]]],[11,"sack_perm","","Selective acknowledgment (SACK) option, defined in RFC…",105,[[],["tcpoption"]]],[11,"selective_ack","","Selective acknowledgment (SACK) option, defined in RFC…",105,[[],["tcpoption"]]],[11,"new","pnet::packet::arp","Create a new `ArpOperation`.",24,[[["u16"]],["arpoperation"]]],[11,"new","","Create a new `ArpHardwareType`.",25,[[["u16"]],["arphardwaretype"]]],[11,"new","","Constructs a new ArpPacket. If the provided buffer is less…",106,[[],[["option",["arppacket"]],["arppacket"]]]],[11,"owned","","Constructs a new ArpPacket. If the provided buffer is less…",106,[[["vec",["u8"]],["u8"]],[["arppacket"],["option",["arppacket"]]]]],[11,"to_immutable","","Maps from a ArpPacket to a ArpPacket",106,[[["self"]],["arppacket"]]],[11,"consume_to_immutable","","Maps from a ArpPacket to a ArpPacket while consuming the…",106,[[],["arppacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",106,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Arp instance when converted into…",106,[[["arp"]],["usize"]]],[11,"get_hardware_type","","Get the value of the hardware_type field",106,[[["self"]],["arphardwaretype"]]],[11,"get_protocol_type","","Get the value of the protocol_type field",106,[[["self"]],["ethertype"]]],[11,"get_hw_addr_len","","Get the hw_addr_len field.",106,[[["self"]],["u8"]]],[11,"get_proto_addr_len","","Get the proto_addr_len field.",106,[[["self"]],["u8"]]],[11,"get_operation","","Get the value of the operation field",106,[[["self"]],["arpoperation"]]],[11,"get_sender_hw_addr","","Get the value of the sender_hw_addr field",106,[[["self"]],["macaddr"]]],[11,"get_sender_proto_addr","","Get the value of the sender_proto_addr field",106,[[["self"]],["ipv4addr"]]],[11,"get_target_hw_addr","","Get the value of the target_hw_addr field",106,[[["self"]],["macaddr"]]],[11,"get_target_proto_addr","","Get the value of the target_proto_addr field",106,[[["self"]],["ipv4addr"]]],[11,"new","","Constructs a new MutableArpPacket. If the provided buffer…",107,[[],[["mutablearppacket"],["option",["mutablearppacket"]]]]],[11,"owned","","Constructs a new MutableArpPacket. If the provided buffer…",107,[[["vec",["u8"]],["u8"]],[["option",["mutablearppacket"]],["mutablearppacket"]]]],[11,"to_immutable","","Maps from a MutableArpPacket to a ArpPacket",107,[[["self"]],["arppacket"]]],[11,"consume_to_immutable","","Maps from a MutableArpPacket to a ArpPacket while…",107,[[],["arppacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",107,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Arp instance when converted into…",107,[[["arp"]],["usize"]]],[11,"populate","","Populates a ArpPacket using a Arp structure",107,[[["arp"],["self"]]]],[11,"get_hardware_type","","Get the value of the hardware_type field",107,[[["self"]],["arphardwaretype"]]],[11,"get_protocol_type","","Get the value of the protocol_type field",107,[[["self"]],["ethertype"]]],[11,"get_hw_addr_len","","Get the hw_addr_len field.",107,[[["self"]],["u8"]]],[11,"get_proto_addr_len","","Get the proto_addr_len field.",107,[[["self"]],["u8"]]],[11,"get_operation","","Get the value of the operation field",107,[[["self"]],["arpoperation"]]],[11,"get_sender_hw_addr","","Get the value of the sender_hw_addr field",107,[[["self"]],["macaddr"]]],[11,"get_sender_proto_addr","","Get the value of the sender_proto_addr field",107,[[["self"]],["ipv4addr"]]],[11,"get_target_hw_addr","","Get the value of the target_hw_addr field",107,[[["self"]],["macaddr"]]],[11,"get_target_proto_addr","","Get the value of the target_proto_addr field",107,[[["self"]],["ipv4addr"]]],[11,"set_hardware_type","","Set the value of the hardware_type field",107,[[["self"],["arphardwaretype"]]]],[11,"set_protocol_type","","Set the value of the protocol_type field",107,[[["self"],["ethertype"]]]],[11,"set_hw_addr_len","","Set the hw_addr_len field.",107,[[["self"],["u8"]]]],[11,"set_proto_addr_len","","Set the proto_addr_len field.",107,[[["self"],["u8"]]]],[11,"set_operation","","Set the value of the operation field",107,[[["arpoperation"],["self"]]]],[11,"set_sender_hw_addr","","Set the value of the sender_hw_addr field",107,[[["macaddr"],["self"]]]],[11,"set_sender_proto_addr","","Set the value of the sender_proto_addr field",107,[[["self"],["ipv4addr"]]]],[11,"set_target_hw_addr","","Set the value of the target_hw_addr field",107,[[["macaddr"],["self"]]]],[11,"set_target_proto_addr","","Set the value of the target_proto_addr field",107,[[["self"],["ipv4addr"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",107,[[["self"]]]],[11,"new","pnet::packet::icmp","Create a new `IcmpType` instance.",27,[[["u8"]],["icmptype"]]],[11,"new","","Create a new `IcmpCode` instance.",28,[[["u8"]],["icmpcode"]]],[11,"new","","Constructs a new IcmpPacket. If the provided buffer is…",109,[[],[["icmppacket"],["option",["icmppacket"]]]]],[11,"owned","","Constructs a new IcmpPacket. If the provided buffer is…",109,[[["vec",["u8"]],["u8"]],[["option",["icmppacket"]],["icmppacket"]]]],[11,"to_immutable","","Maps from a IcmpPacket to a IcmpPacket",109,[[["self"]],["icmppacket"]]],[11,"consume_to_immutable","","Maps from a IcmpPacket to a IcmpPacket while consuming the…",109,[[],["icmppacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",109,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Icmp instance when converted into…",109,[[["icmp"]],["usize"]]],[11,"get_icmp_type","","Get the value of the icmp_type field",109,[[["self"]],["icmptype"]]],[11,"get_icmp_code","","Get the value of the icmp_code field",109,[[["self"]],["icmpcode"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",109,[[["self"]],["u16"]]],[11,"new","","Constructs a new MutableIcmpPacket. If the provided buffer…",110,[[],[["option",["mutableicmppacket"]],["mutableicmppacket"]]]],[11,"owned","","Constructs a new MutableIcmpPacket. If the provided buffer…",110,[[["vec",["u8"]],["u8"]],[["option",["mutableicmppacket"]],["mutableicmppacket"]]]],[11,"to_immutable","","Maps from a MutableIcmpPacket to a IcmpPacket",110,[[["self"]],["icmppacket"]]],[11,"consume_to_immutable","","Maps from a MutableIcmpPacket to a IcmpPacket while…",110,[[],["icmppacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",110,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Icmp instance when converted into…",110,[[["icmp"]],["usize"]]],[11,"populate","","Populates a IcmpPacket using a Icmp structure",110,[[["self"],["icmp"]]]],[11,"get_icmp_type","","Get the value of the icmp_type field",110,[[["self"]],["icmptype"]]],[11,"get_icmp_code","","Get the value of the icmp_code field",110,[[["self"]],["icmpcode"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",110,[[["self"]],["u16"]]],[11,"set_icmp_type","","Set the value of the icmp_type field",110,[[["self"],["icmptype"]]]],[11,"set_icmp_code","","Set the value of the icmp_code field",110,[[["self"],["icmpcode"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",110,[[["u16"],["self"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",110,[[["self"]]]],[11,"new","pnet::packet::icmp::echo_reply","Create a new `Identifier` instance.",30,[[["u16"]],["identifier"]]],[11,"new","","Create a new `SequenceNumber` instance.",31,[[["u16"]],["sequencenumber"]]],[11,"new","","Constructs a new EchoReplyPacket. If the provided buffer…",112,[[],[["echoreplypacket"],["option",["echoreplypacket"]]]]],[11,"owned","","Constructs a new EchoReplyPacket. If the provided buffer…",112,[[["vec",["u8"]],["u8"]],[["echoreplypacket"],["option",["echoreplypacket"]]]]],[11,"to_immutable","","Maps from a EchoReplyPacket to a EchoReplyPacket",112,[[["self"]],["echoreplypacket"]]],[11,"consume_to_immutable","","Maps from a EchoReplyPacket to a EchoReplyPacket while…",112,[[],["echoreplypacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",112,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a EchoReply instance when converted…",112,[[["echoreply"]],["usize"]]],[11,"get_icmp_type","","Get the value of the icmp_type field",112,[[["self"]],["icmptype"]]],[11,"get_icmp_code","","Get the value of the icmp_code field",112,[[["self"]],["icmpcode"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",112,[[["self"]],["u16"]]],[11,"get_identifier","","Get the identifier field. This field is always stored…",112,[[["self"]],["u16"]]],[11,"get_sequence_number","","Get the sequence_number field. This field is always stored…",112,[[["self"]],["u16"]]],[11,"new","","Constructs a new MutableEchoReplyPacket. If the provided…",113,[[],[["option",["mutableechoreplypacket"]],["mutableechoreplypacket"]]]],[11,"owned","","Constructs a new MutableEchoReplyPacket. If the provided…",113,[[["vec",["u8"]],["u8"]],[["option",["mutableechoreplypacket"]],["mutableechoreplypacket"]]]],[11,"to_immutable","","Maps from a MutableEchoReplyPacket to a EchoReplyPacket",113,[[["self"]],["echoreplypacket"]]],[11,"consume_to_immutable","","Maps from a MutableEchoReplyPacket to a EchoReplyPacket…",113,[[],["echoreplypacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",113,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a EchoReply instance when converted…",113,[[["echoreply"]],["usize"]]],[11,"populate","","Populates a EchoReplyPacket using a EchoReply structure",113,[[["self"],["echoreply"]]]],[11,"get_icmp_type","","Get the value of the icmp_type field",113,[[["self"]],["icmptype"]]],[11,"get_icmp_code","","Get the value of the icmp_code field",113,[[["self"]],["icmpcode"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",113,[[["self"]],["u16"]]],[11,"get_identifier","","Get the identifier field. This field is always stored…",113,[[["self"]],["u16"]]],[11,"get_sequence_number","","Get the sequence_number field. This field is always stored…",113,[[["self"]],["u16"]]],[11,"set_icmp_type","","Set the value of the icmp_type field",113,[[["self"],["icmptype"]]]],[11,"set_icmp_code","","Set the value of the icmp_code field",113,[[["self"],["icmpcode"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",113,[[["u16"],["self"]]]],[11,"set_identifier","","Set the identifier field. This field is always stored…",113,[[["u16"],["self"]]]],[11,"set_sequence_number","","Set the sequence_number field. This field is always stored…",113,[[["u16"],["self"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",113,[[["self"]]]],[11,"new","pnet::packet::icmp::echo_request","Create a new `Identifier` instance.",33,[[["u16"]],["identifier"]]],[11,"new","","Create a new `SequenceNumber` instance.",34,[[["u16"]],["sequencenumber"]]],[11,"new","","Constructs a new EchoRequestPacket. If the provided buffer…",115,[[],[["option",["echorequestpacket"]],["echorequestpacket"]]]],[11,"owned","","Constructs a new EchoRequestPacket. If the provided buffer…",115,[[["vec",["u8"]],["u8"]],[["option",["echorequestpacket"]],["echorequestpacket"]]]],[11,"to_immutable","","Maps from a EchoRequestPacket to a EchoRequestPacket",115,[[["self"]],["echorequestpacket"]]],[11,"consume_to_immutable","","Maps from a EchoRequestPacket to a EchoRequestPacket while…",115,[[],["echorequestpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",115,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a EchoRequest instance when…",115,[[["echorequest"]],["usize"]]],[11,"get_icmp_type","","Get the value of the icmp_type field",115,[[["self"]],["icmptype"]]],[11,"get_icmp_code","","Get the value of the icmp_code field",115,[[["self"]],["icmpcode"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",115,[[["self"]],["u16"]]],[11,"get_identifier","","Get the identifier field. This field is always stored…",115,[[["self"]],["u16"]]],[11,"get_sequence_number","","Get the sequence_number field. This field is always stored…",115,[[["self"]],["u16"]]],[11,"new","","Constructs a new MutableEchoRequestPacket. If the provided…",116,[[],[["mutableechorequestpacket"],["option",["mutableechorequestpacket"]]]]],[11,"owned","","Constructs a new MutableEchoRequestPacket. If the provided…",116,[[["vec",["u8"]],["u8"]],[["option",["mutableechorequestpacket"]],["mutableechorequestpacket"]]]],[11,"to_immutable","","Maps from a MutableEchoRequestPacket to a EchoRequestPacket",116,[[["self"]],["echorequestpacket"]]],[11,"consume_to_immutable","","Maps from a MutableEchoRequestPacket to a…",116,[[],["echorequestpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",116,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a EchoRequest instance when…",116,[[["echorequest"]],["usize"]]],[11,"populate","","Populates a EchoRequestPacket using a EchoRequest structure",116,[[["echorequest"],["self"]]]],[11,"get_icmp_type","","Get the value of the icmp_type field",116,[[["self"]],["icmptype"]]],[11,"get_icmp_code","","Get the value of the icmp_code field",116,[[["self"]],["icmpcode"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",116,[[["self"]],["u16"]]],[11,"get_identifier","","Get the identifier field. This field is always stored…",116,[[["self"]],["u16"]]],[11,"get_sequence_number","","Get the sequence_number field. This field is always stored…",116,[[["self"]],["u16"]]],[11,"set_icmp_type","","Set the value of the icmp_type field",116,[[["self"],["icmptype"]]]],[11,"set_icmp_code","","Set the value of the icmp_code field",116,[[["self"],["icmpcode"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",116,[[["u16"],["self"]]]],[11,"set_identifier","","Set the identifier field. This field is always stored…",116,[[["u16"],["self"]]]],[11,"set_sequence_number","","Set the sequence_number field. This field is always stored…",116,[[["u16"],["self"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",116,[[["self"]]]],[11,"new","pnet::packet::icmp::destination_unreachable","Constructs a new DestinationUnreachablePacket. If the…",118,[[],[["destinationunreachablepacket"],["option",["destinationunreachablepacket"]]]]],[11,"owned","","Constructs a new DestinationUnreachablePacket. If the…",118,[[["vec",["u8"]],["u8"]],[["option",["destinationunreachablepacket"]],["destinationunreachablepacket"]]]],[11,"to_immutable","","Maps from a DestinationUnreachablePacket to a…",118,[[["self"]],["destinationunreachablepacket"]]],[11,"consume_to_immutable","","Maps from a DestinationUnreachablePacket to a…",118,[[],["destinationunreachablepacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",118,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a DestinationUnreachable instance…",118,[[["destinationunreachable"]],["usize"]]],[11,"get_icmp_type","","Get the value of the icmp_type field",118,[[["self"]],["icmptype"]]],[11,"get_icmp_code","","Get the value of the icmp_code field",118,[[["self"]],["icmpcode"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",118,[[["self"]],["u16"]]],[11,"get_unused","","Get the unused field. This field is always stored…",118,[[["self"]],["u32"]]],[11,"new","","Constructs a new MutableDestinationUnreachablePacket. If…",119,[[],[["option",["mutabledestinationunreachablepacket"]],["mutabledestinationunreachablepacket"]]]],[11,"owned","","Constructs a new MutableDestinationUnreachablePacket. If…",119,[[["vec",["u8"]],["u8"]],[["option",["mutabledestinationunreachablepacket"]],["mutabledestinationunreachablepacket"]]]],[11,"to_immutable","","Maps from a MutableDestinationUnreachablePacket to a…",119,[[["self"]],["destinationunreachablepacket"]]],[11,"consume_to_immutable","","Maps from a MutableDestinationUnreachablePacket to a…",119,[[],["destinationunreachablepacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",119,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a DestinationUnreachable instance…",119,[[["destinationunreachable"]],["usize"]]],[11,"populate","","Populates a DestinationUnreachablePacket using a…",119,[[["destinationunreachable"],["self"]]]],[11,"get_icmp_type","","Get the value of the icmp_type field",119,[[["self"]],["icmptype"]]],[11,"get_icmp_code","","Get the value of the icmp_code field",119,[[["self"]],["icmpcode"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",119,[[["self"]],["u16"]]],[11,"get_unused","","Get the unused field. This field is always stored…",119,[[["self"]],["u32"]]],[11,"set_icmp_type","","Set the value of the icmp_type field",119,[[["self"],["icmptype"]]]],[11,"set_icmp_code","","Set the value of the icmp_code field",119,[[["self"],["icmpcode"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",119,[[["u16"],["self"]]]],[11,"set_unused","","Set the unused field. This field is always stored…",119,[[["self"],["u32"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",119,[[["self"]]]],[11,"new","pnet::packet::icmp::time_exceeded","Constructs a new TimeExceededPacket. If the provided…",121,[[],[["option",["timeexceededpacket"]],["timeexceededpacket"]]]],[11,"owned","","Constructs a new TimeExceededPacket. If the provided…",121,[[["vec",["u8"]],["u8"]],[["timeexceededpacket"],["option",["timeexceededpacket"]]]]],[11,"to_immutable","","Maps from a TimeExceededPacket to a TimeExceededPacket",121,[[["self"]],["timeexceededpacket"]]],[11,"consume_to_immutable","","Maps from a TimeExceededPacket to a TimeExceededPacket…",121,[[],["timeexceededpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",121,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a TimeExceeded instance when…",121,[[["timeexceeded"]],["usize"]]],[11,"get_icmp_type","","Get the value of the icmp_type field",121,[[["self"]],["icmptype"]]],[11,"get_icmp_code","","Get the value of the icmp_code field",121,[[["self"]],["icmpcode"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",121,[[["self"]],["u16"]]],[11,"get_unused","","Get the unused field. This field is always stored…",121,[[["self"]],["u32"]]],[11,"new","","Constructs a new MutableTimeExceededPacket. If the…",122,[[],[["mutabletimeexceededpacket"],["option",["mutabletimeexceededpacket"]]]]],[11,"owned","","Constructs a new MutableTimeExceededPacket. If the…",122,[[["vec",["u8"]],["u8"]],[["mutabletimeexceededpacket"],["option",["mutabletimeexceededpacket"]]]]],[11,"to_immutable","","Maps from a MutableTimeExceededPacket to a…",122,[[["self"]],["timeexceededpacket"]]],[11,"consume_to_immutable","","Maps from a MutableTimeExceededPacket to a…",122,[[],["timeexceededpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",122,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a TimeExceeded instance when…",122,[[["timeexceeded"]],["usize"]]],[11,"populate","","Populates a TimeExceededPacket using a TimeExceeded…",122,[[["self"],["timeexceeded"]]]],[11,"get_icmp_type","","Get the value of the icmp_type field",122,[[["self"]],["icmptype"]]],[11,"get_icmp_code","","Get the value of the icmp_code field",122,[[["self"]],["icmpcode"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",122,[[["self"]],["u16"]]],[11,"get_unused","","Get the unused field. This field is always stored…",122,[[["self"]],["u32"]]],[11,"set_icmp_type","","Set the value of the icmp_type field",122,[[["self"],["icmptype"]]]],[11,"set_icmp_code","","Set the value of the icmp_code field",122,[[["self"],["icmpcode"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",122,[[["u16"],["self"]]]],[11,"set_unused","","Set the unused field. This field is always stored…",122,[[["self"],["u32"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",122,[[["self"]]]],[11,"new","pnet::packet::icmpv6","Create a new `Icmpv6Type` instance.",38,[[["u8"]],["icmpv6type"]]],[11,"new","","Create a new `Icmpv6Code` instance.",39,[[["u8"]],["icmpv6code"]]],[11,"new","","Constructs a new Icmpv6Packet. If the provided buffer is…",124,[[],[["icmpv6packet"],["option",["icmpv6packet"]]]]],[11,"owned","","Constructs a new Icmpv6Packet. If the provided buffer is…",124,[[["vec",["u8"]],["u8"]],[["option",["icmpv6packet"]],["icmpv6packet"]]]],[11,"to_immutable","","Maps from a Icmpv6Packet to a Icmpv6Packet",124,[[["self"]],["icmpv6packet"]]],[11,"consume_to_immutable","","Maps from a Icmpv6Packet to a Icmpv6Packet while consuming…",124,[[],["icmpv6packet"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",124,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Icmpv6 instance when converted…",124,[[["icmpv6"]],["usize"]]],[11,"get_icmpv6_type","","Get the value of the icmpv6_type field",124,[[["self"]],["icmpv6type"]]],[11,"get_icmpv6_code","","Get the value of the icmpv6_code field",124,[[["self"]],["icmpv6code"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",124,[[["self"]],["u16"]]],[11,"new","","Constructs a new MutableIcmpv6Packet. If the provided…",125,[[],[["mutableicmpv6packet"],["option",["mutableicmpv6packet"]]]]],[11,"owned","","Constructs a new MutableIcmpv6Packet. If the provided…",125,[[["vec",["u8"]],["u8"]],[["option",["mutableicmpv6packet"]],["mutableicmpv6packet"]]]],[11,"to_immutable","","Maps from a MutableIcmpv6Packet to a Icmpv6Packet",125,[[["self"]],["icmpv6packet"]]],[11,"consume_to_immutable","","Maps from a MutableIcmpv6Packet to a Icmpv6Packet while…",125,[[],["icmpv6packet"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",125,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Icmpv6 instance when converted…",125,[[["icmpv6"]],["usize"]]],[11,"populate","","Populates a Icmpv6Packet using a Icmpv6 structure",125,[[["icmpv6"],["self"]]]],[11,"get_icmpv6_type","","Get the value of the icmpv6_type field",125,[[["self"]],["icmpv6type"]]],[11,"get_icmpv6_code","","Get the value of the icmpv6_code field",125,[[["self"]],["icmpv6code"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",125,[[["self"]],["u16"]]],[11,"set_icmpv6_type","","Set the value of the icmpv6_type field",125,[[["icmpv6type"],["self"]]]],[11,"set_icmpv6_code","","Set the value of the icmpv6_code field",125,[[["icmpv6code"],["self"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",125,[[["u16"],["self"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",125,[[["self"]]]],[11,"new","pnet::packet::icmpv6::ndp","Create a new `NdpOptionType` instance.",41,[[["u8"]],["ndpoptiontype"]]],[11,"new","","Constructs a new NdpOptionPacket. If the provided buffer…",127,[[],[["option",["ndpoptionpacket"]],["ndpoptionpacket"]]]],[11,"owned","","Constructs a new NdpOptionPacket. If the provided buffer…",127,[[["vec",["u8"]],["u8"]],[["ndpoptionpacket"],["option",["ndpoptionpacket"]]]]],[11,"to_immutable","","Maps from a NdpOptionPacket to a NdpOptionPacket",127,[[["self"]],["ndpoptionpacket"]]],[11,"consume_to_immutable","","Maps from a NdpOptionPacket to a NdpOptionPacket while…",127,[[],["ndpoptionpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",127,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a NdpOption instance when converted…",127,[[["ndpoption"]],["usize"]]],[11,"get_option_type","","Get the value of the option_type field",127,[[["self"]],["ndpoptiontype"]]],[11,"get_length","","Get the length field.",127,[[["self"]],["u8"]]],[11,"new","","Constructs a new MutableNdpOptionPacket. If the provided…",128,[[],[["option",["mutablendpoptionpacket"]],["mutablendpoptionpacket"]]]],[11,"owned","","Constructs a new MutableNdpOptionPacket. If the provided…",128,[[["vec",["u8"]],["u8"]],[["option",["mutablendpoptionpacket"]],["mutablendpoptionpacket"]]]],[11,"to_immutable","","Maps from a MutableNdpOptionPacket to a NdpOptionPacket",128,[[["self"]],["ndpoptionpacket"]]],[11,"consume_to_immutable","","Maps from a MutableNdpOptionPacket to a NdpOptionPacket…",128,[[],["ndpoptionpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",128,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a NdpOption instance when converted…",128,[[["ndpoption"]],["usize"]]],[11,"populate","","Populates a NdpOptionPacket using a NdpOption structure",128,[[["self"],["ndpoption"]]]],[11,"get_option_type","","Get the value of the option_type field",128,[[["self"]],["ndpoptiontype"]]],[11,"get_length","","Get the length field.",128,[[["self"]],["u8"]]],[11,"set_option_type","","Set the value of the option_type field",128,[[["self"],["ndpoptiontype"]]]],[11,"set_length","","Set the length field.",128,[[["self"],["u8"]]]],[11,"set_data","","Set the value of the data field (copies contents)",128,[[["self"]]]],[11,"new","","Constructs a new RouterSolicitPacket. If the provided…",130,[[],[["routersolicitpacket"],["option",["routersolicitpacket"]]]]],[11,"owned","","Constructs a new RouterSolicitPacket. If the provided…",130,[[["vec",["u8"]],["u8"]],[["option",["routersolicitpacket"]],["routersolicitpacket"]]]],[11,"to_immutable","","Maps from a RouterSolicitPacket to a RouterSolicitPacket",130,[[["self"]],["routersolicitpacket"]]],[11,"consume_to_immutable","","Maps from a RouterSolicitPacket to a RouterSolicitPacket…",130,[[],["routersolicitpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",130,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a RouterSolicit instance when…",130,[[["routersolicit"]],["usize"]]],[11,"get_icmpv6_type","","Get the value of the icmpv6_type field",130,[[["self"]],["icmpv6type"]]],[11,"get_icmpv6_code","","Get the value of the icmpv6_code field",130,[[["self"]],["icmpv6code"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",130,[[["self"]],["u16"]]],[11,"get_reserved","","Get the reserved field. This field is always stored…",130,[[["self"]],["u32"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",130,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",130,[[["self"]],[["vec",["ndpoption"]],["ndpoption"]]]],[11,"get_options_iter","","Get the value of the options field as iterator",130,[[["self"]],["ndpoptioniterable"]]],[11,"new","","Constructs a new MutableRouterSolicitPacket. If the…",131,[[],[["option",["mutableroutersolicitpacket"]],["mutableroutersolicitpacket"]]]],[11,"owned","","Constructs a new MutableRouterSolicitPacket. If the…",131,[[["vec",["u8"]],["u8"]],[["mutableroutersolicitpacket"],["option",["mutableroutersolicitpacket"]]]]],[11,"to_immutable","","Maps from a MutableRouterSolicitPacket to a…",131,[[["self"]],["routersolicitpacket"]]],[11,"consume_to_immutable","","Maps from a MutableRouterSolicitPacket to a…",131,[[],["routersolicitpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",131,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a RouterSolicit instance when…",131,[[["routersolicit"]],["usize"]]],[11,"populate","","Populates a RouterSolicitPacket using a RouterSolicit…",131,[[["self"],["routersolicit"]]]],[11,"get_icmpv6_type","","Get the value of the icmpv6_type field",131,[[["self"]],["icmpv6type"]]],[11,"get_icmpv6_code","","Get the value of the icmpv6_code field",131,[[["self"]],["icmpv6code"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",131,[[["self"]],["u16"]]],[11,"get_reserved","","Get the reserved field. This field is always stored…",131,[[["self"]],["u32"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",131,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",131,[[["self"]],[["vec",["ndpoption"]],["ndpoption"]]]],[11,"get_options_iter","","Get the value of the options field as iterator",131,[[["self"]],["ndpoptioniterable"]]],[11,"set_icmpv6_type","","Set the value of the icmpv6_type field",131,[[["icmpv6type"],["self"]]]],[11,"set_icmpv6_code","","Set the value of the icmpv6_code field",131,[[["icmpv6code"],["self"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",131,[[["u16"],["self"]]]],[11,"set_reserved","","Set the reserved field. This field is always stored…",131,[[["self"],["u32"]]]],[11,"get_options_raw_mut","","Get the raw &mut [u8] value of the options field, without…",131,[[["self"]]]],[11,"set_options","","Set the value of the options field (copies contents)",131,[[["self"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",131,[[["self"]]]],[11,"new","","Constructs a new RouterAdvertPacket. If the provided…",133,[[],[["option",["routeradvertpacket"]],["routeradvertpacket"]]]],[11,"owned","","Constructs a new RouterAdvertPacket. If the provided…",133,[[["vec",["u8"]],["u8"]],[["routeradvertpacket"],["option",["routeradvertpacket"]]]]],[11,"to_immutable","","Maps from a RouterAdvertPacket to a RouterAdvertPacket",133,[[["self"]],["routeradvertpacket"]]],[11,"consume_to_immutable","","Maps from a RouterAdvertPacket to a RouterAdvertPacket…",133,[[],["routeradvertpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",133,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a RouterAdvert instance when…",133,[[["routeradvert"]],["usize"]]],[11,"get_icmpv6_type","","Get the value of the icmpv6_type field",133,[[["self"]],["icmpv6type"]]],[11,"get_icmpv6_code","","Get the value of the icmpv6_code field",133,[[["self"]],["icmpv6code"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",133,[[["self"]],["u16"]]],[11,"get_hop_limit","","Get the hop_limit field.",133,[[["self"]],["u8"]]],[11,"get_flags","","Get the flags field.",133,[[["self"]],["u8"]]],[11,"get_lifetime","","Get the lifetime field. This field is always stored…",133,[[["self"]],["u16"]]],[11,"get_reachable_time","","Get the reachable_time field. This field is always stored…",133,[[["self"]],["u32"]]],[11,"get_retrans_time","","Get the retrans_time field. This field is always stored…",133,[[["self"]],["u32"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",133,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",133,[[["self"]],[["vec",["ndpoption"]],["ndpoption"]]]],[11,"get_options_iter","","Get the value of the options field as iterator",133,[[["self"]],["ndpoptioniterable"]]],[11,"new","","Constructs a new MutableRouterAdvertPacket. If the…",134,[[],[["option",["mutablerouteradvertpacket"]],["mutablerouteradvertpacket"]]]],[11,"owned","","Constructs a new MutableRouterAdvertPacket. If the…",134,[[["vec",["u8"]],["u8"]],[["mutablerouteradvertpacket"],["option",["mutablerouteradvertpacket"]]]]],[11,"to_immutable","","Maps from a MutableRouterAdvertPacket to a…",134,[[["self"]],["routeradvertpacket"]]],[11,"consume_to_immutable","","Maps from a MutableRouterAdvertPacket to a…",134,[[],["routeradvertpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",134,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a RouterAdvert instance when…",134,[[["routeradvert"]],["usize"]]],[11,"populate","","Populates a RouterAdvertPacket using a RouterAdvert…",134,[[["routeradvert"],["self"]]]],[11,"get_icmpv6_type","","Get the value of the icmpv6_type field",134,[[["self"]],["icmpv6type"]]],[11,"get_icmpv6_code","","Get the value of the icmpv6_code field",134,[[["self"]],["icmpv6code"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",134,[[["self"]],["u16"]]],[11,"get_hop_limit","","Get the hop_limit field.",134,[[["self"]],["u8"]]],[11,"get_flags","","Get the flags field.",134,[[["self"]],["u8"]]],[11,"get_lifetime","","Get the lifetime field. This field is always stored…",134,[[["self"]],["u16"]]],[11,"get_reachable_time","","Get the reachable_time field. This field is always stored…",134,[[["self"]],["u32"]]],[11,"get_retrans_time","","Get the retrans_time field. This field is always stored…",134,[[["self"]],["u32"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",134,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",134,[[["self"]],[["vec",["ndpoption"]],["ndpoption"]]]],[11,"get_options_iter","","Get the value of the options field as iterator",134,[[["self"]],["ndpoptioniterable"]]],[11,"set_icmpv6_type","","Set the value of the icmpv6_type field",134,[[["icmpv6type"],["self"]]]],[11,"set_icmpv6_code","","Set the value of the icmpv6_code field",134,[[["icmpv6code"],["self"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",134,[[["u16"],["self"]]]],[11,"set_hop_limit","","Set the hop_limit field.",134,[[["self"],["u8"]]]],[11,"set_flags","","Set the flags field.",134,[[["self"],["u8"]]]],[11,"set_lifetime","","Set the lifetime field. This field is always stored…",134,[[["u16"],["self"]]]],[11,"set_reachable_time","","Set the reachable_time field. This field is always stored…",134,[[["self"],["u32"]]]],[11,"set_retrans_time","","Set the retrans_time field. This field is always stored…",134,[[["self"],["u32"]]]],[11,"get_options_raw_mut","","Get the raw &mut [u8] value of the options field, without…",134,[[["self"]]]],[11,"set_options","","Set the value of the options field (copies contents)",134,[[["self"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",134,[[["self"]]]],[11,"new","","Constructs a new NeighborSolicitPacket. If the provided…",136,[[],[["option",["neighborsolicitpacket"]],["neighborsolicitpacket"]]]],[11,"owned","","Constructs a new NeighborSolicitPacket. If the provided…",136,[[["vec",["u8"]],["u8"]],[["neighborsolicitpacket"],["option",["neighborsolicitpacket"]]]]],[11,"to_immutable","","Maps from a NeighborSolicitPacket to a NeighborSolicitPacket",136,[[["self"]],["neighborsolicitpacket"]]],[11,"consume_to_immutable","","Maps from a NeighborSolicitPacket to a…",136,[[],["neighborsolicitpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",136,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a NeighborSolicit instance when…",136,[[["neighborsolicit"]],["usize"]]],[11,"get_icmpv6_type","","Get the value of the icmpv6_type field",136,[[["self"]],["icmpv6type"]]],[11,"get_icmpv6_code","","Get the value of the icmpv6_code field",136,[[["self"]],["icmpv6code"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",136,[[["self"]],["u16"]]],[11,"get_reserved","","Get the reserved field. This field is always stored…",136,[[["self"]],["u32"]]],[11,"get_target_addr","","Get the value of the target_addr field",136,[[["self"]],["ipv6addr"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",136,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",136,[[["self"]],[["vec",["ndpoption"]],["ndpoption"]]]],[11,"get_options_iter","","Get the value of the options field as iterator",136,[[["self"]],["ndpoptioniterable"]]],[11,"new","","Constructs a new MutableNeighborSolicitPacket. If the…",137,[[],[["mutableneighborsolicitpacket"],["option",["mutableneighborsolicitpacket"]]]]],[11,"owned","","Constructs a new MutableNeighborSolicitPacket. If the…",137,[[["vec",["u8"]],["u8"]],[["option",["mutableneighborsolicitpacket"]],["mutableneighborsolicitpacket"]]]],[11,"to_immutable","","Maps from a MutableNeighborSolicitPacket to a…",137,[[["self"]],["neighborsolicitpacket"]]],[11,"consume_to_immutable","","Maps from a MutableNeighborSolicitPacket to a…",137,[[],["neighborsolicitpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",137,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a NeighborSolicit instance when…",137,[[["neighborsolicit"]],["usize"]]],[11,"populate","","Populates a NeighborSolicitPacket using a NeighborSolicit…",137,[[["self"],["neighborsolicit"]]]],[11,"get_icmpv6_type","","Get the value of the icmpv6_type field",137,[[["self"]],["icmpv6type"]]],[11,"get_icmpv6_code","","Get the value of the icmpv6_code field",137,[[["self"]],["icmpv6code"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",137,[[["self"]],["u16"]]],[11,"get_reserved","","Get the reserved field. This field is always stored…",137,[[["self"]],["u32"]]],[11,"get_target_addr","","Get the value of the target_addr field",137,[[["self"]],["ipv6addr"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",137,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",137,[[["self"]],[["vec",["ndpoption"]],["ndpoption"]]]],[11,"get_options_iter","","Get the value of the options field as iterator",137,[[["self"]],["ndpoptioniterable"]]],[11,"set_icmpv6_type","","Set the value of the icmpv6_type field",137,[[["icmpv6type"],["self"]]]],[11,"set_icmpv6_code","","Set the value of the icmpv6_code field",137,[[["icmpv6code"],["self"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",137,[[["u16"],["self"]]]],[11,"set_reserved","","Set the reserved field. This field is always stored…",137,[[["self"],["u32"]]]],[11,"set_target_addr","","Set the value of the target_addr field",137,[[["ipv6addr"],["self"]]]],[11,"get_options_raw_mut","","Get the raw &mut [u8] value of the options field, without…",137,[[["self"]]]],[11,"set_options","","Set the value of the options field (copies contents)",137,[[["self"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",137,[[["self"]]]],[11,"new","","Constructs a new NeighborAdvertPacket. If the provided…",139,[[],[["option",["neighboradvertpacket"]],["neighboradvertpacket"]]]],[11,"owned","","Constructs a new NeighborAdvertPacket. If the provided…",139,[[["vec",["u8"]],["u8"]],[["option",["neighboradvertpacket"]],["neighboradvertpacket"]]]],[11,"to_immutable","","Maps from a NeighborAdvertPacket to a NeighborAdvertPacket",139,[[["self"]],["neighboradvertpacket"]]],[11,"consume_to_immutable","","Maps from a NeighborAdvertPacket to a NeighborAdvertPacket…",139,[[],["neighboradvertpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",139,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a NeighborAdvert instance when…",139,[[["neighboradvert"]],["usize"]]],[11,"get_icmpv6_type","","Get the value of the icmpv6_type field",139,[[["self"]],["icmpv6type"]]],[11,"get_icmpv6_code","","Get the value of the icmpv6_code field",139,[[["self"]],["icmpv6code"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",139,[[["self"]],["u16"]]],[11,"get_flags","","Get the flags field.",139,[[["self"]],["u8"]]],[11,"get_reserved","","Get the reserved field. This field is always stored…",139,[[["self"]],["u32"]]],[11,"get_target_addr","","Get the value of the target_addr field",139,[[["self"]],["ipv6addr"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",139,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",139,[[["self"]],[["vec",["ndpoption"]],["ndpoption"]]]],[11,"get_options_iter","","Get the value of the options field as iterator",139,[[["self"]],["ndpoptioniterable"]]],[11,"new","","Constructs a new MutableNeighborAdvertPacket. If the…",140,[[],[["option",["mutableneighboradvertpacket"]],["mutableneighboradvertpacket"]]]],[11,"owned","","Constructs a new MutableNeighborAdvertPacket. If the…",140,[[["vec",["u8"]],["u8"]],[["option",["mutableneighboradvertpacket"]],["mutableneighboradvertpacket"]]]],[11,"to_immutable","","Maps from a MutableNeighborAdvertPacket to a…",140,[[["self"]],["neighboradvertpacket"]]],[11,"consume_to_immutable","","Maps from a MutableNeighborAdvertPacket to a…",140,[[],["neighboradvertpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",140,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a NeighborAdvert instance when…",140,[[["neighboradvert"]],["usize"]]],[11,"populate","","Populates a NeighborAdvertPacket using a NeighborAdvert…",140,[[["self"],["neighboradvert"]]]],[11,"get_icmpv6_type","","Get the value of the icmpv6_type field",140,[[["self"]],["icmpv6type"]]],[11,"get_icmpv6_code","","Get the value of the icmpv6_code field",140,[[["self"]],["icmpv6code"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",140,[[["self"]],["u16"]]],[11,"get_flags","","Get the flags field.",140,[[["self"]],["u8"]]],[11,"get_reserved","","Get the reserved field. This field is always stored…",140,[[["self"]],["u32"]]],[11,"get_target_addr","","Get the value of the target_addr field",140,[[["self"]],["ipv6addr"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",140,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",140,[[["self"]],[["vec",["ndpoption"]],["ndpoption"]]]],[11,"get_options_iter","","Get the value of the options field as iterator",140,[[["self"]],["ndpoptioniterable"]]],[11,"set_icmpv6_type","","Set the value of the icmpv6_type field",140,[[["icmpv6type"],["self"]]]],[11,"set_icmpv6_code","","Set the value of the icmpv6_code field",140,[[["icmpv6code"],["self"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",140,[[["u16"],["self"]]]],[11,"set_flags","","Set the flags field.",140,[[["self"],["u8"]]]],[11,"set_reserved","","Set the reserved field. This field is always stored…",140,[[["self"],["u32"]]]],[11,"set_target_addr","","Set the value of the target_addr field",140,[[["ipv6addr"],["self"]]]],[11,"get_options_raw_mut","","Get the raw &mut [u8] value of the options field, without…",140,[[["self"]]]],[11,"set_options","","Set the value of the options field (copies contents)",140,[[["self"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",140,[[["self"]]]],[11,"new","","Constructs a new RedirectPacket. If the provided buffer is…",142,[[],[["redirectpacket"],["option",["redirectpacket"]]]]],[11,"owned","","Constructs a new RedirectPacket. If the provided buffer is…",142,[[["vec",["u8"]],["u8"]],[["redirectpacket"],["option",["redirectpacket"]]]]],[11,"to_immutable","","Maps from a RedirectPacket to a RedirectPacket",142,[[["self"]],["redirectpacket"]]],[11,"consume_to_immutable","","Maps from a RedirectPacket to a RedirectPacket while…",142,[[],["redirectpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",142,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Redirect instance when converted…",142,[[["redirect"]],["usize"]]],[11,"get_icmpv6_type","","Get the value of the icmpv6_type field",142,[[["self"]],["icmpv6type"]]],[11,"get_icmpv6_code","","Get the value of the icmpv6_code field",142,[[["self"]],["icmpv6code"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",142,[[["self"]],["u16"]]],[11,"get_reserved","","Get the reserved field. This field is always stored…",142,[[["self"]],["u32"]]],[11,"get_target_addr","","Get the value of the target_addr field",142,[[["self"]],["ipv6addr"]]],[11,"get_dest_addr","","Get the value of the dest_addr field",142,[[["self"]],["ipv6addr"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",142,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",142,[[["self"]],[["vec",["ndpoption"]],["ndpoption"]]]],[11,"get_options_iter","","Get the value of the options field as iterator",142,[[["self"]],["ndpoptioniterable"]]],[11,"new","","Constructs a new MutableRedirectPacket. If the provided…",143,[[],[["mutableredirectpacket"],["option",["mutableredirectpacket"]]]]],[11,"owned","","Constructs a new MutableRedirectPacket. If the provided…",143,[[["vec",["u8"]],["u8"]],[["mutableredirectpacket"],["option",["mutableredirectpacket"]]]]],[11,"to_immutable","","Maps from a MutableRedirectPacket to a RedirectPacket",143,[[["self"]],["redirectpacket"]]],[11,"consume_to_immutable","","Maps from a MutableRedirectPacket to a RedirectPacket…",143,[[],["redirectpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",143,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Redirect instance when converted…",143,[[["redirect"]],["usize"]]],[11,"populate","","Populates a RedirectPacket using a Redirect structure",143,[[["self"],["redirect"]]]],[11,"get_icmpv6_type","","Get the value of the icmpv6_type field",143,[[["self"]],["icmpv6type"]]],[11,"get_icmpv6_code","","Get the value of the icmpv6_code field",143,[[["self"]],["icmpv6code"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",143,[[["self"]],["u16"]]],[11,"get_reserved","","Get the reserved field. This field is always stored…",143,[[["self"]],["u32"]]],[11,"get_target_addr","","Get the value of the target_addr field",143,[[["self"]],["ipv6addr"]]],[11,"get_dest_addr","","Get the value of the dest_addr field",143,[[["self"]],["ipv6addr"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",143,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",143,[[["self"]],[["vec",["ndpoption"]],["ndpoption"]]]],[11,"get_options_iter","","Get the value of the options field as iterator",143,[[["self"]],["ndpoptioniterable"]]],[11,"set_icmpv6_type","","Set the value of the icmpv6_type field",143,[[["icmpv6type"],["self"]]]],[11,"set_icmpv6_code","","Set the value of the icmpv6_code field",143,[[["icmpv6code"],["self"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",143,[[["u16"],["self"]]]],[11,"set_reserved","","Set the reserved field. This field is always stored…",143,[[["self"],["u32"]]]],[11,"set_target_addr","","Set the value of the target_addr field",143,[[["ipv6addr"],["self"]]]],[11,"set_dest_addr","","Set the value of the dest_addr field",143,[[["ipv6addr"],["self"]]]],[11,"get_options_raw_mut","","Get the raw &mut [u8] value of the options field, without…",143,[[["self"]]]],[11,"set_options","","Set the value of the options field (copies contents)",143,[[["self"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",143,[[["self"]]]],[11,"new","pnet::packet::vlan","Create a new `ClassOfService` instance.",48,[[["u8"]],["classofservice"]]],[11,"new","","Constructs a new VlanPacket. If the provided buffer is…",145,[[],[["option",["vlanpacket"]],["vlanpacket"]]]],[11,"owned","","Constructs a new VlanPacket. If the provided buffer is…",145,[[["vec",["u8"]],["u8"]],[["vlanpacket"],["option",["vlanpacket"]]]]],[11,"to_immutable","","Maps from a VlanPacket to a VlanPacket",145,[[["self"]],["vlanpacket"]]],[11,"consume_to_immutable","","Maps from a VlanPacket to a VlanPacket while consuming the…",145,[[],["vlanpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",145,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Vlan instance when converted into…",145,[[["vlan"]],["usize"]]],[11,"get_priority_code_point","","Get the value of the priority_code_point field",145,[[["self"]],["classofservice"]]],[11,"get_drop_eligible_indicator","","Get the drop_eligible_indicator field.",145,[[["self"]],["u8"]]],[11,"get_vlan_identifier","","Get the vlan_identifier field. This field is always stored…",145,[[["self"]],["u16"]]],[11,"get_ethertype","","Get the value of the ethertype field",145,[[["self"]],["ethertype"]]],[11,"new","","Constructs a new MutableVlanPacket. If the provided buffer…",146,[[],[["option",["mutablevlanpacket"]],["mutablevlanpacket"]]]],[11,"owned","","Constructs a new MutableVlanPacket. If the provided buffer…",146,[[["vec",["u8"]],["u8"]],[["option",["mutablevlanpacket"]],["mutablevlanpacket"]]]],[11,"to_immutable","","Maps from a MutableVlanPacket to a VlanPacket",146,[[["self"]],["vlanpacket"]]],[11,"consume_to_immutable","","Maps from a MutableVlanPacket to a VlanPacket while…",146,[[],["vlanpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",146,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Vlan instance when converted into…",146,[[["vlan"]],["usize"]]],[11,"populate","","Populates a VlanPacket using a Vlan structure",146,[[["self"],["vlan"]]]],[11,"get_priority_code_point","","Get the value of the priority_code_point field",146,[[["self"]],["classofservice"]]],[11,"get_drop_eligible_indicator","","Get the drop_eligible_indicator field.",146,[[["self"]],["u8"]]],[11,"get_vlan_identifier","","Get the vlan_identifier field. This field is always stored…",146,[[["self"]],["u16"]]],[11,"get_ethertype","","Get the value of the ethertype field",146,[[["self"]],["ethertype"]]],[11,"set_priority_code_point","","Set the value of the priority_code_point field",146,[[["self"],["classofservice"]]]],[11,"set_drop_eligible_indicator","","Set the drop_eligible_indicator field.",146,[[["self"],["u8"]]]],[11,"set_vlan_identifier","","Set the vlan_identifier field. This field is always stored…",146,[[["u16"],["self"]]]],[11,"set_ethertype","","Set the value of the ethertype field",146,[[["self"],["ethertype"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",146,[[["self"]]]],[11,"as_slice","pnet::packet","Get a slice of the packet data.",55,[[["self"]]]],[11,"to_immutable","","No-op - returns `self`.",55,[[],["packetdata"]]],[11,"len","","A length of the packet data.",55,[[["self"]],["usize"]]],[11,"as_slice","","Get packet data as a slice.",56,[[["self"]]]],[11,"as_mut_slice","","Get packet data as a mutable slice.",56,[[["self"]]]],[11,"to_immutable","","Get an immutable version of packet data.",56,[[],["packetdata"]]],[11,"len","","Get a length of data in the packet.",56,[[["self"]],["usize"]]],[11,"send_to","pnet::transport","Send a packet to the provided destination.",60,[[["self"],["t"],["ipaddr"]],[["error"],["usize"],["result",["usize","error"]]]]],[11,"set_ttl","","Sets a time-to-live on the socket, which then applies for…",60,[[["self"],["u8"]],[["result",["error"]],["error"]]]],[11,"next","","Get the next (`Ipv4Packet`, `IpAddr`) pair for the given…",149,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_with_timeout","","Wait only for a timespan of `t` to receive some data, then…",149,[[["self"],["duration"]],[["result",["option","error"]],["option"],["error"]]]],[11,"next","","Get the next (`UdpPacket`, `IpAddr`) pair for the given…",150,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_with_timeout","","Wait only for a timespan of `t` to receive some data, then…",150,[[["self"],["duration"]],[["error"],["result",["option","error"]],["option"]]]],[11,"next","","Get the next (`IcmpPacket`, `IpAddr`) pair for the given…",151,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_with_timeout","","Wait only for a timespan of `t` to receive some data, then…",151,[[["self"],["duration"]],[["result",["option","error"]],["error"],["option"]]]],[11,"next","","Get the next (`Icmpv6Packet`, `IpAddr`) pair for the given…",152,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_with_timeout","","Wait only for a timespan of `t` to receive some data, then…",152,[[["self"],["duration"]],[["result",["option","error"]],["option"],["error"]]]],[11,"next","","Get the next (`TcpPacket`, `IpAddr`) pair for the given…",153,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_with_timeout","","Wait only for a timespan of `t` to receive some data, then…",153,[[["self"],["duration"]],[["result",["option","error"]],["option"],["error"]]]]],"p":[[3,"Config"],[4,"ChannelType"],[4,"Channel"],[4,"FanoutType"],[3,"FanoutOption"],[3,"Config"],[8,"DataLinkSender"],[8,"DataLinkReceiver"],[3,"NetworkInterface"],[3,"MacAddr"],[4,"ParseMacAddrErr"],[3,"Ethernet"],[3,"EtherType"],[3,"Gre"],[3,"IpNextHeaderProtocol"],[3,"Ipv4OptionNumber"],[3,"Ipv4"],[3,"Ipv6"],[3,"Extension"],[3,"Routing"],[3,"Fragment"],[3,"Udp"],[3,"Tcp"],[3,"TcpOptionNumber"],[3,"ArpOperation"],[3,"ArpHardwareType"],[3,"Arp"],[3,"IcmpType"],[3,"IcmpCode"],[3,"Icmp"],[3,"Identifier"],[3,"SequenceNumber"],[3,"EchoReply"],[3,"Identifier"],[3,"SequenceNumber"],[3,"EchoRequest"],[3,"DestinationUnreachable"],[3,"TimeExceeded"],[3,"Icmpv6Type"],[3,"Icmpv6Code"],[3,"Icmpv6"],[3,"NdpOptionType"],[3,"NdpOption"],[3,"RouterSolicit"],[3,"RouterAdvert"],[3,"NeighborSolicit"],[3,"NeighborAdvert"],[3,"Redirect"],[3,"ClassOfService"],[3,"Vlan"],[8,"Octets"],[8,"Packet"],[8,"MutablePacket"],[8,"FromPacket"],[8,"PacketSize"],[4,"PacketData"],[4,"MutPacketData"],[8,"PrimitiveValues"],[4,"TransportProtocol"],[4,"TransportChannelType"],[3,"TransportSender"],[3,"TransportReceiver"],[3,"Config"],[3,"EthernetPacket"],[3,"MutableEthernetPacket"],[3,"EthernetIterable"],[3,"GrePacket"],[3,"MutableGrePacket"],[3,"GreIterable"],[3,"U16BEPacket"],[3,"MutableU16BEPacket"],[3,"U16BEIterable"],[3,"U16BE"],[3,"U32BEPacket"],[3,"MutableU32BEPacket"],[3,"U32BEIterable"],[3,"U32BE"],[3,"Ipv4Packet"],[3,"MutableIpv4Packet"],[3,"Ipv4Iterable"],[3,"Ipv4OptionPacket"],[3,"MutableIpv4OptionPacket"],[3,"Ipv4OptionIterable"],[3,"Ipv4Option"],[3,"Ipv6Packet"],[3,"MutableIpv6Packet"],[3,"Ipv6Iterable"],[3,"ExtensionPacket"],[3,"MutableExtensionPacket"],[3,"ExtensionIterable"],[3,"RoutingPacket"],[3,"MutableRoutingPacket"],[3,"RoutingIterable"],[3,"FragmentPacket"],[3,"MutableFragmentPacket"],[3,"FragmentIterable"],[3,"UdpPacket"],[3,"MutableUdpPacket"],[3,"UdpIterable"],[3,"TcpPacket"],[3,"MutableTcpPacket"],[3,"TcpIterable"],[3,"TcpOptionPacket"],[3,"MutableTcpOptionPacket"],[3,"TcpOptionIterable"],[3,"TcpOption"],[3,"ArpPacket"],[3,"MutableArpPacket"],[3,"ArpIterable"],[3,"IcmpPacket"],[3,"MutableIcmpPacket"],[3,"IcmpIterable"],[3,"EchoReplyPacket"],[3,"MutableEchoReplyPacket"],[3,"EchoReplyIterable"],[3,"EchoRequestPacket"],[3,"MutableEchoRequestPacket"],[3,"EchoRequestIterable"],[3,"DestinationUnreachablePacket"],[3,"MutableDestinationUnreachablePacket"],[3,"DestinationUnreachableIterable"],[3,"TimeExceededPacket"],[3,"MutableTimeExceededPacket"],[3,"TimeExceededIterable"],[3,"Icmpv6Packet"],[3,"MutableIcmpv6Packet"],[3,"Icmpv6Iterable"],[3,"NdpOptionPacket"],[3,"MutableNdpOptionPacket"],[3,"NdpOptionIterable"],[3,"RouterSolicitPacket"],[3,"MutableRouterSolicitPacket"],[3,"RouterSolicitIterable"],[3,"RouterAdvertPacket"],[3,"MutableRouterAdvertPacket"],[3,"RouterAdvertIterable"],[3,"NeighborSolicitPacket"],[3,"MutableNeighborSolicitPacket"],[3,"NeighborSolicitIterable"],[3,"NeighborAdvertPacket"],[3,"MutableNeighborAdvertPacket"],[3,"NeighborAdvertIterable"],[3,"RedirectPacket"],[3,"MutableRedirectPacket"],[3,"RedirectIterable"],[3,"VlanPacket"],[3,"MutableVlanPacket"],[3,"VlanIterable"],[3,"Config"],[3,"Ipv4TransportChannelIterator"],[3,"UdpTransportChannelIterator"],[3,"IcmpTransportChannelIterator"],[3,"Icmpv6TransportChannelIterator"],[3,"TcpTransportChannelIterator"]]};
searchIndex["pnet_base"] = {"doc":"","i":[[3,"MacAddr","pnet_base","A MAC address",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[12,"2","","",0,null],[12,"3","","",0,null],[12,"4","","",0,null],[12,"5","","",0,null],[4,"ParseMacAddrErr","","Represents an error which occurred whilst parsing a MAC…",null,null],[13,"TooManyComponents","","The MAC address has too many components, eg.…",1,null],[13,"TooFewComponents","","The MAC address has too few components, eg. 00:11",1,null],[13,"InvalidComponent","","One of the components contains an invalid value, eg.…",1,null],[11,"new","","Construct a new MacAddr",0,[[["u8"]],["macaddr"]]],[11,"zero","","Construct an all-zero MacAddr",0,[[],["macaddr"]]],[11,"broadcast","","Construct a broadcast MacAddr",0,[[],["macaddr"]]],[11,"is_zero","","Returns true if the MacAddr is an all-zero address",0,[[["self"]],["bool"]]],[11,"is_universal","","Returns true if the MacAddr is a universally administered…",0,[[["self"]],["bool"]]],[11,"is_local","","Returns true if the MacAddr is a locally administered…",0,[[["self"]],["bool"]]],[11,"is_unicast","","Returns true if the MacAddr is a unicast address",0,[[["self"]],["bool"]]],[11,"is_multicast","","Returns true if the MacAddr is a multicast address",0,[[["self"]],["bool"]]],[11,"is_broadcast","","Returns true if the MacAddr is a broadcast address",0,[[["self"]],["bool"]]],[17,"ETHER_ADDR_LEN","","The number of bytes in an ethernet (MAC) address.",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[],["macaddr"]]],[11,"clone","","",0,[[["self"]],["macaddr"]]],[11,"clone","","",1,[[["self"]],["parsemacaddrerr"]]],[11,"default","","",0,[[],["macaddr"]]],[11,"cmp","","",0,[[["self"],["macaddr"]],["ordering"]]],[11,"eq","","",0,[[["self"],["macaddr"]],["bool"]]],[11,"ne","","",0,[[["self"],["macaddr"]],["bool"]]],[11,"eq","","",0,[[["self"]],["bool"]]],[11,"eq","","",1,[[["parsemacaddrerr"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["macaddr"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["self"],["macaddr"]],["bool"]]],[11,"le","","",0,[[["self"],["macaddr"]],["bool"]]],[11,"gt","","",0,[[["self"],["macaddr"]],["bool"]]],[11,"ge","","",0,[[["self"],["macaddr"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"from_str","","",0,[[["str"]],[["result",["macaddr","parsemacaddrerr"]],["macaddr"],["parsemacaddrerr"]]]],[11,"description","","",1,[[["self"]],["str"]]]],"p":[[3,"MacAddr"],[4,"ParseMacAddrErr"]]};
searchIndex["pnet_datalink"] = {"doc":"Support for sending and receiving data link layer packets.","i":[[3,"MacAddr","pnet_datalink","A MAC address",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[12,"2","","",0,null],[12,"3","","",0,null],[12,"4","","",0,null],[12,"5","","",0,null],[4,"ParseMacAddrErr","","Represents an error which occurred whilst parsing a MAC…",null,null],[13,"TooManyComponents","","The MAC address has too many components, eg.…",1,null],[13,"TooFewComponents","","The MAC address has too few components, eg. 00:11",1,null],[13,"InvalidComponent","","One of the components contains an invalid value, eg.…",1,null],[3,"FanoutOption","","Fanout settings (Linux only).",null,null],[12,"group_id","","",2,null],[12,"fanout_type","","",2,null],[12,"defrag","","",2,null],[12,"rollover","","",2,null],[3,"Config","","A generic configuration type, encapsulating all options…",null,null],[12,"write_buffer_size","","The size of buffer to use when writing packets. Defaults…",3,null],[12,"read_buffer_size","","The size of buffer to use when reading packets. Defaults…",3,null],[12,"read_timeout","","Linux/BPF/Netmap only: The read timeout. Defaults to None.",3,null],[12,"write_timeout","","Linux/BPF/Netmap only: The write timeout. Defaults to None.",3,null],[12,"channel_type","","Linux only: Specifies whether to read packets at the…",3,null],[12,"bpf_fd_attempts","","BPF/OS X only: The number of /dev/bpf* file descriptors to…",3,null],[12,"linux_fanout","","",3,null],[3,"NetworkInterface","","Represents a network interface and its associated addresses.",null,null],[12,"name","","The name of the interface.",4,null],[12,"index","","The interface index (operating system specific).",4,null],[12,"mac","","A MAC address for the interface.",4,null],[12,"ips","","IP addresses and netmasks for the interface.",4,null],[12,"flags","","Operating system specific flags for the interface.",4,null],[4,"ChannelType","","Type of data link channel to present (Linux only).",null,null],[13,"Layer2","","Send and receive layer 2 packets directly, including…",5,null],[13,"Layer3","","Send and receive \"cooked\" packets - send and receive…",5,null],[4,"Channel","","A channel for sending and receiving at the data link layer.",null,null],[13,"Ethernet","","A datalink channel which sends and receives Ethernet…",6,null],[13,"PleaseIncludeACatchAllVariantWhenMatchingOnThisEnum","","This variant should never be used.",6,null],[4,"FanoutType","","Socket fanout type (Linux only).",null,null],[13,"HASH","","",7,null],[13,"LB","","",7,null],[13,"CPU","","",7,null],[13,"ROLLOVER","","",7,null],[13,"RND","","",7,null],[13,"QM","","",7,null],[13,"CBPF","","",7,null],[13,"EBPF","","",7,null],[5,"channel","","Create a new datalink channel for sending and receiving…",null,[[["networkinterface"],["config"]],[["channel"],["result",["channel"]]]]],[5,"interfaces","","Get a list of available network interfaces for the current…",null,[[],[["vec",["networkinterface"]],["networkinterface"]]]],[0,"linux","","Support for sending and receiving data link layer packets…",null,null],[3,"Config","pnet_datalink::linux","Configuration for the Linux datalink backend.",null,null],[12,"write_buffer_size","","The size of buffer to use when writing packets. Defaults…",8,null],[12,"read_buffer_size","","The size of buffer to use when reading packets. Defaults…",8,null],[12,"read_timeout","","The read timeout. Defaults to None.",8,null],[12,"write_timeout","","The write timeout. Defaults to None.",8,null],[12,"channel_type","","Specifies whether to read packets at the datalink layer or…",8,null],[12,"fanout","","Specifies packet fanout option, if desired. Defaults to…",8,null],[5,"channel","","Create a data link channel using the Linux's `AF_PACKET`…",null,[[["networkinterface"],["config"]],[["result",["channel"]],["channel"]]]],[5,"interfaces","","Get a list of available network interfaces for the current…",null,[[],[["vec",["networkinterface"]],["networkinterface"]]]],[0,"dummy","pnet_datalink","Support for sending and receiving data link layer packets…",null,null],[3,"Config","pnet_datalink::dummy","Configuration for the dummy datalink backend. Contains…",null,null],[5,"channel","","Create a data link channel backed by FIFO queues. Useful…",null,[[["config"],["networkinterface"]],[["result",["channel"]],["channel"]]]],[5,"interfaces","","Get three fake interfaces generated with…",null,[[],[["vec",["networkinterface"]],["networkinterface"]]]],[5,"dummy_interface","","Generates a fake `NetworkInterface`. The name of the…",null,[[["u8"]],["networkinterface"]]],[11,"new","","Creates a new `Config` with the given channels as the…",9,[[["result",["box"]],["box"],["receiver",["result"]],["sender",["box"]]],["config"]]],[11,"inject_handle","","Get the `Sender` handle that can inject packets in the…",9,[[["self"]],[["option",["sender"]],["sender",["result"]]]]],[11,"read_handle","","Get the `Receiver` handle where packets sent to the fake…",9,[[["self"]],[["receiver",["box"]],["option",["receiver"]]]]],[6,"EtherType","pnet_datalink","Type alias for an `EtherType`.",null,null],[8,"DataLinkSender","","Trait to enable sending `$packet` packets.",null,null],[10,"build_and_send","","Create and send a number of packets.",10,[[["self"],["usize"],["fnmut"]],[["result"],["option",["result"]]]]],[10,"send_to","","Send a packet.",10,[[["option",["networkinterface"]],["networkinterface"],["self"]],[["result"],["option",["result"]]]]],[8,"DataLinkReceiver","","Structure for receiving packets at the data link layer.…",null,null],[10,"next","","Get the next ethernet frame in the channel.",11,[[["self"]],["result"]]],[11,"mac_address","","Retrieve the MAC address associated with the interface.",4,[[["self"]],["macaddr"]]],[11,"is_up","","",4,[[["self"]],["bool"]]],[11,"is_broadcast","","",4,[[["self"]],["bool"]]],[11,"is_loopback","","Is the interface a loopback interface?",4,[[["self"]],["bool"]]],[11,"is_point_to_point","","",4,[[["self"]],["bool"]]],[11,"is_multicast","","",4,[[["self"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","pnet_datalink::linux","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","pnet_datalink::dummy","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"fmt","pnet_datalink","",1,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",1,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"cmp","","",0,[[["macaddr"],["self"]],["ordering"]]],[11,"clone","","",0,[[["self"]],["macaddr"]]],[11,"clone","","",1,[[["self"]],["parsemacaddrerr"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"eq","","",1,[[["parsemacaddrerr"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"]],["bool"]]],[11,"eq","","",0,[[["macaddr"],["self"]],["bool"]]],[11,"ne","","",0,[[["macaddr"],["self"]],["bool"]]],[11,"from_str","","",0,[[["str"]],[["parsemacaddrerr"],["result",["macaddr","parsemacaddrerr"]],["macaddr"]]]],[11,"from","","",0,[[],["macaddr"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"partial_cmp","","",0,[[["macaddr"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",0,[[["macaddr"],["self"]],["bool"]]],[11,"le","","",0,[[["macaddr"],["self"]],["bool"]]],[11,"gt","","",0,[[["macaddr"],["self"]],["bool"]]],[11,"ge","","",0,[[["macaddr"],["self"]],["bool"]]],[11,"default","","",0,[[],["macaddr"]]],[11,"from","pnet_datalink::linux","",8,[[["config"]],["config"]]],[11,"from","pnet_datalink::dummy","Will not use the `super::Config`. This will simply call…",9,[[["config"]],["config"]]],[11,"clone","pnet_datalink::linux","",8,[[["self"]],["config"]]],[11,"clone","pnet_datalink","",5,[[["self"]],["channeltype"]]],[11,"clone","","",7,[[["self"]],["fanouttype"]]],[11,"clone","","",2,[[["self"]],["fanoutoption"]]],[11,"clone","","",3,[[["self"]],["config"]]],[11,"clone","","",4,[[["self"]],["networkinterface"]]],[11,"default","pnet_datalink::linux","",8,[[],["config"]]],[11,"default","pnet_datalink::dummy","Creates a default config with one input and one output…",9,[[],["config"]]],[11,"default","pnet_datalink","",3,[[],["config"]]],[11,"eq","pnet_datalink::linux","",8,[[["config"],["self"]],["bool"]]],[11,"ne","","",8,[[["config"],["self"]],["bool"]]],[11,"eq","pnet_datalink","",5,[[["self"],["channeltype"]],["bool"]]],[11,"ne","","",5,[[["self"],["channeltype"]],["bool"]]],[11,"eq","","",7,[[["fanouttype"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["fanoutoption"]],["bool"]]],[11,"ne","","",2,[[["self"],["fanoutoption"]],["bool"]]],[11,"eq","","",3,[[["config"],["self"]],["bool"]]],[11,"ne","","",3,[[["config"],["self"]],["bool"]]],[11,"eq","","",4,[[["networkinterface"],["self"]],["bool"]]],[11,"ne","","",4,[[["networkinterface"],["self"]],["bool"]]],[11,"fmt","pnet_datalink::linux","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","pnet_datalink::dummy","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","pnet_datalink","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","pnet_datalink::linux","",8,[[["self"],["__h"]]]],[11,"hash","pnet_datalink","",5,[[["self"],["__h"]]]],[11,"hash","","",7,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"new","","Construct a new MacAddr",0,[[["u8"]],["macaddr"]]],[11,"zero","","Construct an all-zero MacAddr",0,[[],["macaddr"]]],[11,"broadcast","","Construct a broadcast MacAddr",0,[[],["macaddr"]]],[11,"is_zero","","Returns true if the MacAddr is an all-zero address",0,[[["self"]],["bool"]]],[11,"is_universal","","Returns true if the MacAddr is a universally administered…",0,[[["self"]],["bool"]]],[11,"is_local","","Returns true if the MacAddr is a locally administered…",0,[[["self"]],["bool"]]],[11,"is_unicast","","Returns true if the MacAddr is a unicast address",0,[[["self"]],["bool"]]],[11,"is_multicast","","Returns true if the MacAddr is a multicast address",0,[[["self"]],["bool"]]],[11,"is_broadcast","","Returns true if the MacAddr is a broadcast address",0,[[["self"]],["bool"]]]],"p":[[3,"MacAddr"],[4,"ParseMacAddrErr"],[3,"FanoutOption"],[3,"Config"],[3,"NetworkInterface"],[4,"ChannelType"],[4,"Channel"],[4,"FanoutType"],[3,"Config"],[3,"Config"],[8,"DataLinkSender"],[8,"DataLinkReceiver"]]};
searchIndex["pnet_macros_support"] = {"doc":"Support library for `libpnet_macros`.","i":[[0,"types","pnet_macros_support","Provides type aliases for various primitive integer types",null,null],[6,"u1","pnet_macros_support::types","Represents an unsigned, 1-bit integer.",null,null],[6,"u2","","Represents an unsigned, 2-bit integer.",null,null],[6,"u3","","Represents an unsigned, 3-bit integer.",null,null],[6,"u4","","Represents an unsigned, 4-bit integer.",null,null],[6,"u5","","Represents an unsigned, 5-bit integer.",null,null],[6,"u6","","Represents an unsigned, 6-bit integer.",null,null],[6,"u7","","Represents an unsigned, 7-bit integer.",null,null],[6,"u9be","","Represents an unsigned 9-bit integer. libpnet…",null,null],[6,"u10be","","Represents an unsigned 10-bit integer. libpnet…",null,null],[6,"u11be","","Represents an unsigned 11-bit integer. libpnet…",null,null],[6,"u12be","","Represents an unsigned 12-bit integer. libpnet…",null,null],[6,"u13be","","Represents an unsigned 13-bit integer. libpnet…",null,null],[6,"u14be","","Represents an unsigned 14-bit integer. libpnet…",null,null],[6,"u15be","","Represents an unsigned 15-bit integer. libpnet…",null,null],[6,"u16be","","Represents an unsigned 16-bit integer. libpnet…",null,null],[6,"u17be","","Represents an unsigned 17-bit integer. libpnet…",null,null],[6,"u18be","","Represents an unsigned 18-bit integer. libpnet…",null,null],[6,"u19be","","Represents an unsigned 19-bit integer. libpnet…",null,null],[6,"u20be","","Represents an unsigned 20-bit integer. libpnet…",null,null],[6,"u21be","","Represents an unsigned 21-bit integer. libpnet…",null,null],[6,"u22be","","Represents an unsigned 22-bit integer. libpnet…",null,null],[6,"u23be","","Represents an unsigned 23-bit integer. libpnet…",null,null],[6,"u24be","","Represents an unsigned 24-bit integer. libpnet…",null,null],[6,"u25be","","Represents an unsigned 25-bit integer. libpnet…",null,null],[6,"u26be","","Represents an unsigned 26-bit integer. libpnet…",null,null],[6,"u27be","","Represents an unsigned 27-bit integer. libpnet…",null,null],[6,"u28be","","Represents an unsigned 28-bit integer. libpnet…",null,null],[6,"u29be","","Represents an unsigned 29-bit integer. libpnet…",null,null],[6,"u30be","","Represents an unsigned 30-bit integer. libpnet…",null,null],[6,"u31be","","Represents an unsigned 31-bit integer. libpnet…",null,null],[6,"u32be","","Represents an unsigned 32-bit integer. libpnet…",null,null],[6,"u33be","","Represents an unsigned 33-bit integer. libpnet…",null,null],[6,"u34be","","Represents an unsigned 34-bit integer. libpnet…",null,null],[6,"u35be","","Represents an unsigned 35-bit integer. libpnet…",null,null],[6,"u36be","","Represents an unsigned 36-bit integer. libpnet…",null,null],[6,"u37be","","Represents an unsigned 37-bit integer. libpnet…",null,null],[6,"u38be","","Represents an unsigned 38-bit integer. libpnet…",null,null],[6,"u39be","","Represents an unsigned 39-bit integer. libpnet…",null,null],[6,"u40be","","Represents an unsigned 40-bit integer. libpnet…",null,null],[6,"u41be","","Represents an unsigned 41-bit integer. libpnet…",null,null],[6,"u42be","","Represents an unsigned 42-bit integer. libpnet…",null,null],[6,"u43be","","Represents an unsigned 43-bit integer. libpnet…",null,null],[6,"u44be","","Represents an unsigned 44-bit integer. libpnet…",null,null],[6,"u45be","","Represents an unsigned 45-bit integer. libpnet…",null,null],[6,"u46be","","Represents an unsigned 46-bit integer. libpnet…",null,null],[6,"u47be","","Represents an unsigned 47-bit integer. libpnet…",null,null],[6,"u48be","","Represents an unsigned 48-bit integer. libpnet…",null,null],[6,"u49be","","Represents an unsigned 49-bit integer. libpnet…",null,null],[6,"u50be","","Represents an unsigned 50-bit integer. libpnet…",null,null],[6,"u51be","","Represents an unsigned 51-bit integer. libpnet…",null,null],[6,"u52be","","Represents an unsigned 52-bit integer. libpnet…",null,null],[6,"u53be","","Represents an unsigned 53-bit integer. libpnet…",null,null],[6,"u54be","","Represents an unsigned 54-bit integer. libpnet…",null,null],[6,"u55be","","Represents an unsigned 55-bit integer. libpnet…",null,null],[6,"u56be","","Represents an unsigned 56-bit integer. libpnet…",null,null],[6,"u57be","","Represents an unsigned 57-bit integer. libpnet…",null,null],[6,"u58be","","Represents an unsigned 58-bit integer. libpnet…",null,null],[6,"u59be","","Represents an unsigned 59-bit integer. libpnet…",null,null],[6,"u60be","","Represents an unsigned 60-bit integer. libpnet…",null,null],[6,"u61be","","Represents an unsigned 61-bit integer. libpnet…",null,null],[6,"u62be","","Represents an unsigned 62-bit integer. libpnet…",null,null],[6,"u63be","","Represents an unsigned 63-bit integer. libpnet…",null,null],[6,"u64be","","Represents an unsigned 64-bit integer. libpnet…",null,null],[6,"u9le","","Represents an unsigned 9-bit integer. libpnet…",null,null],[6,"u10le","","Represents an unsigned 10-bit integer. libpnet…",null,null],[6,"u11le","","Represents an unsigned 11-bit integer. libpnet…",null,null],[6,"u12le","","Represents an unsigned 12-bit integer. libpnet…",null,null],[6,"u13le","","Represents an unsigned 13-bit integer. libpnet…",null,null],[6,"u14le","","Represents an unsigned 14-bit integer. libpnet…",null,null],[6,"u15le","","Represents an unsigned 15-bit integer. libpnet…",null,null],[6,"u16le","","Represents an unsigned 16-bit integer. libpnet…",null,null],[6,"u17le","","Represents an unsigned 17-bit integer. libpnet…",null,null],[6,"u18le","","Represents an unsigned 18-bit integer. libpnet…",null,null],[6,"u19le","","Represents an unsigned 19-bit integer. libpnet…",null,null],[6,"u20le","","Represents an unsigned 20-bit integer. libpnet…",null,null],[6,"u21le","","Represents an unsigned 21-bit integer. libpnet…",null,null],[6,"u22le","","Represents an unsigned 22-bit integer. libpnet…",null,null],[6,"u23le","","Represents an unsigned 23-bit integer. libpnet…",null,null],[6,"u24le","","Represents an unsigned 24-bit integer. libpnet…",null,null],[6,"u25le","","Represents an unsigned 25-bit integer. libpnet…",null,null],[6,"u26le","","Represents an unsigned 26-bit integer. libpnet…",null,null],[6,"u27le","","Represents an unsigned 27-bit integer. libpnet…",null,null],[6,"u28le","","Represents an unsigned 28-bit integer. libpnet…",null,null],[6,"u29le","","Represents an unsigned 29-bit integer. libpnet…",null,null],[6,"u30le","","Represents an unsigned 30-bit integer. libpnet…",null,null],[6,"u31le","","Represents an unsigned 31-bit integer. libpnet…",null,null],[6,"u32le","","Represents an unsigned 32-bit integer. libpnet…",null,null],[6,"u33le","","Represents an unsigned 33-bit integer. libpnet…",null,null],[6,"u34le","","Represents an unsigned 34-bit integer. libpnet…",null,null],[6,"u35le","","Represents an unsigned 35-bit integer. libpnet…",null,null],[6,"u36le","","Represents an unsigned 36-bit integer. libpnet…",null,null],[6,"u37le","","Represents an unsigned 37-bit integer. libpnet…",null,null],[6,"u38le","","Represents an unsigned 38-bit integer. libpnet…",null,null],[6,"u39le","","Represents an unsigned 39-bit integer. libpnet…",null,null],[6,"u40le","","Represents an unsigned 40-bit integer. libpnet…",null,null],[6,"u41le","","Represents an unsigned 41-bit integer. libpnet…",null,null],[6,"u42le","","Represents an unsigned 42-bit integer. libpnet…",null,null],[6,"u43le","","Represents an unsigned 43-bit integer. libpnet…",null,null],[6,"u44le","","Represents an unsigned 44-bit integer. libpnet…",null,null],[6,"u45le","","Represents an unsigned 45-bit integer. libpnet…",null,null],[6,"u46le","","Represents an unsigned 46-bit integer. libpnet…",null,null],[6,"u47le","","Represents an unsigned 47-bit integer. libpnet…",null,null],[6,"u48le","","Represents an unsigned 48-bit integer. libpnet…",null,null],[6,"u49le","","Represents an unsigned 49-bit integer. libpnet…",null,null],[6,"u50le","","Represents an unsigned 50-bit integer. libpnet…",null,null],[6,"u51le","","Represents an unsigned 51-bit integer. libpnet…",null,null],[6,"u52le","","Represents an unsigned 52-bit integer. libpnet…",null,null],[6,"u53le","","Represents an unsigned 53-bit integer. libpnet…",null,null],[6,"u54le","","Represents an unsigned 54-bit integer. libpnet…",null,null],[6,"u55le","","Represents an unsigned 55-bit integer. libpnet…",null,null],[6,"u56le","","Represents an unsigned 56-bit integer. libpnet…",null,null],[6,"u57le","","Represents an unsigned 57-bit integer. libpnet…",null,null],[6,"u58le","","Represents an unsigned 58-bit integer. libpnet…",null,null],[6,"u59le","","Represents an unsigned 59-bit integer. libpnet…",null,null],[6,"u60le","","Represents an unsigned 60-bit integer. libpnet…",null,null],[6,"u61le","","Represents an unsigned 61-bit integer. libpnet…",null,null],[6,"u62le","","Represents an unsigned 62-bit integer. libpnet…",null,null],[6,"u63le","","Represents an unsigned 63-bit integer. libpnet…",null,null],[6,"u64le","","Represents an unsigned 64-bit integer. libpnet…",null,null],[6,"u9he","","Represents an unsigned 9-bit integer in host endianness.",null,null],[6,"u10he","","Represents an unsigned 10-bit integer in host endianness.",null,null],[6,"u11he","","Represents an unsigned 11-bit integer in host endianness.",null,null],[6,"u12he","","Represents an unsigned 12-bit integer in host endianness.",null,null],[6,"u13he","","Represents an unsigned 13-bit integer in host endianness.",null,null],[6,"u14he","","Represents an unsigned 14-bit integer in host endianness.",null,null],[6,"u15he","","Represents an unsigned 15-bit integer in host endianness.",null,null],[6,"u16he","","Represents an unsigned 16-bit integer in host endianness.",null,null],[6,"u17he","","Represents an unsigned 17-bit integer in host endianness.",null,null],[6,"u18he","","Represents an unsigned 18-bit integer in host endianness.",null,null],[6,"u19he","","Represents an unsigned 19-bit integer in host endianness.",null,null],[6,"u20he","","Represents an unsigned 20-bit integer in host endianness.",null,null],[6,"u21he","","Represents an unsigned 21-bit integer in host endianness.",null,null],[6,"u22he","","Represents an unsigned 22-bit integer in host endianness.",null,null],[6,"u23he","","Represents an unsigned 23-bit integer in host endianness.",null,null],[6,"u24he","","Represents an unsigned 24-bit integer in host endianness.",null,null],[6,"u25he","","Represents an unsigned 25-bit integer in host endianness.",null,null],[6,"u26he","","Represents an unsigned 26-bit integer in host endianness.",null,null],[6,"u27he","","Represents an unsigned 27-bit integer in host endianness.",null,null],[6,"u28he","","Represents an unsigned 28-bit integer in host endianness.",null,null],[6,"u29he","","Represents an unsigned 29-bit integer in host endianness.",null,null],[6,"u30he","","Represents an unsigned 30-bit integer in host endianness.",null,null],[6,"u31he","","Represents an unsigned 31-bit integer in host endianness.",null,null],[6,"u32he","","Represents an unsigned 32-bit integer in host endianness.",null,null],[6,"u33he","","Represents an unsigned 33-bit integer in host endianness.",null,null],[6,"u34he","","Represents an unsigned 34-bit integer in host endianness.",null,null],[6,"u35he","","Represents an unsigned 35-bit integer in host endianness.",null,null],[6,"u36he","","Represents an unsigned 36-bit integer in host endianness.",null,null],[6,"u37he","","Represents an unsigned 37-bit integer in host endianness.",null,null],[6,"u38he","","Represents an unsigned 38-bit integer in host endianness.",null,null],[6,"u39he","","Represents an unsigned 39-bit integer in host endianness.",null,null],[6,"u40he","","Represents an unsigned 40-bit integer in host endianness.",null,null],[6,"u41he","","Represents an unsigned 41-bit integer in host endianness.",null,null],[6,"u42he","","Represents an unsigned 42-bit integer in host endianness.",null,null],[6,"u43he","","Represents an unsigned 43-bit integer in host endianness.",null,null],[6,"u44he","","Represents an unsigned 44-bit integer in host endianness.",null,null],[6,"u45he","","Represents an unsigned 45-bit integer in host endianness.",null,null],[6,"u46he","","Represents an unsigned 46-bit integer in host endianness.",null,null],[6,"u47he","","Represents an unsigned 47-bit integer in host endianness.",null,null],[6,"u48he","","Represents an unsigned 48-bit integer in host endianness.",null,null],[6,"u49he","","Represents an unsigned 49-bit integer in host endianness.",null,null],[6,"u50he","","Represents an unsigned 50-bit integer in host endianness.",null,null],[6,"u51he","","Represents an unsigned 51-bit integer in host endianness.",null,null],[6,"u52he","","Represents an unsigned 52-bit integer in host endianness.",null,null],[6,"u53he","","Represents an unsigned 53-bit integer in host endianness.",null,null],[6,"u54he","","Represents an unsigned 54-bit integer in host endianness.",null,null],[6,"u55he","","Represents an unsigned 55-bit integer in host endianness.",null,null],[6,"u56he","","Represents an unsigned 56-bit integer in host endianness.",null,null],[6,"u57he","","Represents an unsigned 57-bit integer in host endianness.",null,null],[6,"u58he","","Represents an unsigned 58-bit integer in host endianness.",null,null],[6,"u59he","","Represents an unsigned 59-bit integer in host endianness.",null,null],[6,"u60he","","Represents an unsigned 60-bit integer in host endianness.",null,null],[6,"u61he","","Represents an unsigned 61-bit integer in host endianness.",null,null],[6,"u62he","","Represents an unsigned 62-bit integer in host endianness.",null,null],[6,"u63he","","Represents an unsigned 63-bit integer in host endianness.",null,null],[6,"u64he","","Represents an unsigned 64-bit integer in host endianness.",null,null],[0,"packet","pnet_macros_support","Packet helpers for `pnet_macros`.",null,null],[4,"PacketData","pnet_macros_support::packet","Packet data.",null,null],[13,"Owned","","A packet owns its contents.",0,null],[13,"Borrowed","","A packet borrows its contents.",0,null],[4,"MutPacketData","","Mutable packet data.",null,null],[13,"Owned","","Owned mutable packet data.",1,null],[13,"Borrowed","","Borrowed mutable packet data.",1,null],[8,"Packet","","Represents a generic network packet.",null,null],[10,"packet","","Retrieve the underlying buffer for the packet.",2,[[["self"]]]],[10,"payload","","Retrieve the payload for the packet.",2,[[["self"]]]],[8,"MutablePacket","","Represents a generic, mutable, network packet.",null,null],[10,"packet_mut","","Retreive the underlying, mutable, buffer for the packet.",3,[[["self"]]]],[10,"payload_mut","","Retreive the mutable payload for the packet.",3,[[["self"]]]],[11,"clone_from","","Initialize this packet by cloning another.",3,[[["self"],["t"]]]],[8,"FromPacket","","Used to convert on-the-wire packets to their #[packet]…",null,null],[16,"T","","The type of the packet to convert from.",4,null],[10,"from_packet","","Converts a wire-format packet to #[packet] struct format.",4,[[["self"]]]],[8,"PacketSize","","Used to find the calculated size of the packet. This is…",null,null],[10,"packet_size","","Get the calculated size of the packet.",5,[[["self"]],["usize"]]],[8,"PrimitiveValues","","Used to convert a type to primitive values representing it.",null,null],[16,"T","","A tuple of types, to represent the current value.",6,null],[10,"to_primitive_values","","Convert a value to primitive types representing it.",6,[[["self"]]]],[11,"as_slice","","Get a slice of the packet data.",0,[[["self"]]]],[11,"to_immutable","","No-op - returns `self`.",0,[[],["packetdata"]]],[11,"len","","A length of the packet data.",0,[[["self"]],["usize"]]],[11,"as_slice","","Get packet data as a slice.",1,[[["self"]]]],[11,"as_mut_slice","","Get packet data as a mutable slice.",1,[[["self"]]]],[11,"to_immutable","","Get an immutable version of packet data.",1,[[],["packetdata"]]],[11,"len","","Get a length of data in the packet.",1,[[["self"]],["usize"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["packetdata"]],["bool"]]],[11,"ne","","",0,[[["self"],["packetdata"]],["bool"]]],[11,"eq","","",1,[[["self"],["mutpacketdata"]],["bool"]]],[11,"ne","","",1,[[["self"],["mutpacketdata"]],["bool"]]],[11,"index","","",0,[[["self"],["usize"]],["u8"]]],[11,"index","","",0,[[["range",["usize"]],["self"],["usize"]]]],[11,"index","","",0,[[["rangeto",["usize"]],["self"],["usize"]]]],[11,"index","","",0,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index","","",0,[[["rangefull"],["self"]]]],[11,"index","","",1,[[["self"],["usize"]],["u8"]]],[11,"index","","",1,[[["range",["usize"]],["self"],["usize"]]]],[11,"index","","",1,[[["rangeto",["usize"]],["self"],["usize"]]]],[11,"index","","",1,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index","","",1,[[["rangefull"],["self"]]]],[11,"index_mut","","",1,[[["self"],["usize"]],["u8"]]],[11,"index_mut","","",1,[[["self"],["usize"],["range",["usize"]]]]],[11,"index_mut","","",1,[[["self"],["usize"],["rangeto",["usize"]]]]],[11,"index_mut","","",1,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index_mut","","",1,[[["self"],["rangefull"]]]]],"p":[[4,"PacketData"],[4,"MutPacketData"],[8,"Packet"],[8,"MutablePacket"],[8,"FromPacket"],[8,"PacketSize"],[8,"PrimitiveValues"]]};
searchIndex["pnet_packet"] = {"doc":"Provides interfaces for interacting with packets and…","i":[[8,"Packet","pnet_packet","Represents a generic network packet.",null,null],[10,"packet","","Retrieve the underlying buffer for the packet.",0,[[["self"]]]],[10,"payload","","Retrieve the payload for the packet.",0,[[["self"]]]],[8,"MutablePacket","","Represents a generic, mutable, network packet.",null,null],[10,"packet_mut","","Retreive the underlying, mutable, buffer for the packet.",1,[[["self"]]]],[10,"payload_mut","","Retreive the mutable payload for the packet.",1,[[["self"]]]],[11,"clone_from","","Initialize this packet by cloning another.",1,[[["self"],["t"]]]],[8,"FromPacket","","Used to convert on-the-wire packets to their #[packet]…",null,null],[16,"T","","The type of the packet to convert from.",2,null],[10,"from_packet","","Converts a wire-format packet to #[packet] struct format.",2,[[["self"]]]],[8,"PacketSize","","Used to find the calculated size of the packet. This is…",null,null],[10,"packet_size","","Get the calculated size of the packet.",3,[[["self"]],["usize"]]],[4,"PacketData","","Packet data.",null,null],[13,"Owned","","A packet owns its contents.",4,null],[13,"Borrowed","","A packet borrows its contents.",4,null],[4,"MutPacketData","","Mutable packet data.",null,null],[13,"Owned","","Owned mutable packet data.",5,null],[13,"Borrowed","","Borrowed mutable packet data.",5,null],[8,"PrimitiveValues","","Used to convert a type to primitive values representing it.",null,null],[16,"T","","A tuple of types, to represent the current value.",6,null],[10,"to_primitive_values","","Convert a value to primitive types representing it.",6,[[["self"]]]],[0,"ethernet","","An ethernet packet abstraction.",null,null],[3,"EthernetPacket","pnet_packet::ethernet","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableEthernetPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"EthernetIterable","","Used to iterate over a slice of `EthernetPacket`s",null,null],[3,"Ethernet","","Represents an Ethernet packet.",null,null],[12,"destination","","",7,null],[12,"source","","",7,null],[12,"ethertype","","",7,null],[12,"payload","","",7,null],[3,"EtherType","","Represents the `Ethernet::ethertype` field.",null,null],[12,"0","","",8,null],[0,"EtherTypes","","`EtherTypes` are defined at:…",null,null],[17,"Ipv4","pnet_packet::ethernet::EtherTypes","Internet Protocol version 4 (IPv4) [RFC7042].",null,null],[17,"Arp","","Address Resolution Protocol (ARP) [RFC7042].",null,null],[17,"WakeOnLan","","Wake on Lan.",null,null],[17,"Trill","","IETF TRILL Protocol [IEEE].",null,null],[17,"DECnet","","DECnet Phase IV.",null,null],[17,"Rarp","","Reverse Address Resolution Protocol (RARP) [RFC903].",null,null],[17,"AppleTalk","","AppleTalk - EtherTalk [Apple].",null,null],[17,"Aarp","","AppleTalk Address Resolution Protocol (AARP) [Apple].",null,null],[17,"Ipx","","IPX [Xerox].",null,null],[17,"Qnx","","QNX Qnet [QNX Software Systems].",null,null],[17,"Ipv6","","Internet Protocol version 6 (IPv6) [RFC7042].",null,null],[17,"FlowControl","","Ethernet Flow Control [IEEE 802.3x].",null,null],[17,"CobraNet","","CobraNet [CobraNet].",null,null],[17,"Mpls","","MPLS Unicast [RFC 3032].",null,null],[17,"MplsMcast","","MPLS Multicast [RFC 5332].",null,null],[17,"PppoeDiscovery","","PPPOE Discovery Stage [RFC 2516].",null,null],[17,"PppoeSession","","PPPoE Session Stage [RFC 2516].",null,null],[17,"Vlan","","VLAN-tagged frame (IEEE 802.1Q).",null,null],[17,"PBridge","","Provider Bridging [IEEE 802.1ad / IEEE 802.1aq].",null,null],[17,"Lldp","","Link Layer Discovery Protocol (LLDP) [IEEE 802.1AB].",null,null],[17,"Ptp","","Precision Time Protocol (PTP) over Ethernet [IEEE 1588].",null,null],[17,"Cfm","","CFM / Y.1731 [IEEE 802.1ag].",null,null],[17,"QinQ","","Q-in-Q Vlan Tagging [IEEE 802.1Q].",null,null],[11,"new","pnet_packet::ethernet","Constructs a new EthernetPacket. If the provided buffer is…",9,[[],[["option",["ethernetpacket"]],["ethernetpacket"]]]],[11,"owned","","Constructs a new EthernetPacket. If the provided buffer is…",9,[[["vec",["u8"]],["u8"]],[["option",["ethernetpacket"]],["ethernetpacket"]]]],[11,"to_immutable","","Maps from a EthernetPacket to a EthernetPacket",9,[[["self"]],["ethernetpacket"]]],[11,"consume_to_immutable","","Maps from a EthernetPacket to a EthernetPacket while…",9,[[],["ethernetpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",9,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Ethernet instance when converted…",9,[[["ethernet"]],["usize"]]],[11,"get_destination","","Get the value of the destination field",9,[[["self"]],["macaddr"]]],[11,"get_source","","Get the value of the source field",9,[[["self"]],["macaddr"]]],[11,"get_ethertype","","Get the value of the ethertype field",9,[[["self"]],["ethertype"]]],[11,"new","","Constructs a new MutableEthernetPacket. If the provided…",10,[[],[["option",["mutableethernetpacket"]],["mutableethernetpacket"]]]],[11,"owned","","Constructs a new MutableEthernetPacket. If the provided…",10,[[["vec",["u8"]],["u8"]],[["option",["mutableethernetpacket"]],["mutableethernetpacket"]]]],[11,"to_immutable","","Maps from a MutableEthernetPacket to a EthernetPacket",10,[[["self"]],["ethernetpacket"]]],[11,"consume_to_immutable","","Maps from a MutableEthernetPacket to a EthernetPacket…",10,[[],["ethernetpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",10,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Ethernet instance when converted…",10,[[["ethernet"]],["usize"]]],[11,"populate","","Populates a EthernetPacket using a Ethernet structure",10,[[["self"],["ethernet"]]]],[11,"get_destination","","Get the value of the destination field",10,[[["self"]],["macaddr"]]],[11,"get_source","","Get the value of the source field",10,[[["self"]],["macaddr"]]],[11,"get_ethertype","","Get the value of the ethertype field",10,[[["self"]],["ethertype"]]],[11,"set_destination","","Set the value of the destination field",10,[[["macaddr"],["self"]]]],[11,"set_source","","Set the value of the source field",10,[[["macaddr"],["self"]]]],[11,"set_ethertype","","Set the value of the ethertype field",10,[[["self"],["ethertype"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",10,[[["self"]]]],[11,"new","","Construct a new `EtherType` instance.",8,[[["u16"]],["ethertype"]]],[0,"gre","pnet_packet","Minimal GRE Packet implementation: suitable for inspection…",null,null],[3,"GrePacket","pnet_packet::gre","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableGrePacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"GreIterable","","Used to iterate over a slice of `GrePacket`s",null,null],[3,"Gre","","GRE (Generic Routing Encapsulation) Packet.",null,null],[12,"checksum_present","","",11,null],[12,"routing_present","","",11,null],[12,"key_present","","",11,null],[12,"sequence_present","","",11,null],[12,"strict_source_route","","",11,null],[12,"recursion_control","","",11,null],[12,"zero_flags","","",11,null],[12,"version","","",11,null],[12,"protocol_type","","",11,null],[12,"checksum","","",11,null],[12,"offset","","",11,null],[12,"key","","",11,null],[12,"sequence","","",11,null],[12,"routing","","",11,null],[12,"payload","","",11,null],[3,"U16BEPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableU16BEPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"U16BEIterable","","Used to iterate over a slice of `U16BEPacket`s",null,null],[3,"U16BE","","`u16be`, but we can't use that directly in a `Vec` :(",null,null],[3,"U32BEPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableU32BEPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"U32BEIterable","","Used to iterate over a slice of `U32BEPacket`s",null,null],[3,"U32BE","","`u32be`, but we can't use that directly in a `Vec` :(",null,null],[11,"new","","Constructs a new GrePacket. If the provided buffer is less…",12,[[],[["option",["grepacket"]],["grepacket"]]]],[11,"owned","","Constructs a new GrePacket. If the provided buffer is less…",12,[[["vec",["u8"]],["u8"]],[["option",["grepacket"]],["grepacket"]]]],[11,"to_immutable","","Maps from a GrePacket to a GrePacket",12,[[["self"]],["grepacket"]]],[11,"consume_to_immutable","","Maps from a GrePacket to a GrePacket while consuming the…",12,[[],["grepacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",12,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Gre instance when converted into…",12,[[["gre"]],["usize"]]],[11,"get_checksum_present","","Get the checksum_present field.",12,[[["self"]],["u1"]]],[11,"get_routing_present","","Get the routing_present field.",12,[[["self"]],["u1"]]],[11,"get_key_present","","Get the key_present field.",12,[[["self"]],["u1"]]],[11,"get_sequence_present","","Get the sequence_present field.",12,[[["self"]],["u1"]]],[11,"get_strict_source_route","","Get the strict_source_route field.",12,[[["self"]],["u1"]]],[11,"get_recursion_control","","Get the recursion_control field.",12,[[["self"]],["u3"]]],[11,"get_zero_flags","","Get the zero_flags field.",12,[[["self"]],["u5"]]],[11,"get_version","","Get the version field.",12,[[["self"]],["u3"]]],[11,"get_protocol_type","","Get the protocol_type field. This field is always stored…",12,[[["self"]],["u16be"]]],[11,"get_checksum_raw","","Get the raw &[u8] value of the checksum field, without…",12,[[["self"]]]],[11,"get_checksum","","Get the value of the checksum field (copies contents)",12,[[["self"]],[["u16be"],["vec",["u16be"]]]]],[11,"get_checksum_iter","","Get the value of the checksum field as iterator",12,[[["self"]],["u16beiterable"]]],[11,"get_offset_raw","","Get the raw &[u8] value of the offset field, without copying",12,[[["self"]]]],[11,"get_offset","","Get the value of the offset field (copies contents)",12,[[["self"]],[["u16be"],["vec",["u16be"]]]]],[11,"get_offset_iter","","Get the value of the offset field as iterator",12,[[["self"]],["u16beiterable"]]],[11,"get_key_raw","","Get the raw &[u8] value of the key field, without copying",12,[[["self"]]]],[11,"get_key","","Get the value of the key field (copies contents)",12,[[["self"]],[["vec",["u32be"]],["u32be"]]]],[11,"get_key_iter","","Get the value of the key field as iterator",12,[[["self"]],["u32beiterable"]]],[11,"get_sequence_raw","","Get the raw &[u8] value of the sequence field, without…",12,[[["self"]]]],[11,"get_sequence","","Get the value of the sequence field (copies contents)",12,[[["self"]],[["vec",["u32be"]],["u32be"]]]],[11,"get_sequence_iter","","Get the value of the sequence field as iterator",12,[[["self"]],["u32beiterable"]]],[11,"get_routing_raw","","Get the raw &[u8] value of the routing field, without…",12,[[["self"]]]],[11,"get_routing","","Get the value of the routing field (copies contents)",12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"new","","Constructs a new MutableGrePacket. If the provided buffer…",13,[[],[["mutablegrepacket"],["option",["mutablegrepacket"]]]]],[11,"owned","","Constructs a new MutableGrePacket. If the provided buffer…",13,[[["vec",["u8"]],["u8"]],[["option",["mutablegrepacket"]],["mutablegrepacket"]]]],[11,"to_immutable","","Maps from a MutableGrePacket to a GrePacket",13,[[["self"]],["grepacket"]]],[11,"consume_to_immutable","","Maps from a MutableGrePacket to a GrePacket while…",13,[[],["grepacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",13,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Gre instance when converted into…",13,[[["gre"]],["usize"]]],[11,"populate","","Populates a GrePacket using a Gre structure",13,[[["gre"],["self"]]]],[11,"get_checksum_present","","Get the checksum_present field.",13,[[["self"]],["u1"]]],[11,"get_routing_present","","Get the routing_present field.",13,[[["self"]],["u1"]]],[11,"get_key_present","","Get the key_present field.",13,[[["self"]],["u1"]]],[11,"get_sequence_present","","Get the sequence_present field.",13,[[["self"]],["u1"]]],[11,"get_strict_source_route","","Get the strict_source_route field.",13,[[["self"]],["u1"]]],[11,"get_recursion_control","","Get the recursion_control field.",13,[[["self"]],["u3"]]],[11,"get_zero_flags","","Get the zero_flags field.",13,[[["self"]],["u5"]]],[11,"get_version","","Get the version field.",13,[[["self"]],["u3"]]],[11,"get_protocol_type","","Get the protocol_type field. This field is always stored…",13,[[["self"]],["u16be"]]],[11,"get_checksum_raw","","Get the raw &[u8] value of the checksum field, without…",13,[[["self"]]]],[11,"get_checksum","","Get the value of the checksum field (copies contents)",13,[[["self"]],[["u16be"],["vec",["u16be"]]]]],[11,"get_checksum_iter","","Get the value of the checksum field as iterator",13,[[["self"]],["u16beiterable"]]],[11,"get_offset_raw","","Get the raw &[u8] value of the offset field, without copying",13,[[["self"]]]],[11,"get_offset","","Get the value of the offset field (copies contents)",13,[[["self"]],[["u16be"],["vec",["u16be"]]]]],[11,"get_offset_iter","","Get the value of the offset field as iterator",13,[[["self"]],["u16beiterable"]]],[11,"get_key_raw","","Get the raw &[u8] value of the key field, without copying",13,[[["self"]]]],[11,"get_key","","Get the value of the key field (copies contents)",13,[[["self"]],[["vec",["u32be"]],["u32be"]]]],[11,"get_key_iter","","Get the value of the key field as iterator",13,[[["self"]],["u32beiterable"]]],[11,"get_sequence_raw","","Get the raw &[u8] value of the sequence field, without…",13,[[["self"]]]],[11,"get_sequence","","Get the value of the sequence field (copies contents)",13,[[["self"]],[["vec",["u32be"]],["u32be"]]]],[11,"get_sequence_iter","","Get the value of the sequence field as iterator",13,[[["self"]],["u32beiterable"]]],[11,"get_routing_raw","","Get the raw &[u8] value of the routing field, without…",13,[[["self"]]]],[11,"get_routing","","Get the value of the routing field (copies contents)",13,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"set_checksum_present","","Set the checksum_present field.",13,[[["u1"],["self"]]]],[11,"set_routing_present","","Set the routing_present field.",13,[[["u1"],["self"]]]],[11,"set_key_present","","Set the key_present field.",13,[[["u1"],["self"]]]],[11,"set_sequence_present","","Set the sequence_present field.",13,[[["u1"],["self"]]]],[11,"set_strict_source_route","","Set the strict_source_route field.",13,[[["u1"],["self"]]]],[11,"set_recursion_control","","Set the recursion_control field.",13,[[["self"],["u3"]]]],[11,"set_zero_flags","","Set the zero_flags field.",13,[[["u5"],["self"]]]],[11,"set_version","","Set the version field.",13,[[["self"],["u3"]]]],[11,"set_protocol_type","","Set the protocol_type field. This field is always stored…",13,[[["self"],["u16be"]]]],[11,"get_checksum_raw_mut","","Get the raw &mut [u8] value of the checksum field, without…",13,[[["self"]]]],[11,"set_checksum","","Set the value of the checksum field (copies contents)",13,[[["self"]]]],[11,"get_offset_raw_mut","","Get the raw &mut [u8] value of the offset field, without…",13,[[["self"]]]],[11,"set_offset","","Set the value of the offset field (copies contents)",13,[[["self"]]]],[11,"get_key_raw_mut","","Get the raw &mut [u8] value of the key field, without…",13,[[["self"]]]],[11,"set_key","","Set the value of the key field (copies contents)",13,[[["self"]]]],[11,"get_sequence_raw_mut","","Get the raw &mut [u8] value of the sequence field, without…",13,[[["self"]]]],[11,"set_sequence","","Set the value of the sequence field (copies contents)",13,[[["self"]]]],[11,"get_routing_raw_mut","","Get the raw &mut [u8] value of the routing field, without…",13,[[["self"]]]],[11,"set_routing","","Set the value of the routing field (copies contents)",13,[[["self"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",13,[[["self"]]]],[11,"new","","Constructs a new U16BEPacket. If the provided buffer is…",14,[[],[["option",["u16bepacket"]],["u16bepacket"]]]],[11,"owned","","Constructs a new U16BEPacket. If the provided buffer is…",14,[[["vec",["u8"]],["u8"]],[["u16bepacket"],["option",["u16bepacket"]]]]],[11,"to_immutable","","Maps from a U16BEPacket to a U16BEPacket",14,[[["self"]],["u16bepacket"]]],[11,"consume_to_immutable","","Maps from a U16BEPacket to a U16BEPacket while consuming…",14,[[],["u16bepacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",14,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a U16BE instance when converted…",14,[[["u16be"]],["usize"]]],[11,"get_number","","Get the number field. This field is always stored…",14,[[["self"]],["u16be"]]],[11,"new","","Constructs a new MutableU16BEPacket. If the provided…",15,[[],[["option",["mutableu16bepacket"]],["mutableu16bepacket"]]]],[11,"owned","","Constructs a new MutableU16BEPacket. If the provided…",15,[[["vec",["u8"]],["u8"]],[["mutableu16bepacket"],["option",["mutableu16bepacket"]]]]],[11,"to_immutable","","Maps from a MutableU16BEPacket to a U16BEPacket",15,[[["self"]],["u16bepacket"]]],[11,"consume_to_immutable","","Maps from a MutableU16BEPacket to a U16BEPacket while…",15,[[],["u16bepacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",15,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a U16BE instance when converted…",15,[[["u16be"]],["usize"]]],[11,"populate","","Populates a U16BEPacket using a U16BE structure",15,[[["u16be"],["self"]]]],[11,"get_number","","Get the number field. This field is always stored…",15,[[["self"]],["u16be"]]],[11,"set_number","","Set the number field. This field is always stored…",15,[[["self"],["u16be"]]]],[11,"set_unused","","Set the value of the unused field (copies contents)",15,[[["self"]]]],[11,"new","","Constructs a new U32BEPacket. If the provided buffer is…",16,[[],[["option",["u32bepacket"]],["u32bepacket"]]]],[11,"owned","","Constructs a new U32BEPacket. If the provided buffer is…",16,[[["vec",["u8"]],["u8"]],[["option",["u32bepacket"]],["u32bepacket"]]]],[11,"to_immutable","","Maps from a U32BEPacket to a U32BEPacket",16,[[["self"]],["u32bepacket"]]],[11,"consume_to_immutable","","Maps from a U32BEPacket to a U32BEPacket while consuming…",16,[[],["u32bepacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",16,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a U32BE instance when converted…",16,[[["u32be"]],["usize"]]],[11,"get_number","","Get the number field. This field is always stored…",16,[[["self"]],["u32be"]]],[11,"new","","Constructs a new MutableU32BEPacket. If the provided…",17,[[],[["mutableu32bepacket"],["option",["mutableu32bepacket"]]]]],[11,"owned","","Constructs a new MutableU32BEPacket. If the provided…",17,[[["vec",["u8"]],["u8"]],[["mutableu32bepacket"],["option",["mutableu32bepacket"]]]]],[11,"to_immutable","","Maps from a MutableU32BEPacket to a U32BEPacket",17,[[["self"]],["u32bepacket"]]],[11,"consume_to_immutable","","Maps from a MutableU32BEPacket to a U32BEPacket while…",17,[[],["u32bepacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",17,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a U32BE instance when converted…",17,[[["u32be"]],["usize"]]],[11,"populate","","Populates a U32BEPacket using a U32BE structure",17,[[["self"],["u32be"]]]],[11,"get_number","","Get the number field. This field is always stored…",17,[[["self"]],["u32be"]]],[11,"set_number","","Set the number field. This field is always stored…",17,[[["self"],["u32be"]]]],[11,"set_unused","","Set the value of the unused field (copies contents)",17,[[["self"]]]],[0,"ip","pnet_packet","Defines the type and constants for IP next header/next…",null,null],[3,"IpNextHeaderProtocol","pnet_packet::ip","Represents an IPv4 next level protocol, or an IPv6 next…",null,null],[12,"0","","",18,null],[0,"IpNextHeaderProtocols","","Protocol numbers as defined at:…",null,null],[17,"Hopopt","pnet_packet::ip::IpNextHeaderProtocols","IPv6 Hop-by-Hop Option [RFC2460]",null,null],[17,"Icmp","","Internet Control Message [RFC792]",null,null],[17,"Igmp","","Internet Group Management [RFC1112]",null,null],[17,"Ggp","","Gateway-to-Gateway [RFC823]",null,null],[17,"Ipv4","","IPv4 encapsulation [RFC2003]",null,null],[17,"St","","Stream [RFC1190][RFC1819]",null,null],[17,"Tcp","","Transmission Control [RFC793]",null,null],[17,"Cbt","","CBT",null,null],[17,"Egp","","Exterior Gateway Protocol [RFC888]",null,null],[17,"Igp","","any private interior gateway (used by Cisco for their IGRP)",null,null],[17,"BbnRccMon","","BBN RCC Monitoring",null,null],[17,"NvpII","","Network Voice Protocol [RFC741]",null,null],[17,"Pup","","PUP",null,null],[17,"Argus","","ARGUS",null,null],[17,"Emcon","","EMCON",null,null],[17,"Xnet","","Cross Net Debugger",null,null],[17,"Chaos","","Chaos",null,null],[17,"Udp","","User Datagram [RFC768]",null,null],[17,"Mux","","Multiplexing",null,null],[17,"DcnMeas","","DCN Measurement Subsystems",null,null],[17,"Hmp","","Host Monitoring [RFC869]",null,null],[17,"Prm","","Packet Radio Measurement",null,null],[17,"XnsIdp","","XEROX NS IDP",null,null],[17,"Trunk1","","Trunk-1",null,null],[17,"Trunk2","","Trunk-2",null,null],[17,"Leaf1","","Leaf-1",null,null],[17,"Leaf2","","Leaf-2",null,null],[17,"Rdp","","Reliable Data Protocol [RFC908]",null,null],[17,"Irtp","","Internet Reliable Transaction [RFC938]",null,null],[17,"IsoTp4","","ISO Transport Protocol Class 4 [RFC905]",null,null],[17,"Netblt","","Bulk Data Transfer Protocol [RFC969]",null,null],[17,"MfeNsp","","MFE Network Services Protocol",null,null],[17,"MeritInp","","MERIT Internodal Protocol",null,null],[17,"Dccp","","Datagram Congestion Control Protocol [RFC4340]",null,null],[17,"ThreePc","","Third Party Connect Protocol",null,null],[17,"Idpr","","Inter-Domain Policy Routing Protocol",null,null],[17,"Xtp","","XTP",null,null],[17,"Ddp","","Datagram Delivery Protocol",null,null],[17,"IdprCmtp","","IDPR Control Message Transport Proto",null,null],[17,"TpPlusPlus","","TP++ Transport Protocol",null,null],[17,"Il","","IL Transport Protocol",null,null],[17,"Ipv6","","IPv6 encapsulation [RFC2473]",null,null],[17,"Sdrp","","Source Demand Routing Protocol",null,null],[17,"Ipv6Route","","Routing Header for IPv6",null,null],[17,"Ipv6Frag","","Fragment Header for IPv6",null,null],[17,"Idrp","","Inter-Domain Routing Protocol",null,null],[17,"Rsvp","","Reservation Protocol [RFC2205][RFC3209]",null,null],[17,"Gre","","Generic Routing Encapsulation [RFC1701]",null,null],[17,"Dsr","","Dynamic Source Routing Protocol [RFC4728]",null,null],[17,"Bna","","BNA",null,null],[17,"Esp","","Encap Security Payload [RFC4303]",null,null],[17,"Ah","","Authentication Header [RFC4302]",null,null],[17,"INlsp","","Integrated Net Layer Security TUBA",null,null],[17,"Swipe","","IP with Encryption",null,null],[17,"Narp","","NBMA Address Resolution Protocol [RFC1735]",null,null],[17,"Mobile","","IP Mobility",null,null],[17,"Tlsp","","Transport Layer Security Protocol using Kryptonet key…",null,null],[17,"Skip","","SKIP",null,null],[17,"Ipv6Icmp","","",null,null],[17,"Icmpv6","","ICMPv6 [RFC4443]",null,null],[17,"Ipv6NoNxt","","No Next Header for IPv6 [RFC2460]",null,null],[17,"Ipv6Opts","","Destination Options for IPv6 [RFC2460]",null,null],[17,"HostInternal","","any host internal protocol",null,null],[17,"Cftp","","CFTP",null,null],[17,"LocalNetwork","","any local network",null,null],[17,"SatExpak","","SATNET and Backroom EXPAK",null,null],[17,"Kryptolan","","Kryptolan",null,null],[17,"Rvd","","MIT Remote Virtual Disk Protocol",null,null],[17,"Ippc","","Internet Pluribus Packet Core",null,null],[17,"DistributedFs","","any distributed file system",null,null],[17,"SatMon","","SATNET Monitoring",null,null],[17,"Visa","","VISA Protocol",null,null],[17,"Ipcv","","Internet Packet Core Utility",null,null],[17,"Cpnx","","Computer Protocol Network Executive",null,null],[17,"Cphb","","Computer Protocol Heart Beat",null,null],[17,"Wsn","","Wang Span Network",null,null],[17,"Pvp","","Packet Video Protocol",null,null],[17,"BrSatMon","","Backroom SATNET Monitoring",null,null],[17,"SunNd","","SUN ND PROTOCOL-Temporary",null,null],[17,"WbMon","","WIDEBAND Monitoring",null,null],[17,"WbExpak","","WIDEBAND EXPAK",null,null],[17,"IsoIp","","ISO Internet Protocol",null,null],[17,"Vmtp","","VMTP",null,null],[17,"SecureVmtp","","SECURE-VMTP",null,null],[17,"Vines","","VINES",null,null],[17,"TtpOrIptm","","Transaction Transport Protocol/IP Traffic Manager",null,null],[17,"NsfnetIgp","","NSFNET-IGP",null,null],[17,"Dgp","","Dissimilar Gateway Protocol",null,null],[17,"Tcf","","TCF",null,null],[17,"Eigrp","","EIGRP",null,null],[17,"OspfigP","","OSPFIGP [RFC1583][RFC2328][RFC5340]",null,null],[17,"SpriteRpc","","Sprite RPC Protocol",null,null],[17,"Larp","","Locus Address Resolution Protocol",null,null],[17,"Mtp","","Multicast Transport Protocol",null,null],[17,"Ax25","","AX.25 Frames",null,null],[17,"IpIp","","IP-within-IP Encapsulation Protocol",null,null],[17,"Micp","","Mobile Internetworking Control Pro.",null,null],[17,"SccSp","","Semaphore Communications Sec. Pro.",null,null],[17,"Etherip","","Ethernet-within-IP Encapsulation [RFC3378]",null,null],[17,"Encap","","Encapsulation Header [RFC1241]",null,null],[17,"PrivEncryption","","any private encryption scheme",null,null],[17,"Gmtp","","GMTP",null,null],[17,"Ifmp","","Ipsilon Flow Management Protocol",null,null],[17,"Pnni","","PNNI over IP",null,null],[17,"Pim","","Protocol Independent Multicast [RFC4601]",null,null],[17,"Aris","","ARIS",null,null],[17,"Scps","","SCPS",null,null],[17,"Qnx","","QNX",null,null],[17,"AN","","Active Networks",null,null],[17,"IpComp","","IP Payload Compression Protocol [RFC2393]",null,null],[17,"Snp","","Sitara Networks Protocol",null,null],[17,"CompaqPeer","","Compaq Peer Protocol",null,null],[17,"IpxInIp","","IPX in IP",null,null],[17,"Vrrp","","Virtual Router Redundancy Protocol [RFC5798]",null,null],[17,"Pgm","","PGM Reliable Transport Protocol",null,null],[17,"ZeroHop","","any 0-hop protocol",null,null],[17,"L2tp","","Layer Two Tunneling Protocol [RFC3931]",null,null],[17,"Ddx","","D-II Data Exchange (DDX)",null,null],[17,"Iatp","","Interactive Agent Transfer Protocol",null,null],[17,"Stp","","Schedule Transfer Protocol",null,null],[17,"Srp","","SpectraLink Radio Protocol",null,null],[17,"Uti","","UTI",null,null],[17,"Smp","","Simple Message Protocol",null,null],[17,"Sm","","Simple Multicast Protocol",null,null],[17,"Ptp","","Performance Transparency Protocol",null,null],[17,"IsisOverIpv4","","",null,null],[17,"Fire","","",null,null],[17,"Crtp","","Combat Radio Transport Protocol",null,null],[17,"Crudp","","Combat Radio User Datagram",null,null],[17,"Sscopmce","","",null,null],[17,"Iplt","","",null,null],[17,"Sps","","Secure Packet Shield",null,null],[17,"Pipe","","Private IP Encapsulation within IP",null,null],[17,"Sctp","","Stream Control Transmission Protocol",null,null],[17,"Fc","","Fibre Channel [RFC6172]",null,null],[17,"RsvpE2eIgnore","","[RFC3175]",null,null],[17,"MobilityHeader","","[RFC6275]",null,null],[17,"UdpLite","","[RFC3828]",null,null],[17,"MplsInIp","","[RFC4023]",null,null],[17,"Manet","","MANET Protocols [RFC5498]",null,null],[17,"Hip","","Host Identity Protocol [RFC5201]",null,null],[17,"Shim6","","Shim6 Protocol [RFC5533]",null,null],[17,"Wesp","","Wrapped Encapsulating Security Payload [RFC5840]",null,null],[17,"Rohc","","Robust Header Compression [RFC5858]",null,null],[17,"Test1","","Use for experimentation and testing [RFC3692]",null,null],[17,"Test2","","Use for experimentation and testing [RFC3692]",null,null],[17,"Reserved","","",null,null],[11,"new","pnet_packet::ip","Create a new IpNextHeaderProtocol",18,[[["u8"]],["ipnextheaderprotocol"]]],[0,"ipv4","pnet_packet","An IPv4 packet abstraction.",null,null],[3,"Ipv4OptionNumber","pnet_packet::ipv4","Represents an IPv4 option.",null,null],[12,"0","","",19,null],[3,"Ipv4Packet","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableIpv4Packet","","A structure enabling manipulation of on the wire packets",null,null],[3,"Ipv4Iterable","","Used to iterate over a slice of `Ipv4Packet`s",null,null],[3,"Ipv4","","Represents an IPv4 Packet.",null,null],[12,"version","","",20,null],[12,"header_length","","",20,null],[12,"dscp","","",20,null],[12,"ecn","","",20,null],[12,"total_length","","",20,null],[12,"identification","","",20,null],[12,"flags","","",20,null],[12,"fragment_offset","","",20,null],[12,"ttl","","",20,null],[12,"next_level_protocol","","",20,null],[12,"checksum","","",20,null],[12,"source","","",20,null],[12,"destination","","",20,null],[12,"options","","",20,null],[12,"payload","","",20,null],[3,"Ipv4OptionPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableIpv4OptionPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"Ipv4OptionIterable","","Used to iterate over a slice of `Ipv4OptionPacket`s",null,null],[3,"Ipv4Option","","Represents the IPv4 Option field.",null,null],[5,"checksum","","Calculates a checksum of an IPv4 packet header. The…",null,[[["ipv4packet"]],["u16be"]]],[0,"Ipv4Flags","","The IPv4 header flags.",null,null],[17,"DontFragment","pnet_packet::ipv4::Ipv4Flags","Don't Fragment flag.",null,null],[17,"MoreFragments","","More Fragments flag.",null,null],[0,"Ipv4OptionNumbers","pnet_packet::ipv4","IPv4 header options numbers as defined in…",null,null],[17,"EOL","pnet_packet::ipv4::Ipv4OptionNumbers","End of Options List.",null,null],[17,"NOP","","No Operation.",null,null],[17,"SEC","","Security.",null,null],[17,"LSR","","Loose Source Route.",null,null],[17,"TS","","Time Stamp.",null,null],[17,"ESEC","","Extended Security.",null,null],[17,"CIPSO","","Commercial Security.",null,null],[17,"RR","","Record Route.",null,null],[17,"SID","","Stream ID.",null,null],[17,"SSR","","Strict Source Route.",null,null],[17,"ZSU","","Experimental Measurement.",null,null],[17,"MTUP","","MTU Probe.",null,null],[17,"MTUR","","MTU Reply.",null,null],[17,"FINN","","Experimental Flow Control.",null,null],[17,"VISA","","Experimental Access Control.",null,null],[17,"ENCODE","","ENCODE.",null,null],[17,"IMITD","","IMI Traffic Descriptor.",null,null],[17,"EIP","","Extended Internet Protocol.",null,null],[17,"TR","","Traceroute.",null,null],[17,"ADDEXT","","Address Extension.",null,null],[17,"RTRALT","","Router Alert.",null,null],[17,"SDB","","Selective Directed Broadcast.",null,null],[17,"DPS","","Dynamic Packet State.",null,null],[17,"UMP","","Upstream Multicast Pkt.",null,null],[17,"QS","","Quick-Start.",null,null],[17,"EXP","","RFC3692-style Experiment.",null,null],[11,"new","pnet_packet::ipv4","Create a new `Ipv4OptionNumber` instance.",19,[[["u8"]],["ipv4optionnumber"]]],[11,"new","","Constructs a new Ipv4Packet. If the provided buffer is…",21,[[],[["ipv4packet"],["option",["ipv4packet"]]]]],[11,"owned","","Constructs a new Ipv4Packet. If the provided buffer is…",21,[[["vec",["u8"]],["u8"]],[["ipv4packet"],["option",["ipv4packet"]]]]],[11,"to_immutable","","Maps from a Ipv4Packet to a Ipv4Packet",21,[[["self"]],["ipv4packet"]]],[11,"consume_to_immutable","","Maps from a Ipv4Packet to a Ipv4Packet while consuming the…",21,[[],["ipv4packet"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",21,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Ipv4 instance when converted into…",21,[[["ipv4"]],["usize"]]],[11,"get_version","","Get the version field.",21,[[["self"]],["u4"]]],[11,"get_header_length","","Get the header_length field.",21,[[["self"]],["u4"]]],[11,"get_dscp","","Get the dscp field.",21,[[["self"]],["u6"]]],[11,"get_ecn","","Get the ecn field.",21,[[["self"]],["u2"]]],[11,"get_total_length","","Get the total_length field. This field is always stored…",21,[[["self"]],["u16be"]]],[11,"get_identification","","Get the identification field. This field is always stored…",21,[[["self"]],["u16be"]]],[11,"get_flags","","Get the flags field.",21,[[["self"]],["u3"]]],[11,"get_fragment_offset","","Get the fragment_offset field. This field is always stored…",21,[[["self"]],["u13be"]]],[11,"get_ttl","","Get the ttl field.",21,[[["self"]],["u8"]]],[11,"get_next_level_protocol","","Get the value of the next_level_protocol field",21,[[["self"]],["ipnextheaderprotocol"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",21,[[["self"]],["u16be"]]],[11,"get_source","","Get the value of the source field",21,[[["self"]],["ipv4addr"]]],[11,"get_destination","","Get the value of the destination field",21,[[["self"]],["ipv4addr"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",21,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",21,[[["self"]],[["vec",["ipv4option"]],["ipv4option"]]]],[11,"get_options_iter","","Get the value of the options field as iterator",21,[[["self"]],["ipv4optioniterable"]]],[11,"new","","Constructs a new MutableIpv4Packet. If the provided buffer…",22,[[],[["option",["mutableipv4packet"]],["mutableipv4packet"]]]],[11,"owned","","Constructs a new MutableIpv4Packet. If the provided buffer…",22,[[["vec",["u8"]],["u8"]],[["option",["mutableipv4packet"]],["mutableipv4packet"]]]],[11,"to_immutable","","Maps from a MutableIpv4Packet to a Ipv4Packet",22,[[["self"]],["ipv4packet"]]],[11,"consume_to_immutable","","Maps from a MutableIpv4Packet to a Ipv4Packet while…",22,[[],["ipv4packet"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",22,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Ipv4 instance when converted into…",22,[[["ipv4"]],["usize"]]],[11,"populate","","Populates a Ipv4Packet using a Ipv4 structure",22,[[["self"],["ipv4"]]]],[11,"get_version","","Get the version field.",22,[[["self"]],["u4"]]],[11,"get_header_length","","Get the header_length field.",22,[[["self"]],["u4"]]],[11,"get_dscp","","Get the dscp field.",22,[[["self"]],["u6"]]],[11,"get_ecn","","Get the ecn field.",22,[[["self"]],["u2"]]],[11,"get_total_length","","Get the total_length field. This field is always stored…",22,[[["self"]],["u16be"]]],[11,"get_identification","","Get the identification field. This field is always stored…",22,[[["self"]],["u16be"]]],[11,"get_flags","","Get the flags field.",22,[[["self"]],["u3"]]],[11,"get_fragment_offset","","Get the fragment_offset field. This field is always stored…",22,[[["self"]],["u13be"]]],[11,"get_ttl","","Get the ttl field.",22,[[["self"]],["u8"]]],[11,"get_next_level_protocol","","Get the value of the next_level_protocol field",22,[[["self"]],["ipnextheaderprotocol"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",22,[[["self"]],["u16be"]]],[11,"get_source","","Get the value of the source field",22,[[["self"]],["ipv4addr"]]],[11,"get_destination","","Get the value of the destination field",22,[[["self"]],["ipv4addr"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",22,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",22,[[["self"]],[["vec",["ipv4option"]],["ipv4option"]]]],[11,"get_options_iter","","Get the value of the options field as iterator",22,[[["self"]],["ipv4optioniterable"]]],[11,"set_version","","Set the version field.",22,[[["self"],["u4"]]]],[11,"set_header_length","","Set the header_length field.",22,[[["self"],["u4"]]]],[11,"set_dscp","","Set the dscp field.",22,[[["self"],["u6"]]]],[11,"set_ecn","","Set the ecn field.",22,[[["self"],["u2"]]]],[11,"set_total_length","","Set the total_length field. This field is always stored…",22,[[["self"],["u16be"]]]],[11,"set_identification","","Set the identification field. This field is always stored…",22,[[["self"],["u16be"]]]],[11,"set_flags","","Set the flags field.",22,[[["self"],["u3"]]]],[11,"set_fragment_offset","","Set the fragment_offset field. This field is always stored…",22,[[["u13be"],["self"]]]],[11,"set_ttl","","Set the ttl field.",22,[[["self"],["u8"]]]],[11,"set_next_level_protocol","","Set the value of the next_level_protocol field",22,[[["self"],["ipnextheaderprotocol"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",22,[[["self"],["u16be"]]]],[11,"set_source","","Set the value of the source field",22,[[["ipv4addr"],["self"]]]],[11,"set_destination","","Set the value of the destination field",22,[[["ipv4addr"],["self"]]]],[11,"get_options_raw_mut","","Get the raw &mut [u8] value of the options field, without…",22,[[["self"]]]],[11,"set_options","","Set the value of the options field (copies contents)",22,[[["self"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",22,[[["self"]]]],[11,"new","","Constructs a new Ipv4OptionPacket. If the provided buffer…",23,[[],[["option",["ipv4optionpacket"]],["ipv4optionpacket"]]]],[11,"owned","","Constructs a new Ipv4OptionPacket. If the provided buffer…",23,[[["vec",["u8"]],["u8"]],[["option",["ipv4optionpacket"]],["ipv4optionpacket"]]]],[11,"to_immutable","","Maps from a Ipv4OptionPacket to a Ipv4OptionPacket",23,[[["self"]],["ipv4optionpacket"]]],[11,"consume_to_immutable","","Maps from a Ipv4OptionPacket to a Ipv4OptionPacket while…",23,[[],["ipv4optionpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",23,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Ipv4Option instance when…",23,[[["ipv4option"]],["usize"]]],[11,"get_copied","","Get the copied field.",23,[[["self"]],["u1"]]],[11,"get_class","","Get the class field.",23,[[["self"]],["u2"]]],[11,"get_number","","Get the value of the number field",23,[[["self"]],["ipv4optionnumber"]]],[11,"get_length_raw","","Get the raw &[u8] value of the length field, without copying",23,[[["self"]]]],[11,"get_length","","Get the value of the length field (copies contents)",23,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"new","","Constructs a new MutableIpv4OptionPacket. If the provided…",24,[[],[["mutableipv4optionpacket"],["option",["mutableipv4optionpacket"]]]]],[11,"owned","","Constructs a new MutableIpv4OptionPacket. If the provided…",24,[[["vec",["u8"]],["u8"]],[["mutableipv4optionpacket"],["option",["mutableipv4optionpacket"]]]]],[11,"to_immutable","","Maps from a MutableIpv4OptionPacket to a Ipv4OptionPacket",24,[[["self"]],["ipv4optionpacket"]]],[11,"consume_to_immutable","","Maps from a MutableIpv4OptionPacket to a Ipv4OptionPacket…",24,[[],["ipv4optionpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",24,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Ipv4Option instance when…",24,[[["ipv4option"]],["usize"]]],[11,"populate","","Populates a Ipv4OptionPacket using a Ipv4Option structure",24,[[["self"],["ipv4option"]]]],[11,"get_copied","","Get the copied field.",24,[[["self"]],["u1"]]],[11,"get_class","","Get the class field.",24,[[["self"]],["u2"]]],[11,"get_number","","Get the value of the number field",24,[[["self"]],["ipv4optionnumber"]]],[11,"get_length_raw","","Get the raw &[u8] value of the length field, without copying",24,[[["self"]]]],[11,"get_length","","Get the value of the length field (copies contents)",24,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"set_copied","","Set the copied field.",24,[[["u1"],["self"]]]],[11,"set_class","","Set the class field.",24,[[["self"],["u2"]]]],[11,"set_number","","Set the value of the number field",24,[[["ipv4optionnumber"],["self"]]]],[11,"get_length_raw_mut","","Get the raw &mut [u8] value of the length field, without…",24,[[["self"]]]],[11,"set_length","","Set the value of the length field (copies contents)",24,[[["self"]]]],[11,"set_data","","Set the value of the data field (copies contents)",24,[[["self"]]]],[0,"ipv6","pnet_packet","An IPv6 packet abstraction.",null,null],[3,"Ipv6Packet","pnet_packet::ipv6","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableIpv6Packet","","A structure enabling manipulation of on the wire packets",null,null],[3,"Ipv6Iterable","","Used to iterate over a slice of `Ipv6Packet`s",null,null],[3,"Ipv6","","Represents an IPv6 Packet.",null,null],[12,"version","","",25,null],[12,"traffic_class","","",25,null],[12,"flow_label","","",25,null],[12,"payload_length","","",25,null],[12,"next_header","","",25,null],[12,"hop_limit","","",25,null],[12,"source","","",25,null],[12,"destination","","",25,null],[12,"payload","","",25,null],[3,"ExtensionPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableExtensionPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"ExtensionIterable","","Used to iterate over a slice of `ExtensionPacket`s",null,null],[3,"Extension","","Represents an IPv6 Extension.",null,null],[12,"next_header","","",26,null],[12,"hdr_ext_len","","",26,null],[12,"options","","",26,null],[3,"RoutingPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableRoutingPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"RoutingIterable","","Used to iterate over a slice of `RoutingPacket`s",null,null],[3,"Routing","","Represents an IPv6 Routing Extension.",null,null],[12,"next_header","","",27,null],[12,"hdr_ext_len","","",27,null],[12,"routing_type","","",27,null],[12,"segments_left","","",27,null],[12,"data","","",27,null],[3,"FragmentPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableFragmentPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"FragmentIterable","","Used to iterate over a slice of `FragmentPacket`s",null,null],[3,"Fragment","","Represents an IPv6 Fragment Extension.",null,null],[12,"next_header","","",28,null],[12,"reserved","","",28,null],[12,"fragment_offset_with_flags","","",28,null],[12,"id","","",28,null],[12,"payload","","",28,null],[6,"HopByHop","","Represents an IPv6 Hop-by-Hop Options.",null,null],[6,"HopByHopPacket","","A structure enabling manipulation of on the wire packets.",null,null],[6,"MutableHopByHopPacket","","A structure enabling manipulation of on the wire packets.",null,null],[6,"Destination","","Represents an Destination Options.",null,null],[6,"DestinationPacket","","A structure enabling manipulation of on the wire packets.",null,null],[6,"MutableDestinationPacket","","A structure enabling manipulation of on the wire packets.",null,null],[11,"new","","Constructs a new Ipv6Packet. If the provided buffer is…",29,[[],[["option",["ipv6packet"]],["ipv6packet"]]]],[11,"owned","","Constructs a new Ipv6Packet. If the provided buffer is…",29,[[["vec",["u8"]],["u8"]],[["ipv6packet"],["option",["ipv6packet"]]]]],[11,"to_immutable","","Maps from a Ipv6Packet to a Ipv6Packet",29,[[["self"]],["ipv6packet"]]],[11,"consume_to_immutable","","Maps from a Ipv6Packet to a Ipv6Packet while consuming the…",29,[[],["ipv6packet"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",29,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Ipv6 instance when converted into…",29,[[["ipv6"]],["usize"]]],[11,"get_version","","Get the version field.",29,[[["self"]],["u4"]]],[11,"get_traffic_class","","Get the traffic_class field.",29,[[["self"]],["u8"]]],[11,"get_flow_label","","Get the flow_label field. This field is always stored…",29,[[["self"]],["u20be"]]],[11,"get_payload_length","","Get the payload_length field. This field is always stored…",29,[[["self"]],["u16be"]]],[11,"get_next_header","","Get the value of the next_header field",29,[[["self"]],["ipnextheaderprotocol"]]],[11,"get_hop_limit","","Get the hop_limit field.",29,[[["self"]],["u8"]]],[11,"get_source","","Get the value of the source field",29,[[["self"]],["ipv6addr"]]],[11,"get_destination","","Get the value of the destination field",29,[[["self"]],["ipv6addr"]]],[11,"new","","Constructs a new MutableIpv6Packet. If the provided buffer…",30,[[],[["mutableipv6packet"],["option",["mutableipv6packet"]]]]],[11,"owned","","Constructs a new MutableIpv6Packet. If the provided buffer…",30,[[["vec",["u8"]],["u8"]],[["mutableipv6packet"],["option",["mutableipv6packet"]]]]],[11,"to_immutable","","Maps from a MutableIpv6Packet to a Ipv6Packet",30,[[["self"]],["ipv6packet"]]],[11,"consume_to_immutable","","Maps from a MutableIpv6Packet to a Ipv6Packet while…",30,[[],["ipv6packet"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",30,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Ipv6 instance when converted into…",30,[[["ipv6"]],["usize"]]],[11,"populate","","Populates a Ipv6Packet using a Ipv6 structure",30,[[["self"],["ipv6"]]]],[11,"get_version","","Get the version field.",30,[[["self"]],["u4"]]],[11,"get_traffic_class","","Get the traffic_class field.",30,[[["self"]],["u8"]]],[11,"get_flow_label","","Get the flow_label field. This field is always stored…",30,[[["self"]],["u20be"]]],[11,"get_payload_length","","Get the payload_length field. This field is always stored…",30,[[["self"]],["u16be"]]],[11,"get_next_header","","Get the value of the next_header field",30,[[["self"]],["ipnextheaderprotocol"]]],[11,"get_hop_limit","","Get the hop_limit field.",30,[[["self"]],["u8"]]],[11,"get_source","","Get the value of the source field",30,[[["self"]],["ipv6addr"]]],[11,"get_destination","","Get the value of the destination field",30,[[["self"]],["ipv6addr"]]],[11,"set_version","","Set the version field.",30,[[["self"],["u4"]]]],[11,"set_traffic_class","","Set the traffic_class field.",30,[[["self"],["u8"]]]],[11,"set_flow_label","","Set the flow_label field. This field is always stored…",30,[[["self"],["u20be"]]]],[11,"set_payload_length","","Set the payload_length field. This field is always stored…",30,[[["self"],["u16be"]]]],[11,"set_next_header","","Set the value of the next_header field",30,[[["self"],["ipnextheaderprotocol"]]]],[11,"set_hop_limit","","Set the hop_limit field.",30,[[["self"],["u8"]]]],[11,"set_source","","Set the value of the source field",30,[[["self"],["ipv6addr"]]]],[11,"set_destination","","Set the value of the destination field",30,[[["self"],["ipv6addr"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",30,[[["self"]]]],[11,"new","","",31,[[],["extensioniterable"]]],[11,"new","","Constructs a new ExtensionPacket. If the provided buffer…",32,[[],[["option",["extensionpacket"]],["extensionpacket"]]]],[11,"owned","","Constructs a new ExtensionPacket. If the provided buffer…",32,[[["vec",["u8"]],["u8"]],[["option",["extensionpacket"]],["extensionpacket"]]]],[11,"to_immutable","","Maps from a ExtensionPacket to a ExtensionPacket",32,[[["self"]],["extensionpacket"]]],[11,"consume_to_immutable","","Maps from a ExtensionPacket to a ExtensionPacket while…",32,[[],["extensionpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",32,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Extension instance when converted…",32,[[["extension"]],["usize"]]],[11,"get_next_header","","Get the value of the next_header field",32,[[["self"]],["ipnextheaderprotocol"]]],[11,"get_hdr_ext_len","","Get the hdr_ext_len field.",32,[[["self"]],["u8"]]],[11,"new","","Constructs a new MutableExtensionPacket. If the provided…",33,[[],[["mutableextensionpacket"],["option",["mutableextensionpacket"]]]]],[11,"owned","","Constructs a new MutableExtensionPacket. If the provided…",33,[[["vec",["u8"]],["u8"]],[["option",["mutableextensionpacket"]],["mutableextensionpacket"]]]],[11,"to_immutable","","Maps from a MutableExtensionPacket to a ExtensionPacket",33,[[["self"]],["extensionpacket"]]],[11,"consume_to_immutable","","Maps from a MutableExtensionPacket to a ExtensionPacket…",33,[[],["extensionpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",33,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Extension instance when converted…",33,[[["extension"]],["usize"]]],[11,"populate","","Populates a ExtensionPacket using a Extension structure",33,[[["self"],["extension"]]]],[11,"get_next_header","","Get the value of the next_header field",33,[[["self"]],["ipnextheaderprotocol"]]],[11,"get_hdr_ext_len","","Get the hdr_ext_len field.",33,[[["self"]],["u8"]]],[11,"set_next_header","","Set the value of the next_header field",33,[[["self"],["ipnextheaderprotocol"]]]],[11,"set_hdr_ext_len","","Set the hdr_ext_len field.",33,[[["self"],["u8"]]]],[11,"set_options","","Set the value of the options field (copies contents)",33,[[["self"]]]],[11,"new","","Constructs a new RoutingPacket. If the provided buffer is…",34,[[],[["routingpacket"],["option",["routingpacket"]]]]],[11,"owned","","Constructs a new RoutingPacket. If the provided buffer is…",34,[[["vec",["u8"]],["u8"]],[["routingpacket"],["option",["routingpacket"]]]]],[11,"to_immutable","","Maps from a RoutingPacket to a RoutingPacket",34,[[["self"]],["routingpacket"]]],[11,"consume_to_immutable","","Maps from a RoutingPacket to a RoutingPacket while…",34,[[],["routingpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",34,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Routing instance when converted…",34,[[["routing"]],["usize"]]],[11,"get_next_header","","Get the value of the next_header field",34,[[["self"]],["ipnextheaderprotocol"]]],[11,"get_hdr_ext_len","","Get the hdr_ext_len field.",34,[[["self"]],["u8"]]],[11,"get_routing_type","","Get the routing_type field.",34,[[["self"]],["u8"]]],[11,"get_segments_left","","Get the segments_left field.",34,[[["self"]],["u8"]]],[11,"new","","Constructs a new MutableRoutingPacket. If the provided…",35,[[],[["option",["mutableroutingpacket"]],["mutableroutingpacket"]]]],[11,"owned","","Constructs a new MutableRoutingPacket. If the provided…",35,[[["vec",["u8"]],["u8"]],[["option",["mutableroutingpacket"]],["mutableroutingpacket"]]]],[11,"to_immutable","","Maps from a MutableRoutingPacket to a RoutingPacket",35,[[["self"]],["routingpacket"]]],[11,"consume_to_immutable","","Maps from a MutableRoutingPacket to a RoutingPacket while…",35,[[],["routingpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",35,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Routing instance when converted…",35,[[["routing"]],["usize"]]],[11,"populate","","Populates a RoutingPacket using a Routing structure",35,[[["self"],["routing"]]]],[11,"get_next_header","","Get the value of the next_header field",35,[[["self"]],["ipnextheaderprotocol"]]],[11,"get_hdr_ext_len","","Get the hdr_ext_len field.",35,[[["self"]],["u8"]]],[11,"get_routing_type","","Get the routing_type field.",35,[[["self"]],["u8"]]],[11,"get_segments_left","","Get the segments_left field.",35,[[["self"]],["u8"]]],[11,"set_next_header","","Set the value of the next_header field",35,[[["self"],["ipnextheaderprotocol"]]]],[11,"set_hdr_ext_len","","Set the hdr_ext_len field.",35,[[["self"],["u8"]]]],[11,"set_routing_type","","Set the routing_type field.",35,[[["self"],["u8"]]]],[11,"set_segments_left","","Set the segments_left field.",35,[[["self"],["u8"]]]],[11,"set_data","","Set the value of the data field (copies contents)",35,[[["self"]]]],[11,"new","","Constructs a new FragmentPacket. If the provided buffer is…",36,[[],[["fragmentpacket"],["option",["fragmentpacket"]]]]],[11,"owned","","Constructs a new FragmentPacket. If the provided buffer is…",36,[[["vec",["u8"]],["u8"]],[["fragmentpacket"],["option",["fragmentpacket"]]]]],[11,"to_immutable","","Maps from a FragmentPacket to a FragmentPacket",36,[[["self"]],["fragmentpacket"]]],[11,"consume_to_immutable","","Maps from a FragmentPacket to a FragmentPacket while…",36,[[],["fragmentpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",36,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Fragment instance when converted…",36,[[["fragment"]],["usize"]]],[11,"get_next_header","","Get the value of the next_header field",36,[[["self"]],["ipnextheaderprotocol"]]],[11,"get_reserved","","Get the reserved field.",36,[[["self"]],["u8"]]],[11,"get_fragment_offset_with_flags","","Get the fragment_offset_with_flags field. This field is…",36,[[["self"]],["u16be"]]],[11,"get_id","","Get the id field. This field is always stored big-endian…",36,[[["self"]],["u32be"]]],[11,"new","","Constructs a new MutableFragmentPacket. If the provided…",37,[[],[["option",["mutablefragmentpacket"]],["mutablefragmentpacket"]]]],[11,"owned","","Constructs a new MutableFragmentPacket. If the provided…",37,[[["vec",["u8"]],["u8"]],[["mutablefragmentpacket"],["option",["mutablefragmentpacket"]]]]],[11,"to_immutable","","Maps from a MutableFragmentPacket to a FragmentPacket",37,[[["self"]],["fragmentpacket"]]],[11,"consume_to_immutable","","Maps from a MutableFragmentPacket to a FragmentPacket…",37,[[],["fragmentpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",37,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Fragment instance when converted…",37,[[["fragment"]],["usize"]]],[11,"populate","","Populates a FragmentPacket using a Fragment structure",37,[[["self"],["fragment"]]]],[11,"get_next_header","","Get the value of the next_header field",37,[[["self"]],["ipnextheaderprotocol"]]],[11,"get_reserved","","Get the reserved field.",37,[[["self"]],["u8"]]],[11,"get_fragment_offset_with_flags","","Get the fragment_offset_with_flags field. This field is…",37,[[["self"]],["u16be"]]],[11,"get_id","","Get the id field. This field is always stored big-endian…",37,[[["self"]],["u32be"]]],[11,"set_next_header","","Set the value of the next_header field",37,[[["self"],["ipnextheaderprotocol"]]]],[11,"set_reserved","","Set the reserved field.",37,[[["self"],["u8"]]]],[11,"set_fragment_offset_with_flags","","Set the fragment_offset_with_flags field. This field is…",37,[[["self"],["u16be"]]]],[11,"set_id","","Set the id field. This field is always stored big-endian…",37,[[["self"],["u32be"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",37,[[["self"]]]],[11,"get_fragment_offset","","",36,[[["self"]],["u16"]]],[11,"is_last_fragment","","",36,[[["self"]],["bool"]]],[11,"get_fragment_offset","","",37,[[["self"]],["u16"]]],[11,"is_last_fragment","","",37,[[["self"]],["bool"]]],[11,"set_fragment_offset","","",37,[[["u16"],["self"]]]],[11,"set_last_fragment","","",37,[[["self"],["bool"]]]],[0,"udp","pnet_packet","A UDP packet abstraction.",null,null],[3,"UdpPacket","pnet_packet::udp","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableUdpPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"UdpIterable","","Used to iterate over a slice of `UdpPacket`s",null,null],[3,"Udp","","Represents a UDP Packet.",null,null],[12,"source","","",38,null],[12,"destination","","",38,null],[12,"length","","",38,null],[12,"checksum","","",38,null],[12,"payload","","",38,null],[5,"ipv4_checksum","","Calculate a checksum for a packet built on IPv4.",null,[[["udppacket"],["ipv4addr"]],["u16be"]]],[5,"ipv4_checksum_adv","","Calculate a checksum for a packet built on IPv4. Advanced…",null,[[["udppacket"],["ipv4addr"]],["u16be"]]],[5,"ipv6_checksum","","Calculate a checksum for a packet built on IPv6.",null,[[["udppacket"],["ipv6addr"]],["u16be"]]],[5,"ipv6_checksum_adv","","Calculate the checksum for a packet built on IPv6.…",null,[[["udppacket"],["ipv6addr"]],["u16be"]]],[11,"new","","Constructs a new UdpPacket. If the provided buffer is less…",39,[[],[["udppacket"],["option",["udppacket"]]]]],[11,"owned","","Constructs a new UdpPacket. If the provided buffer is less…",39,[[["vec",["u8"]],["u8"]],[["option",["udppacket"]],["udppacket"]]]],[11,"to_immutable","","Maps from a UdpPacket to a UdpPacket",39,[[["self"]],["udppacket"]]],[11,"consume_to_immutable","","Maps from a UdpPacket to a UdpPacket while consuming the…",39,[[],["udppacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",39,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Udp instance when converted into…",39,[[["udp"]],["usize"]]],[11,"get_source","","Get the source field. This field is always stored…",39,[[["self"]],["u16be"]]],[11,"get_destination","","Get the destination field. This field is always stored…",39,[[["self"]],["u16be"]]],[11,"get_length","","Get the length field. This field is always stored…",39,[[["self"]],["u16be"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",39,[[["self"]],["u16be"]]],[11,"new","","Constructs a new MutableUdpPacket. If the provided buffer…",40,[[],[["mutableudppacket"],["option",["mutableudppacket"]]]]],[11,"owned","","Constructs a new MutableUdpPacket. If the provided buffer…",40,[[["vec",["u8"]],["u8"]],[["option",["mutableudppacket"]],["mutableudppacket"]]]],[11,"to_immutable","","Maps from a MutableUdpPacket to a UdpPacket",40,[[["self"]],["udppacket"]]],[11,"consume_to_immutable","","Maps from a MutableUdpPacket to a UdpPacket while…",40,[[],["udppacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",40,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Udp instance when converted into…",40,[[["udp"]],["usize"]]],[11,"populate","","Populates a UdpPacket using a Udp structure",40,[[["self"],["udp"]]]],[11,"get_source","","Get the source field. This field is always stored…",40,[[["self"]],["u16be"]]],[11,"get_destination","","Get the destination field. This field is always stored…",40,[[["self"]],["u16be"]]],[11,"get_length","","Get the length field. This field is always stored…",40,[[["self"]],["u16be"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",40,[[["self"]],["u16be"]]],[11,"set_source","","Set the source field. This field is always stored…",40,[[["self"],["u16be"]]]],[11,"set_destination","","Set the destination field. This field is always stored…",40,[[["self"],["u16be"]]]],[11,"set_length","","Set the length field. This field is always stored…",40,[[["self"],["u16be"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",40,[[["self"],["u16be"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",40,[[["self"]]]],[0,"tcp","pnet_packet","An TCP packet abstraction.",null,null],[3,"TcpPacket","pnet_packet::tcp","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableTcpPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"TcpIterable","","Used to iterate over a slice of `TcpPacket`s",null,null],[3,"Tcp","","Represents a TCP packet.",null,null],[12,"source","","",41,null],[12,"destination","","",41,null],[12,"sequence","","",41,null],[12,"acknowledgement","","",41,null],[12,"data_offset","","",41,null],[12,"reserved","","",41,null],[12,"flags","","",41,null],[12,"window","","",41,null],[12,"checksum","","",41,null],[12,"urgent_ptr","","",41,null],[12,"options","","",41,null],[12,"payload","","",41,null],[3,"TcpOptionNumber","","Represents a TCP option.",null,null],[12,"0","","",42,null],[3,"TcpOptionPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableTcpOptionPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"TcpOptionIterable","","Used to iterate over a slice of `TcpOptionPacket`s",null,null],[3,"TcpOption","","A TCP option.",null,null],[5,"ipv4_checksum","","Calculate a checksum for a packet built on IPv4.",null,[[["ipv4addr"],["tcppacket"]],["u16"]]],[5,"ipv4_checksum_adv","","Calculate the checksum for a packet built on IPv4,…",null,[[["tcppacket"],["ipv4addr"]],["u16"]]],[5,"ipv6_checksum","","Calculate a checksum for a packet built on IPv6.",null,[[["ipv6addr"],["tcppacket"]],["u16"]]],[5,"ipv6_checksum_adv","","Calculate the checksum for a packet built on IPv6,…",null,[[["tcppacket"],["ipv6addr"]],["u16"]]],[0,"TcpFlags","","The TCP flags.",null,null],[17,"NS","pnet_packet::tcp::TcpFlags","NS – ECN-nonce concealment protection (experimental: see…",null,null],[17,"CWR","","CWR – Congestion Window Reduced (CWR) flag is set by the…",null,null],[17,"ECE","","ECE – ECN-Echo has a dual role, depending on the value of…",null,null],[17,"URG","","URG – indicates that the Urgent pointer field is…",null,null],[17,"ACK","","ACK – indicates that the Acknowledgment field is…",null,null],[17,"PSH","","PSH – Push function. Asks to push the buffered data to the…",null,null],[17,"RST","","RST – Reset the connection.",null,null],[17,"SYN","","SYN – Synchronize sequence numbers. Only the first packet…",null,null],[17,"FIN","","FIN – No more data from sender.",null,null],[0,"TcpOptionNumbers","pnet_packet::tcp","The TCP header options.",null,null],[17,"EOL","pnet_packet::tcp::TcpOptionNumbers","End of Options list.",null,null],[17,"NOP","","No operation.",null,null],[17,"MSS","","Maximum segment size.",null,null],[17,"WSCALE","","Window scale.",null,null],[17,"SACK_PERMITTED","","Selective acknowledgements permitted.",null,null],[17,"SACK","","Selective acknowledgment.",null,null],[17,"TIMESTAMPS","","Timestamps.",null,null],[11,"new","pnet_packet::tcp","Constructs a new TcpPacket. If the provided buffer is less…",43,[[],[["option",["tcppacket"]],["tcppacket"]]]],[11,"owned","","Constructs a new TcpPacket. If the provided buffer is less…",43,[[["vec",["u8"]],["u8"]],[["option",["tcppacket"]],["tcppacket"]]]],[11,"to_immutable","","Maps from a TcpPacket to a TcpPacket",43,[[["self"]],["tcppacket"]]],[11,"consume_to_immutable","","Maps from a TcpPacket to a TcpPacket while consuming the…",43,[[],["tcppacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",43,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Tcp instance when converted into…",43,[[["tcp"]],["usize"]]],[11,"get_source","","Get the source field. This field is always stored…",43,[[["self"]],["u16be"]]],[11,"get_destination","","Get the destination field. This field is always stored…",43,[[["self"]],["u16be"]]],[11,"get_sequence","","Get the sequence field. This field is always stored…",43,[[["self"]],["u32be"]]],[11,"get_acknowledgement","","Get the acknowledgement field. This field is always stored…",43,[[["self"]],["u32be"]]],[11,"get_data_offset","","Get the data_offset field.",43,[[["self"]],["u4"]]],[11,"get_reserved","","Get the reserved field.",43,[[["self"]],["u3"]]],[11,"get_flags","","Get the flags field. This field is always stored…",43,[[["self"]],["u9be"]]],[11,"get_window","","Get the window field. This field is always stored…",43,[[["self"]],["u16be"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",43,[[["self"]],["u16be"]]],[11,"get_urgent_ptr","","Get the urgent_ptr field. This field is always stored…",43,[[["self"]],["u16be"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",43,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",43,[[["self"]],[["tcpoption"],["vec",["tcpoption"]]]]],[11,"get_options_iter","","Get the value of the options field as iterator",43,[[["self"]],["tcpoptioniterable"]]],[11,"new","","Constructs a new MutableTcpPacket. If the provided buffer…",44,[[],[["mutabletcppacket"],["option",["mutabletcppacket"]]]]],[11,"owned","","Constructs a new MutableTcpPacket. If the provided buffer…",44,[[["vec",["u8"]],["u8"]],[["option",["mutabletcppacket"]],["mutabletcppacket"]]]],[11,"to_immutable","","Maps from a MutableTcpPacket to a TcpPacket",44,[[["self"]],["tcppacket"]]],[11,"consume_to_immutable","","Maps from a MutableTcpPacket to a TcpPacket while…",44,[[],["tcppacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",44,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Tcp instance when converted into…",44,[[["tcp"]],["usize"]]],[11,"populate","","Populates a TcpPacket using a Tcp structure",44,[[["self"],["tcp"]]]],[11,"get_source","","Get the source field. This field is always stored…",44,[[["self"]],["u16be"]]],[11,"get_destination","","Get the destination field. This field is always stored…",44,[[["self"]],["u16be"]]],[11,"get_sequence","","Get the sequence field. This field is always stored…",44,[[["self"]],["u32be"]]],[11,"get_acknowledgement","","Get the acknowledgement field. This field is always stored…",44,[[["self"]],["u32be"]]],[11,"get_data_offset","","Get the data_offset field.",44,[[["self"]],["u4"]]],[11,"get_reserved","","Get the reserved field.",44,[[["self"]],["u3"]]],[11,"get_flags","","Get the flags field. This field is always stored…",44,[[["self"]],["u9be"]]],[11,"get_window","","Get the window field. This field is always stored…",44,[[["self"]],["u16be"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",44,[[["self"]],["u16be"]]],[11,"get_urgent_ptr","","Get the urgent_ptr field. This field is always stored…",44,[[["self"]],["u16be"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",44,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",44,[[["self"]],[["tcpoption"],["vec",["tcpoption"]]]]],[11,"get_options_iter","","Get the value of the options field as iterator",44,[[["self"]],["tcpoptioniterable"]]],[11,"set_source","","Set the source field. This field is always stored…",44,[[["self"],["u16be"]]]],[11,"set_destination","","Set the destination field. This field is always stored…",44,[[["self"],["u16be"]]]],[11,"set_sequence","","Set the sequence field. This field is always stored…",44,[[["self"],["u32be"]]]],[11,"set_acknowledgement","","Set the acknowledgement field. This field is always stored…",44,[[["self"],["u32be"]]]],[11,"set_data_offset","","Set the data_offset field.",44,[[["self"],["u4"]]]],[11,"set_reserved","","Set the reserved field.",44,[[["self"],["u3"]]]],[11,"set_flags","","Set the flags field. This field is always stored…",44,[[["self"],["u9be"]]]],[11,"set_window","","Set the window field. This field is always stored…",44,[[["self"],["u16be"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",44,[[["self"],["u16be"]]]],[11,"set_urgent_ptr","","Set the urgent_ptr field. This field is always stored…",44,[[["self"],["u16be"]]]],[11,"get_options_raw_mut","","Get the raw &mut [u8] value of the options field, without…",44,[[["self"]]]],[11,"set_options","","Set the value of the options field (copies contents)",44,[[["self"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",44,[[["self"]]]],[11,"new","","Constructs a new TcpOptionPacket. If the provided buffer…",45,[[],[["tcpoptionpacket"],["option",["tcpoptionpacket"]]]]],[11,"owned","","Constructs a new TcpOptionPacket. If the provided buffer…",45,[[["vec",["u8"]],["u8"]],[["tcpoptionpacket"],["option",["tcpoptionpacket"]]]]],[11,"to_immutable","","Maps from a TcpOptionPacket to a TcpOptionPacket",45,[[["self"]],["tcpoptionpacket"]]],[11,"consume_to_immutable","","Maps from a TcpOptionPacket to a TcpOptionPacket while…",45,[[],["tcpoptionpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",45,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a TcpOption instance when converted…",45,[[["tcpoption"]],["usize"]]],[11,"get_number","","Get the value of the number field",45,[[["self"]],["tcpoptionnumber"]]],[11,"get_length_raw","","Get the raw &[u8] value of the length field, without copying",45,[[["self"]]]],[11,"get_length","","Get the value of the length field (copies contents)",45,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"new","","Constructs a new MutableTcpOptionPacket. If the provided…",46,[[],[["mutabletcpoptionpacket"],["option",["mutabletcpoptionpacket"]]]]],[11,"owned","","Constructs a new MutableTcpOptionPacket. If the provided…",46,[[["vec",["u8"]],["u8"]],[["mutabletcpoptionpacket"],["option",["mutabletcpoptionpacket"]]]]],[11,"to_immutable","","Maps from a MutableTcpOptionPacket to a TcpOptionPacket",46,[[["self"]],["tcpoptionpacket"]]],[11,"consume_to_immutable","","Maps from a MutableTcpOptionPacket to a TcpOptionPacket…",46,[[],["tcpoptionpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",46,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a TcpOption instance when converted…",46,[[["tcpoption"]],["usize"]]],[11,"populate","","Populates a TcpOptionPacket using a TcpOption structure",46,[[["self"],["tcpoption"]]]],[11,"get_number","","Get the value of the number field",46,[[["self"]],["tcpoptionnumber"]]],[11,"get_length_raw","","Get the raw &[u8] value of the length field, without copying",46,[[["self"]]]],[11,"get_length","","Get the value of the length field (copies contents)",46,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"set_number","","Set the value of the number field",46,[[["self"],["tcpoptionnumber"]]]],[11,"get_length_raw_mut","","Get the raw &mut [u8] value of the length field, without…",46,[[["self"]]]],[11,"set_length","","Set the value of the length field (copies contents)",46,[[["self"]]]],[11,"set_data","","Set the value of the data field (copies contents)",46,[[["self"]]]],[11,"nop","","NOP: This may be used to align option fields on 32-bit…",47,[[],["self"]]],[11,"timestamp","","Timestamp: TCP timestamps, defined in RFC 1323, can help…",47,[[["u32"]],["self"]]],[11,"mss","","MSS: The maximum segment size (MSS) is the largest amount…",47,[[["u16"]],["self"]]],[11,"wscale","","Window scale: The TCP window scale option, as defined in…",47,[[["u8"]],["self"]]],[11,"sack_perm","","Selective acknowledgment (SACK) option, defined in RFC…",47,[[],["self"]]],[11,"selective_ack","","Selective acknowledgment (SACK) option, defined in RFC…",47,[[],["self"]]],[11,"new","","Create a new `TcpOptionNumber` instance.",42,[[["u8"]],["tcpoptionnumber"]]],[0,"arp","pnet_packet","ARP packet abstraction.",null,null],[3,"ArpOperation","pnet_packet::arp","Represents an ARP operation.",null,null],[12,"0","","",48,null],[3,"ArpHardwareType","","Represents the ARP hardware types.",null,null],[12,"0","","",49,null],[3,"ArpPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableArpPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"ArpIterable","","Used to iterate over a slice of `ArpPacket`s",null,null],[3,"Arp","","Represents an ARP Packet.",null,null],[12,"hardware_type","","",50,null],[12,"protocol_type","","",50,null],[12,"hw_addr_len","","",50,null],[12,"proto_addr_len","","",50,null],[12,"operation","","",50,null],[12,"sender_hw_addr","","",50,null],[12,"sender_proto_addr","","",50,null],[12,"target_hw_addr","","",50,null],[12,"target_proto_addr","","",50,null],[12,"payload","","",50,null],[0,"ArpOperations","","The ARP protocol operations.",null,null],[17,"Request","pnet_packet::arp::ArpOperations","ARP request",null,null],[17,"Reply","","ARP reply",null,null],[0,"ArpHardwareTypes","pnet_packet::arp","The ARP protocol hardware types.",null,null],[17,"Ethernet","pnet_packet::arp::ArpHardwareTypes","Ethernet",null,null],[11,"new","pnet_packet::arp","Create a new `ArpOperation`.",48,[[["u16"]],["self"]]],[11,"new","","Create a new `ArpHardwareType`.",49,[[["u16"]],["self"]]],[11,"new","","Constructs a new ArpPacket. If the provided buffer is less…",51,[[],[["option",["arppacket"]],["arppacket"]]]],[11,"owned","","Constructs a new ArpPacket. If the provided buffer is less…",51,[[["vec",["u8"]],["u8"]],[["arppacket"],["option",["arppacket"]]]]],[11,"to_immutable","","Maps from a ArpPacket to a ArpPacket",51,[[["self"]],["arppacket"]]],[11,"consume_to_immutable","","Maps from a ArpPacket to a ArpPacket while consuming the…",51,[[],["arppacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",51,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Arp instance when converted into…",51,[[["arp"]],["usize"]]],[11,"get_hardware_type","","Get the value of the hardware_type field",51,[[["self"]],["arphardwaretype"]]],[11,"get_protocol_type","","Get the value of the protocol_type field",51,[[["self"]],["ethertype"]]],[11,"get_hw_addr_len","","Get the hw_addr_len field.",51,[[["self"]],["u8"]]],[11,"get_proto_addr_len","","Get the proto_addr_len field.",51,[[["self"]],["u8"]]],[11,"get_operation","","Get the value of the operation field",51,[[["self"]],["arpoperation"]]],[11,"get_sender_hw_addr","","Get the value of the sender_hw_addr field",51,[[["self"]],["macaddr"]]],[11,"get_sender_proto_addr","","Get the value of the sender_proto_addr field",51,[[["self"]],["ipv4addr"]]],[11,"get_target_hw_addr","","Get the value of the target_hw_addr field",51,[[["self"]],["macaddr"]]],[11,"get_target_proto_addr","","Get the value of the target_proto_addr field",51,[[["self"]],["ipv4addr"]]],[11,"new","","Constructs a new MutableArpPacket. If the provided buffer…",52,[[],[["option",["mutablearppacket"]],["mutablearppacket"]]]],[11,"owned","","Constructs a new MutableArpPacket. If the provided buffer…",52,[[["vec",["u8"]],["u8"]],[["mutablearppacket"],["option",["mutablearppacket"]]]]],[11,"to_immutable","","Maps from a MutableArpPacket to a ArpPacket",52,[[["self"]],["arppacket"]]],[11,"consume_to_immutable","","Maps from a MutableArpPacket to a ArpPacket while…",52,[[],["arppacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",52,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Arp instance when converted into…",52,[[["arp"]],["usize"]]],[11,"populate","","Populates a ArpPacket using a Arp structure",52,[[["self"],["arp"]]]],[11,"get_hardware_type","","Get the value of the hardware_type field",52,[[["self"]],["arphardwaretype"]]],[11,"get_protocol_type","","Get the value of the protocol_type field",52,[[["self"]],["ethertype"]]],[11,"get_hw_addr_len","","Get the hw_addr_len field.",52,[[["self"]],["u8"]]],[11,"get_proto_addr_len","","Get the proto_addr_len field.",52,[[["self"]],["u8"]]],[11,"get_operation","","Get the value of the operation field",52,[[["self"]],["arpoperation"]]],[11,"get_sender_hw_addr","","Get the value of the sender_hw_addr field",52,[[["self"]],["macaddr"]]],[11,"get_sender_proto_addr","","Get the value of the sender_proto_addr field",52,[[["self"]],["ipv4addr"]]],[11,"get_target_hw_addr","","Get the value of the target_hw_addr field",52,[[["self"]],["macaddr"]]],[11,"get_target_proto_addr","","Get the value of the target_proto_addr field",52,[[["self"]],["ipv4addr"]]],[11,"set_hardware_type","","Set the value of the hardware_type field",52,[[["self"],["arphardwaretype"]]]],[11,"set_protocol_type","","Set the value of the protocol_type field",52,[[["self"],["ethertype"]]]],[11,"set_hw_addr_len","","Set the hw_addr_len field.",52,[[["self"],["u8"]]]],[11,"set_proto_addr_len","","Set the proto_addr_len field.",52,[[["self"],["u8"]]]],[11,"set_operation","","Set the value of the operation field",52,[[["arpoperation"],["self"]]]],[11,"set_sender_hw_addr","","Set the value of the sender_hw_addr field",52,[[["macaddr"],["self"]]]],[11,"set_sender_proto_addr","","Set the value of the sender_proto_addr field",52,[[["ipv4addr"],["self"]]]],[11,"set_target_hw_addr","","Set the value of the target_hw_addr field",52,[[["macaddr"],["self"]]]],[11,"set_target_proto_addr","","Set the value of the target_proto_addr field",52,[[["ipv4addr"],["self"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",52,[[["self"]]]],[0,"icmp","pnet_packet","An ICMP packet abstraction.",null,null],[3,"IcmpType","pnet_packet::icmp","Represents the \"ICMP type\" header field.",null,null],[12,"0","","",53,null],[3,"IcmpCode","","Represents the \"ICMP code\" header field.",null,null],[12,"0","","",54,null],[3,"IcmpPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableIcmpPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"IcmpIterable","","Used to iterate over a slice of `IcmpPacket`s",null,null],[3,"Icmp","","Represents a generic ICMP packet.",null,null],[12,"icmp_type","","",55,null],[12,"icmp_code","","",55,null],[12,"checksum","","",55,null],[12,"payload","","",55,null],[5,"checksum","","Calculates a checksum of an ICMP packet.",null,[[["icmppacket"]],["u16be"]]],[0,"IcmpTypes","","The enumeration of the recognized ICMP types.",null,null],[17,"EchoReply","pnet_packet::icmp::IcmpTypes","ICMP type for \"echo reply\" packet.",null,null],[17,"DestinationUnreachable","","ICMP type for \"destination unreachable\" packet.",null,null],[17,"SourceQuench","","ICMP type for \"source quench\" packet.",null,null],[17,"RedirectMessage","","ICMP type for \"redirect message\" packet.",null,null],[17,"EchoRequest","","ICMP type for \"echo request\" packet.",null,null],[17,"RouterAdvertisement","","ICMP type for \"router advertisement\" packet.",null,null],[17,"RouterSolicitation","","ICMP type for \"router solicitation\" packet.",null,null],[17,"TimeExceeded","","ICMP type for \"time exceeded\" packet.",null,null],[17,"ParameterProblem","","ICMP type for \"parameter problem\" packet.",null,null],[17,"Timestamp","","ICMP type for \"timestamp\" packet.",null,null],[17,"TimestampReply","","ICMP type for \"timestamp reply\" packet.",null,null],[17,"InformationRequest","","ICMP type for \"information request\" packet.",null,null],[17,"InformationReply","","ICMP type for \"information reply\" packet.",null,null],[17,"AddressMaskRequest","","ICMP type for \"address mask request\" packet.",null,null],[17,"AddressMaskReply","","ICMP type for \"address mask reply\" packet.",null,null],[17,"Traceroute","","ICMP type for \"traceroute\" packet.",null,null],[0,"echo_reply","pnet_packet::icmp","abstraction for ICMP \"echo reply\" packets.",null,null],[3,"Identifier","pnet_packet::icmp::echo_reply","Represent the \"identifier\" field of the ICMP echo replay…",null,null],[12,"0","","",56,null],[3,"SequenceNumber","","Represent the \"sequence number\" field of the ICMP echo…",null,null],[12,"0","","",57,null],[3,"EchoReplyPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableEchoReplyPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"EchoReplyIterable","","Used to iterate over a slice of `EchoReplyPacket`s",null,null],[3,"EchoReply","","Represents an ICMP echo reply packet.",null,null],[12,"icmp_type","","",58,null],[12,"icmp_code","","",58,null],[12,"checksum","","",58,null],[12,"identifier","","",58,null],[12,"sequence_number","","",58,null],[12,"payload","","",58,null],[0,"IcmpCodes","","Enumeration of available ICMP codes for ICMP echo replay…",null,null],[17,"NoCode","pnet_packet::icmp::echo_reply::IcmpCodes","0 is the only available ICMP code for \"echo reply\" ICMP…",null,null],[11,"new","pnet_packet::icmp::echo_reply","Create a new `Identifier` instance.",56,[[["u16"]],["identifier"]]],[11,"new","","Create a new `SequenceNumber` instance.",57,[[["u16"]],["sequencenumber"]]],[11,"new","","Constructs a new EchoReplyPacket. If the provided buffer…",59,[[],[["option",["echoreplypacket"]],["echoreplypacket"]]]],[11,"owned","","Constructs a new EchoReplyPacket. If the provided buffer…",59,[[["vec",["u8"]],["u8"]],[["option",["echoreplypacket"]],["echoreplypacket"]]]],[11,"to_immutable","","Maps from a EchoReplyPacket to a EchoReplyPacket",59,[[["self"]],["echoreplypacket"]]],[11,"consume_to_immutable","","Maps from a EchoReplyPacket to a EchoReplyPacket while…",59,[[],["echoreplypacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",59,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a EchoReply instance when converted…",59,[[["echoreply"]],["usize"]]],[11,"get_icmp_type","","Get the value of the icmp_type field",59,[[["self"]],["icmptype"]]],[11,"get_icmp_code","","Get the value of the icmp_code field",59,[[["self"]],["icmpcode"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",59,[[["self"]],["u16be"]]],[11,"get_identifier","","Get the identifier field. This field is always stored…",59,[[["self"]],["u16be"]]],[11,"get_sequence_number","","Get the sequence_number field. This field is always stored…",59,[[["self"]],["u16be"]]],[11,"new","","Constructs a new MutableEchoReplyPacket. If the provided…",60,[[],[["option",["mutableechoreplypacket"]],["mutableechoreplypacket"]]]],[11,"owned","","Constructs a new MutableEchoReplyPacket. If the provided…",60,[[["vec",["u8"]],["u8"]],[["mutableechoreplypacket"],["option",["mutableechoreplypacket"]]]]],[11,"to_immutable","","Maps from a MutableEchoReplyPacket to a EchoReplyPacket",60,[[["self"]],["echoreplypacket"]]],[11,"consume_to_immutable","","Maps from a MutableEchoReplyPacket to a EchoReplyPacket…",60,[[],["echoreplypacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",60,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a EchoReply instance when converted…",60,[[["echoreply"]],["usize"]]],[11,"populate","","Populates a EchoReplyPacket using a EchoReply structure",60,[[["echoreply"],["self"]]]],[11,"get_icmp_type","","Get the value of the icmp_type field",60,[[["self"]],["icmptype"]]],[11,"get_icmp_code","","Get the value of the icmp_code field",60,[[["self"]],["icmpcode"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",60,[[["self"]],["u16be"]]],[11,"get_identifier","","Get the identifier field. This field is always stored…",60,[[["self"]],["u16be"]]],[11,"get_sequence_number","","Get the sequence_number field. This field is always stored…",60,[[["self"]],["u16be"]]],[11,"set_icmp_type","","Set the value of the icmp_type field",60,[[["self"],["icmptype"]]]],[11,"set_icmp_code","","Set the value of the icmp_code field",60,[[["self"],["icmpcode"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",60,[[["self"],["u16be"]]]],[11,"set_identifier","","Set the identifier field. This field is always stored…",60,[[["self"],["u16be"]]]],[11,"set_sequence_number","","Set the sequence_number field. This field is always stored…",60,[[["self"],["u16be"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",60,[[["self"]]]],[0,"echo_request","pnet_packet::icmp","abstraction for \"echo request\" ICMP packets.",null,null],[3,"Identifier","pnet_packet::icmp::echo_request","Represents the identifier field.",null,null],[12,"0","","",61,null],[3,"SequenceNumber","","Represents the sequence number field.",null,null],[12,"0","","",62,null],[3,"EchoRequestPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableEchoRequestPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"EchoRequestIterable","","Used to iterate over a slice of `EchoRequestPacket`s",null,null],[3,"EchoRequest","","Represents an \"echo request\" ICMP packet.",null,null],[12,"icmp_type","","",63,null],[12,"icmp_code","","",63,null],[12,"checksum","","",63,null],[12,"identifier","","",63,null],[12,"sequence_number","","",63,null],[12,"payload","","",63,null],[0,"IcmpCodes","","Enumeration of available ICMP codes for \"echo reply\" ICMP…",null,null],[17,"NoCode","pnet_packet::icmp::echo_request::IcmpCodes","0 is the only available ICMP code for \"echo reply\" ICMP…",null,null],[11,"new","pnet_packet::icmp::echo_request","Create a new `Identifier` instance.",61,[[["u16"]],["identifier"]]],[11,"new","","Create a new `SequenceNumber` instance.",62,[[["u16"]],["sequencenumber"]]],[11,"new","","Constructs a new EchoRequestPacket. If the provided buffer…",64,[[],[["option",["echorequestpacket"]],["echorequestpacket"]]]],[11,"owned","","Constructs a new EchoRequestPacket. If the provided buffer…",64,[[["vec",["u8"]],["u8"]],[["echorequestpacket"],["option",["echorequestpacket"]]]]],[11,"to_immutable","","Maps from a EchoRequestPacket to a EchoRequestPacket",64,[[["self"]],["echorequestpacket"]]],[11,"consume_to_immutable","","Maps from a EchoRequestPacket to a EchoRequestPacket while…",64,[[],["echorequestpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",64,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a EchoRequest instance when…",64,[[["echorequest"]],["usize"]]],[11,"get_icmp_type","","Get the value of the icmp_type field",64,[[["self"]],["icmptype"]]],[11,"get_icmp_code","","Get the value of the icmp_code field",64,[[["self"]],["icmpcode"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",64,[[["self"]],["u16be"]]],[11,"get_identifier","","Get the identifier field. This field is always stored…",64,[[["self"]],["u16be"]]],[11,"get_sequence_number","","Get the sequence_number field. This field is always stored…",64,[[["self"]],["u16be"]]],[11,"new","","Constructs a new MutableEchoRequestPacket. If the provided…",65,[[],[["option",["mutableechorequestpacket"]],["mutableechorequestpacket"]]]],[11,"owned","","Constructs a new MutableEchoRequestPacket. If the provided…",65,[[["vec",["u8"]],["u8"]],[["option",["mutableechorequestpacket"]],["mutableechorequestpacket"]]]],[11,"to_immutable","","Maps from a MutableEchoRequestPacket to a EchoRequestPacket",65,[[["self"]],["echorequestpacket"]]],[11,"consume_to_immutable","","Maps from a MutableEchoRequestPacket to a…",65,[[],["echorequestpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",65,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a EchoRequest instance when…",65,[[["echorequest"]],["usize"]]],[11,"populate","","Populates a EchoRequestPacket using a EchoRequest structure",65,[[["echorequest"],["self"]]]],[11,"get_icmp_type","","Get the value of the icmp_type field",65,[[["self"]],["icmptype"]]],[11,"get_icmp_code","","Get the value of the icmp_code field",65,[[["self"]],["icmpcode"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",65,[[["self"]],["u16be"]]],[11,"get_identifier","","Get the identifier field. This field is always stored…",65,[[["self"]],["u16be"]]],[11,"get_sequence_number","","Get the sequence_number field. This field is always stored…",65,[[["self"]],["u16be"]]],[11,"set_icmp_type","","Set the value of the icmp_type field",65,[[["self"],["icmptype"]]]],[11,"set_icmp_code","","Set the value of the icmp_code field",65,[[["self"],["icmpcode"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",65,[[["self"],["u16be"]]]],[11,"set_identifier","","Set the identifier field. This field is always stored…",65,[[["self"],["u16be"]]]],[11,"set_sequence_number","","Set the sequence_number field. This field is always stored…",65,[[["self"],["u16be"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",65,[[["self"]]]],[0,"destination_unreachable","pnet_packet::icmp","abstraction for \"destination unreachable\" ICMP packets.",null,null],[3,"DestinationUnreachablePacket","pnet_packet::icmp::destination_unreachable","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableDestinationUnreachablePacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"DestinationUnreachableIterable","","Used to iterate over a slice of…",null,null],[3,"DestinationUnreachable","","Represents an \"echo request\" ICMP packet.",null,null],[12,"icmp_type","","",66,null],[12,"icmp_code","","",66,null],[12,"checksum","","",66,null],[12,"unused","","",66,null],[12,"payload","","",66,null],[0,"IcmpCodes","","Enumeration of the recognized ICMP codes for \"destination…",null,null],[17,"DestinationNetworkUnreachable","pnet_packet::icmp::destination_unreachable::IcmpCodes","ICMP code for \"destination network unreachable\" packet.",null,null],[17,"DestinationHostUnreachable","","ICMP code for \"destination host unreachable\" packet.",null,null],[17,"DestinationProtocolUnreachable","","ICMP code for \"destination protocol unreachable\" packet.",null,null],[17,"DestinationPortUnreachable","","ICMP code for \"destination port unreachable\" packet.",null,null],[17,"FragmentationRequiredAndDFFlagSet","","ICMP code for \"fragmentation required and DFF flag set\"…",null,null],[17,"SourceRouteFailed","","ICMP code for \"source route failed\" packet.",null,null],[17,"DestinationNetworkUnknown","","ICMP code for \"destination network unknown\" packet.",null,null],[17,"DestinationHostUnknown","","ICMP code for \"destination host unknown\" packet.",null,null],[17,"SourceHostIsolated","","ICMP code for \"source host isolated\" packet.",null,null],[17,"NetworkAdministrativelyProhibited","","ICMP code for \"network administrative prohibited\" packet.",null,null],[17,"HostAdministrativelyProhibited","","ICMP code for \"host administrative prohibited\" packet.",null,null],[17,"NetworkUnreachableForTOS","","ICMP code for \"network unreachable for this Type Of…",null,null],[17,"HostUnreachableForTOS","","ICMP code for \"host unreachable for this Type Of Service\"…",null,null],[17,"CommunicationAdministrativelyProhibited","","ICMP code for \"communication administratively prohibited\"…",null,null],[17,"HostPrecedenceViolation","","ICMP code for \"host precedence violation\" packet.",null,null],[17,"PrecedenceCutoffInEffect","","ICMP code for \"precedence cut off in effect\" packet.",null,null],[11,"new","pnet_packet::icmp::destination_unreachable","Constructs a new DestinationUnreachablePacket. If the…",67,[[],[["option",["destinationunreachablepacket"]],["destinationunreachablepacket"]]]],[11,"owned","","Constructs a new DestinationUnreachablePacket. If the…",67,[[["vec",["u8"]],["u8"]],[["option",["destinationunreachablepacket"]],["destinationunreachablepacket"]]]],[11,"to_immutable","","Maps from a DestinationUnreachablePacket to a…",67,[[["self"]],["destinationunreachablepacket"]]],[11,"consume_to_immutable","","Maps from a DestinationUnreachablePacket to a…",67,[[],["destinationunreachablepacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",67,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a DestinationUnreachable instance…",67,[[["destinationunreachable"]],["usize"]]],[11,"get_icmp_type","","Get the value of the icmp_type field",67,[[["self"]],["icmptype"]]],[11,"get_icmp_code","","Get the value of the icmp_code field",67,[[["self"]],["icmpcode"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",67,[[["self"]],["u16be"]]],[11,"get_unused","","Get the unused field. This field is always stored…",67,[[["self"]],["u32be"]]],[11,"new","","Constructs a new MutableDestinationUnreachablePacket. If…",68,[[],[["option",["mutabledestinationunreachablepacket"]],["mutabledestinationunreachablepacket"]]]],[11,"owned","","Constructs a new MutableDestinationUnreachablePacket. If…",68,[[["vec",["u8"]],["u8"]],[["mutabledestinationunreachablepacket"],["option",["mutabledestinationunreachablepacket"]]]]],[11,"to_immutable","","Maps from a MutableDestinationUnreachablePacket to a…",68,[[["self"]],["destinationunreachablepacket"]]],[11,"consume_to_immutable","","Maps from a MutableDestinationUnreachablePacket to a…",68,[[],["destinationunreachablepacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",68,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a DestinationUnreachable instance…",68,[[["destinationunreachable"]],["usize"]]],[11,"populate","","Populates a DestinationUnreachablePacket using a…",68,[[["self"],["destinationunreachable"]]]],[11,"get_icmp_type","","Get the value of the icmp_type field",68,[[["self"]],["icmptype"]]],[11,"get_icmp_code","","Get the value of the icmp_code field",68,[[["self"]],["icmpcode"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",68,[[["self"]],["u16be"]]],[11,"get_unused","","Get the unused field. This field is always stored…",68,[[["self"]],["u32be"]]],[11,"set_icmp_type","","Set the value of the icmp_type field",68,[[["self"],["icmptype"]]]],[11,"set_icmp_code","","Set the value of the icmp_code field",68,[[["self"],["icmpcode"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",68,[[["self"],["u16be"]]]],[11,"set_unused","","Set the unused field. This field is always stored…",68,[[["self"],["u32be"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",68,[[["self"]]]],[0,"time_exceeded","pnet_packet::icmp","abstraction for \"time exceeded\" ICMP packets.",null,null],[3,"TimeExceededPacket","pnet_packet::icmp::time_exceeded","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableTimeExceededPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"TimeExceededIterable","","Used to iterate over a slice of `TimeExceededPacket`s",null,null],[3,"TimeExceeded","","Represents an \"echo request\" ICMP packet.",null,null],[12,"icmp_type","","",69,null],[12,"icmp_code","","",69,null],[12,"checksum","","",69,null],[12,"unused","","",69,null],[12,"payload","","",69,null],[0,"IcmpCodes","","Enumeration of the recognized ICMP codes for \"time…",null,null],[17,"TimeToLiveExceededInTransit","pnet_packet::icmp::time_exceeded::IcmpCodes","ICMP code for \"time to live exceeded in transit\" packet.",null,null],[17,"FragmentReasemblyTimeExceeded","","ICMP code for \"fragment reassembly time exceeded\" packet.",null,null],[11,"new","pnet_packet::icmp::time_exceeded","Constructs a new TimeExceededPacket. If the provided…",70,[[],[["option",["timeexceededpacket"]],["timeexceededpacket"]]]],[11,"owned","","Constructs a new TimeExceededPacket. If the provided…",70,[[["vec",["u8"]],["u8"]],[["timeexceededpacket"],["option",["timeexceededpacket"]]]]],[11,"to_immutable","","Maps from a TimeExceededPacket to a TimeExceededPacket",70,[[["self"]],["timeexceededpacket"]]],[11,"consume_to_immutable","","Maps from a TimeExceededPacket to a TimeExceededPacket…",70,[[],["timeexceededpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",70,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a TimeExceeded instance when…",70,[[["timeexceeded"]],["usize"]]],[11,"get_icmp_type","","Get the value of the icmp_type field",70,[[["self"]],["icmptype"]]],[11,"get_icmp_code","","Get the value of the icmp_code field",70,[[["self"]],["icmpcode"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",70,[[["self"]],["u16be"]]],[11,"get_unused","","Get the unused field. This field is always stored…",70,[[["self"]],["u32be"]]],[11,"new","","Constructs a new MutableTimeExceededPacket. If the…",71,[[],[["option",["mutabletimeexceededpacket"]],["mutabletimeexceededpacket"]]]],[11,"owned","","Constructs a new MutableTimeExceededPacket. If the…",71,[[["vec",["u8"]],["u8"]],[["mutabletimeexceededpacket"],["option",["mutabletimeexceededpacket"]]]]],[11,"to_immutable","","Maps from a MutableTimeExceededPacket to a…",71,[[["self"]],["timeexceededpacket"]]],[11,"consume_to_immutable","","Maps from a MutableTimeExceededPacket to a…",71,[[],["timeexceededpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",71,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a TimeExceeded instance when…",71,[[["timeexceeded"]],["usize"]]],[11,"populate","","Populates a TimeExceededPacket using a TimeExceeded…",71,[[["self"],["timeexceeded"]]]],[11,"get_icmp_type","","Get the value of the icmp_type field",71,[[["self"]],["icmptype"]]],[11,"get_icmp_code","","Get the value of the icmp_code field",71,[[["self"]],["icmpcode"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",71,[[["self"]],["u16be"]]],[11,"get_unused","","Get the unused field. This field is always stored…",71,[[["self"]],["u32be"]]],[11,"set_icmp_type","","Set the value of the icmp_type field",71,[[["self"],["icmptype"]]]],[11,"set_icmp_code","","Set the value of the icmp_code field",71,[[["self"],["icmpcode"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",71,[[["self"],["u16be"]]]],[11,"set_unused","","Set the unused field. This field is always stored…",71,[[["self"],["u32be"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",71,[[["self"]]]],[11,"new","pnet_packet::icmp","Create a new `IcmpType` instance.",53,[[["u8"]],["icmptype"]]],[11,"new","","Create a new `IcmpCode` instance.",54,[[["u8"]],["icmpcode"]]],[11,"new","","Constructs a new IcmpPacket. If the provided buffer is…",72,[[],[["option",["icmppacket"]],["icmppacket"]]]],[11,"owned","","Constructs a new IcmpPacket. If the provided buffer is…",72,[[["vec",["u8"]],["u8"]],[["icmppacket"],["option",["icmppacket"]]]]],[11,"to_immutable","","Maps from a IcmpPacket to a IcmpPacket",72,[[["self"]],["icmppacket"]]],[11,"consume_to_immutable","","Maps from a IcmpPacket to a IcmpPacket while consuming the…",72,[[],["icmppacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",72,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Icmp instance when converted into…",72,[[["icmp"]],["usize"]]],[11,"get_icmp_type","","Get the value of the icmp_type field",72,[[["self"]],["icmptype"]]],[11,"get_icmp_code","","Get the value of the icmp_code field",72,[[["self"]],["icmpcode"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",72,[[["self"]],["u16be"]]],[11,"new","","Constructs a new MutableIcmpPacket. If the provided buffer…",73,[[],[["option",["mutableicmppacket"]],["mutableicmppacket"]]]],[11,"owned","","Constructs a new MutableIcmpPacket. If the provided buffer…",73,[[["vec",["u8"]],["u8"]],[["mutableicmppacket"],["option",["mutableicmppacket"]]]]],[11,"to_immutable","","Maps from a MutableIcmpPacket to a IcmpPacket",73,[[["self"]],["icmppacket"]]],[11,"consume_to_immutable","","Maps from a MutableIcmpPacket to a IcmpPacket while…",73,[[],["icmppacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",73,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Icmp instance when converted into…",73,[[["icmp"]],["usize"]]],[11,"populate","","Populates a IcmpPacket using a Icmp structure",73,[[["self"],["icmp"]]]],[11,"get_icmp_type","","Get the value of the icmp_type field",73,[[["self"]],["icmptype"]]],[11,"get_icmp_code","","Get the value of the icmp_code field",73,[[["self"]],["icmpcode"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",73,[[["self"]],["u16be"]]],[11,"set_icmp_type","","Set the value of the icmp_type field",73,[[["self"],["icmptype"]]]],[11,"set_icmp_code","","Set the value of the icmp_code field",73,[[["self"],["icmpcode"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",73,[[["self"],["u16be"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",73,[[["self"]]]],[0,"icmpv6","pnet_packet","An ICMPv6 packet abstraction.",null,null],[3,"Icmpv6Type","pnet_packet::icmpv6","Represents the \"ICMPv6 type\" header field.",null,null],[12,"0","","",74,null],[3,"Icmpv6Code","","Represents the \"ICMPv6 code\" header field.",null,null],[12,"0","","",75,null],[3,"Icmpv6Packet","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableIcmpv6Packet","","A structure enabling manipulation of on the wire packets",null,null],[3,"Icmpv6Iterable","","Used to iterate over a slice of `Icmpv6Packet`s",null,null],[3,"Icmpv6","","Represents a generic ICMPv6 packet [RFC 4443 § 2.1]",null,null],[12,"icmpv6_type","","",76,null],[12,"icmpv6_code","","",76,null],[12,"checksum","","",76,null],[12,"payload","","",76,null],[5,"checksum","","Calculates a checksum of an ICMPv6 packet.",null,[[["icmpv6packet"],["ipv6addr"]],["u16be"]]],[0,"Icmpv6Types","","The enumeration of the recognized ICMPv6 types.",null,null],[17,"DestinationUnreachable","pnet_packet::icmpv6::Icmpv6Types","ICMPv6 type for \"destination unreachable\".",null,null],[17,"PacketTooBig","","ICMPv6 type for \"packet too big\".",null,null],[17,"TimeExceeded","","ICMPv6 type for \"time exceeded\".",null,null],[17,"ParameterProblem","","ICMPv6 type for \"parameter problem\".",null,null],[17,"EchoRequest","","ICMPv6 type for \"echo request\".",null,null],[17,"EchoReply","","ICMPv6 type for \"echo reply\".",null,null],[17,"RouterSolicit","","ICMPv6 type for \"router solicitation\".",null,null],[17,"RouterAdvert","","ICMPv6 type for \"router advertisement\".",null,null],[17,"NeighborSolicit","","ICMPv6 type for \"neighbor solicitation\".",null,null],[17,"NeighborAdvert","","ICMPv6 type for \"neighbor advertisement\".",null,null],[17,"Redirect","","ICMPv6 type for \"redirect\".",null,null],[0,"ndp","pnet_packet::icmpv6","Abstractions for the Neighbor Discovery Protocol [RFC 4861]",null,null],[3,"NdpOptionType","pnet_packet::icmpv6::ndp","Represents a Neighbor Discovery Option Type.",null,null],[12,"0","","",77,null],[3,"NdpOptionPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableNdpOptionPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"NdpOptionIterable","","Used to iterate over a slice of `NdpOptionPacket`s",null,null],[3,"NdpOption","","Neighbor Discovery Option [RFC 4861 § 4.6]",null,null],[12,"option_type","","",78,null],[12,"length","","",78,null],[12,"data","","",78,null],[3,"RouterSolicitPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableRouterSolicitPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"RouterSolicitIterable","","Used to iterate over a slice of `RouterSolicitPacket`s",null,null],[3,"RouterSolicit","","Router Solicitation Message [RFC 4861 § 4.1]",null,null],[12,"icmpv6_type","","",79,null],[12,"icmpv6_code","","",79,null],[12,"checksum","","",79,null],[12,"reserved","","",79,null],[12,"options","","",79,null],[12,"payload","","",79,null],[3,"RouterAdvertPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableRouterAdvertPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"RouterAdvertIterable","","Used to iterate over a slice of `RouterAdvertPacket`s",null,null],[3,"RouterAdvert","","Router Advertisement Message Format [RFC 4861 § 4.2]",null,null],[12,"icmpv6_type","","",80,null],[12,"icmpv6_code","","",80,null],[12,"checksum","","",80,null],[12,"hop_limit","","",80,null],[12,"flags","","",80,null],[12,"lifetime","","",80,null],[12,"reachable_time","","",80,null],[12,"retrans_time","","",80,null],[12,"options","","",80,null],[12,"payload","","",80,null],[3,"NeighborSolicitPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableNeighborSolicitPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"NeighborSolicitIterable","","Used to iterate over a slice of `NeighborSolicitPacket`s",null,null],[3,"NeighborSolicit","","Neighbor Solicitation Message Format [RFC 4861 § 4.3]",null,null],[12,"icmpv6_type","","",81,null],[12,"icmpv6_code","","",81,null],[12,"checksum","","",81,null],[12,"reserved","","",81,null],[12,"target_addr","","",81,null],[12,"options","","",81,null],[12,"payload","","",81,null],[3,"NeighborAdvertPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableNeighborAdvertPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"NeighborAdvertIterable","","Used to iterate over a slice of `NeighborAdvertPacket`s",null,null],[3,"NeighborAdvert","","Neighbor Advertisement Message Format [RFC 4861 § 4.4]",null,null],[12,"icmpv6_type","","",82,null],[12,"icmpv6_code","","",82,null],[12,"checksum","","",82,null],[12,"flags","","",82,null],[12,"reserved","","",82,null],[12,"target_addr","","",82,null],[12,"options","","",82,null],[12,"payload","","",82,null],[3,"RedirectPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableRedirectPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"RedirectIterable","","Used to iterate over a slice of `RedirectPacket`s",null,null],[3,"Redirect","","Redirect Message Format [RFC 4861 § 4.5]",null,null],[12,"icmpv6_type","","",83,null],[12,"icmpv6_code","","",83,null],[12,"checksum","","",83,null],[12,"reserved","","",83,null],[12,"target_addr","","",83,null],[12,"dest_addr","","",83,null],[12,"options","","",83,null],[12,"payload","","",83,null],[0,"Icmpv6Codes","","",null,null],[17,"NoCode","pnet_packet::icmpv6::ndp::Icmpv6Codes","0 is the only available ICMPv6 Code for the NDP.",null,null],[0,"NdpOptionTypes","pnet_packet::icmpv6::ndp","Neighbor Discovery Option Types [RFC 4861 § 4.6]",null,null],[17,"SourceLLAddr","pnet_packet::icmpv6::ndp::NdpOptionTypes","Source Link-Layer Address Option [RFC 4861 § 4.6.1]",null,null],[17,"TargetLLAddr","","Target Link-Layer Address Option [RFC 4861 § 4.6.1]",null,null],[17,"PrefixInformation","","Prefix Information Option [RFC 4861 § 4.6.2]",null,null],[17,"RedirectedHeader","","Redirected Header Option [RFC 4861 § 4.6.3]",null,null],[17,"MTU","","MTU Option [RFC 4861 § 4.6.4]",null,null],[0,"RouterAdvertFlags","pnet_packet::icmpv6::ndp","The enumeration of recognized Router Advert flags.",null,null],[17,"ManagedAddressConf","pnet_packet::icmpv6::ndp::RouterAdvertFlags","\"Managed Address Configuration\" flag. This is set when…",null,null],[17,"OtherConf","","\"Other Configuration\" flag. This is set when other…",null,null],[0,"NeighborAdvertFlags","pnet_packet::icmpv6::ndp","Enumeration of recognized Neighbor Advert flags.",null,null],[17,"Router","pnet_packet::icmpv6::ndp::NeighborAdvertFlags","Indicates that the sender is a router.",null,null],[17,"Solicited","","Indicates that the advertisement was sent due to the…",null,null],[17,"Override","","Indicates that the advertisement should override an…",null,null],[11,"new","pnet_packet::icmpv6::ndp","Create a new `NdpOptionType` instance.",77,[[["u8"]],["ndpoptiontype"]]],[11,"new","","Constructs a new NdpOptionPacket. If the provided buffer…",84,[[],[["option",["ndpoptionpacket"]],["ndpoptionpacket"]]]],[11,"owned","","Constructs a new NdpOptionPacket. If the provided buffer…",84,[[["vec",["u8"]],["u8"]],[["option",["ndpoptionpacket"]],["ndpoptionpacket"]]]],[11,"to_immutable","","Maps from a NdpOptionPacket to a NdpOptionPacket",84,[[["self"]],["ndpoptionpacket"]]],[11,"consume_to_immutable","","Maps from a NdpOptionPacket to a NdpOptionPacket while…",84,[[],["ndpoptionpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",84,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a NdpOption instance when converted…",84,[[["ndpoption"]],["usize"]]],[11,"get_option_type","","Get the value of the option_type field",84,[[["self"]],["ndpoptiontype"]]],[11,"get_length","","Get the length field.",84,[[["self"]],["u8"]]],[11,"new","","Constructs a new MutableNdpOptionPacket. If the provided…",85,[[],[["option",["mutablendpoptionpacket"]],["mutablendpoptionpacket"]]]],[11,"owned","","Constructs a new MutableNdpOptionPacket. If the provided…",85,[[["vec",["u8"]],["u8"]],[["mutablendpoptionpacket"],["option",["mutablendpoptionpacket"]]]]],[11,"to_immutable","","Maps from a MutableNdpOptionPacket to a NdpOptionPacket",85,[[["self"]],["ndpoptionpacket"]]],[11,"consume_to_immutable","","Maps from a MutableNdpOptionPacket to a NdpOptionPacket…",85,[[],["ndpoptionpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",85,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a NdpOption instance when converted…",85,[[["ndpoption"]],["usize"]]],[11,"populate","","Populates a NdpOptionPacket using a NdpOption structure",85,[[["self"],["ndpoption"]]]],[11,"get_option_type","","Get the value of the option_type field",85,[[["self"]],["ndpoptiontype"]]],[11,"get_length","","Get the length field.",85,[[["self"]],["u8"]]],[11,"set_option_type","","Set the value of the option_type field",85,[[["self"],["ndpoptiontype"]]]],[11,"set_length","","Set the length field.",85,[[["self"],["u8"]]]],[11,"set_data","","Set the value of the data field (copies contents)",85,[[["self"]]]],[11,"new","","Constructs a new RouterSolicitPacket. If the provided…",86,[[],[["option",["routersolicitpacket"]],["routersolicitpacket"]]]],[11,"owned","","Constructs a new RouterSolicitPacket. If the provided…",86,[[["vec",["u8"]],["u8"]],[["option",["routersolicitpacket"]],["routersolicitpacket"]]]],[11,"to_immutable","","Maps from a RouterSolicitPacket to a RouterSolicitPacket",86,[[["self"]],["routersolicitpacket"]]],[11,"consume_to_immutable","","Maps from a RouterSolicitPacket to a RouterSolicitPacket…",86,[[],["routersolicitpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",86,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a RouterSolicit instance when…",86,[[["routersolicit"]],["usize"]]],[11,"get_icmpv6_type","","Get the value of the icmpv6_type field",86,[[["self"]],["icmpv6type"]]],[11,"get_icmpv6_code","","Get the value of the icmpv6_code field",86,[[["self"]],["icmpv6code"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",86,[[["self"]],["u16be"]]],[11,"get_reserved","","Get the reserved field. This field is always stored…",86,[[["self"]],["u32be"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",86,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",86,[[["self"]],[["vec",["ndpoption"]],["ndpoption"]]]],[11,"get_options_iter","","Get the value of the options field as iterator",86,[[["self"]],["ndpoptioniterable"]]],[11,"new","","Constructs a new MutableRouterSolicitPacket. If the…",87,[[],[["mutableroutersolicitpacket"],["option",["mutableroutersolicitpacket"]]]]],[11,"owned","","Constructs a new MutableRouterSolicitPacket. If the…",87,[[["vec",["u8"]],["u8"]],[["mutableroutersolicitpacket"],["option",["mutableroutersolicitpacket"]]]]],[11,"to_immutable","","Maps from a MutableRouterSolicitPacket to a…",87,[[["self"]],["routersolicitpacket"]]],[11,"consume_to_immutable","","Maps from a MutableRouterSolicitPacket to a…",87,[[],["routersolicitpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",87,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a RouterSolicit instance when…",87,[[["routersolicit"]],["usize"]]],[11,"populate","","Populates a RouterSolicitPacket using a RouterSolicit…",87,[[["self"],["routersolicit"]]]],[11,"get_icmpv6_type","","Get the value of the icmpv6_type field",87,[[["self"]],["icmpv6type"]]],[11,"get_icmpv6_code","","Get the value of the icmpv6_code field",87,[[["self"]],["icmpv6code"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",87,[[["self"]],["u16be"]]],[11,"get_reserved","","Get the reserved field. This field is always stored…",87,[[["self"]],["u32be"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",87,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",87,[[["self"]],[["vec",["ndpoption"]],["ndpoption"]]]],[11,"get_options_iter","","Get the value of the options field as iterator",87,[[["self"]],["ndpoptioniterable"]]],[11,"set_icmpv6_type","","Set the value of the icmpv6_type field",87,[[["self"],["icmpv6type"]]]],[11,"set_icmpv6_code","","Set the value of the icmpv6_code field",87,[[["self"],["icmpv6code"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",87,[[["self"],["u16be"]]]],[11,"set_reserved","","Set the reserved field. This field is always stored…",87,[[["self"],["u32be"]]]],[11,"get_options_raw_mut","","Get the raw &mut [u8] value of the options field, without…",87,[[["self"]]]],[11,"set_options","","Set the value of the options field (copies contents)",87,[[["self"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",87,[[["self"]]]],[11,"new","","Constructs a new RouterAdvertPacket. If the provided…",88,[[],[["option",["routeradvertpacket"]],["routeradvertpacket"]]]],[11,"owned","","Constructs a new RouterAdvertPacket. If the provided…",88,[[["vec",["u8"]],["u8"]],[["option",["routeradvertpacket"]],["routeradvertpacket"]]]],[11,"to_immutable","","Maps from a RouterAdvertPacket to a RouterAdvertPacket",88,[[["self"]],["routeradvertpacket"]]],[11,"consume_to_immutable","","Maps from a RouterAdvertPacket to a RouterAdvertPacket…",88,[[],["routeradvertpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",88,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a RouterAdvert instance when…",88,[[["routeradvert"]],["usize"]]],[11,"get_icmpv6_type","","Get the value of the icmpv6_type field",88,[[["self"]],["icmpv6type"]]],[11,"get_icmpv6_code","","Get the value of the icmpv6_code field",88,[[["self"]],["icmpv6code"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",88,[[["self"]],["u16be"]]],[11,"get_hop_limit","","Get the hop_limit field.",88,[[["self"]],["u8"]]],[11,"get_flags","","Get the flags field.",88,[[["self"]],["u8"]]],[11,"get_lifetime","","Get the lifetime field. This field is always stored…",88,[[["self"]],["u16be"]]],[11,"get_reachable_time","","Get the reachable_time field. This field is always stored…",88,[[["self"]],["u32be"]]],[11,"get_retrans_time","","Get the retrans_time field. This field is always stored…",88,[[["self"]],["u32be"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",88,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",88,[[["self"]],[["vec",["ndpoption"]],["ndpoption"]]]],[11,"get_options_iter","","Get the value of the options field as iterator",88,[[["self"]],["ndpoptioniterable"]]],[11,"new","","Constructs a new MutableRouterAdvertPacket. If the…",89,[[],[["option",["mutablerouteradvertpacket"]],["mutablerouteradvertpacket"]]]],[11,"owned","","Constructs a new MutableRouterAdvertPacket. If the…",89,[[["vec",["u8"]],["u8"]],[["option",["mutablerouteradvertpacket"]],["mutablerouteradvertpacket"]]]],[11,"to_immutable","","Maps from a MutableRouterAdvertPacket to a…",89,[[["self"]],["routeradvertpacket"]]],[11,"consume_to_immutable","","Maps from a MutableRouterAdvertPacket to a…",89,[[],["routeradvertpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",89,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a RouterAdvert instance when…",89,[[["routeradvert"]],["usize"]]],[11,"populate","","Populates a RouterAdvertPacket using a RouterAdvert…",89,[[["self"],["routeradvert"]]]],[11,"get_icmpv6_type","","Get the value of the icmpv6_type field",89,[[["self"]],["icmpv6type"]]],[11,"get_icmpv6_code","","Get the value of the icmpv6_code field",89,[[["self"]],["icmpv6code"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",89,[[["self"]],["u16be"]]],[11,"get_hop_limit","","Get the hop_limit field.",89,[[["self"]],["u8"]]],[11,"get_flags","","Get the flags field.",89,[[["self"]],["u8"]]],[11,"get_lifetime","","Get the lifetime field. This field is always stored…",89,[[["self"]],["u16be"]]],[11,"get_reachable_time","","Get the reachable_time field. This field is always stored…",89,[[["self"]],["u32be"]]],[11,"get_retrans_time","","Get the retrans_time field. This field is always stored…",89,[[["self"]],["u32be"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",89,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",89,[[["self"]],[["vec",["ndpoption"]],["ndpoption"]]]],[11,"get_options_iter","","Get the value of the options field as iterator",89,[[["self"]],["ndpoptioniterable"]]],[11,"set_icmpv6_type","","Set the value of the icmpv6_type field",89,[[["self"],["icmpv6type"]]]],[11,"set_icmpv6_code","","Set the value of the icmpv6_code field",89,[[["self"],["icmpv6code"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",89,[[["self"],["u16be"]]]],[11,"set_hop_limit","","Set the hop_limit field.",89,[[["self"],["u8"]]]],[11,"set_flags","","Set the flags field.",89,[[["self"],["u8"]]]],[11,"set_lifetime","","Set the lifetime field. This field is always stored…",89,[[["self"],["u16be"]]]],[11,"set_reachable_time","","Set the reachable_time field. This field is always stored…",89,[[["self"],["u32be"]]]],[11,"set_retrans_time","","Set the retrans_time field. This field is always stored…",89,[[["self"],["u32be"]]]],[11,"get_options_raw_mut","","Get the raw &mut [u8] value of the options field, without…",89,[[["self"]]]],[11,"set_options","","Set the value of the options field (copies contents)",89,[[["self"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",89,[[["self"]]]],[11,"new","","Constructs a new NeighborSolicitPacket. If the provided…",90,[[],[["neighborsolicitpacket"],["option",["neighborsolicitpacket"]]]]],[11,"owned","","Constructs a new NeighborSolicitPacket. If the provided…",90,[[["vec",["u8"]],["u8"]],[["neighborsolicitpacket"],["option",["neighborsolicitpacket"]]]]],[11,"to_immutable","","Maps from a NeighborSolicitPacket to a NeighborSolicitPacket",90,[[["self"]],["neighborsolicitpacket"]]],[11,"consume_to_immutable","","Maps from a NeighborSolicitPacket to a…",90,[[],["neighborsolicitpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",90,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a NeighborSolicit instance when…",90,[[["neighborsolicit"]],["usize"]]],[11,"get_icmpv6_type","","Get the value of the icmpv6_type field",90,[[["self"]],["icmpv6type"]]],[11,"get_icmpv6_code","","Get the value of the icmpv6_code field",90,[[["self"]],["icmpv6code"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",90,[[["self"]],["u16be"]]],[11,"get_reserved","","Get the reserved field. This field is always stored…",90,[[["self"]],["u32be"]]],[11,"get_target_addr","","Get the value of the target_addr field",90,[[["self"]],["ipv6addr"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",90,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",90,[[["self"]],[["vec",["ndpoption"]],["ndpoption"]]]],[11,"get_options_iter","","Get the value of the options field as iterator",90,[[["self"]],["ndpoptioniterable"]]],[11,"new","","Constructs a new MutableNeighborSolicitPacket. If the…",91,[[],[["option",["mutableneighborsolicitpacket"]],["mutableneighborsolicitpacket"]]]],[11,"owned","","Constructs a new MutableNeighborSolicitPacket. If the…",91,[[["vec",["u8"]],["u8"]],[["mutableneighborsolicitpacket"],["option",["mutableneighborsolicitpacket"]]]]],[11,"to_immutable","","Maps from a MutableNeighborSolicitPacket to a…",91,[[["self"]],["neighborsolicitpacket"]]],[11,"consume_to_immutable","","Maps from a MutableNeighborSolicitPacket to a…",91,[[],["neighborsolicitpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",91,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a NeighborSolicit instance when…",91,[[["neighborsolicit"]],["usize"]]],[11,"populate","","Populates a NeighborSolicitPacket using a NeighborSolicit…",91,[[["neighborsolicit"],["self"]]]],[11,"get_icmpv6_type","","Get the value of the icmpv6_type field",91,[[["self"]],["icmpv6type"]]],[11,"get_icmpv6_code","","Get the value of the icmpv6_code field",91,[[["self"]],["icmpv6code"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",91,[[["self"]],["u16be"]]],[11,"get_reserved","","Get the reserved field. This field is always stored…",91,[[["self"]],["u32be"]]],[11,"get_target_addr","","Get the value of the target_addr field",91,[[["self"]],["ipv6addr"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",91,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",91,[[["self"]],[["vec",["ndpoption"]],["ndpoption"]]]],[11,"get_options_iter","","Get the value of the options field as iterator",91,[[["self"]],["ndpoptioniterable"]]],[11,"set_icmpv6_type","","Set the value of the icmpv6_type field",91,[[["self"],["icmpv6type"]]]],[11,"set_icmpv6_code","","Set the value of the icmpv6_code field",91,[[["self"],["icmpv6code"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",91,[[["self"],["u16be"]]]],[11,"set_reserved","","Set the reserved field. This field is always stored…",91,[[["self"],["u32be"]]]],[11,"set_target_addr","","Set the value of the target_addr field",91,[[["self"],["ipv6addr"]]]],[11,"get_options_raw_mut","","Get the raw &mut [u8] value of the options field, without…",91,[[["self"]]]],[11,"set_options","","Set the value of the options field (copies contents)",91,[[["self"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",91,[[["self"]]]],[11,"new","","Constructs a new NeighborAdvertPacket. If the provided…",92,[[],[["option",["neighboradvertpacket"]],["neighboradvertpacket"]]]],[11,"owned","","Constructs a new NeighborAdvertPacket. If the provided…",92,[[["vec",["u8"]],["u8"]],[["option",["neighboradvertpacket"]],["neighboradvertpacket"]]]],[11,"to_immutable","","Maps from a NeighborAdvertPacket to a NeighborAdvertPacket",92,[[["self"]],["neighboradvertpacket"]]],[11,"consume_to_immutable","","Maps from a NeighborAdvertPacket to a NeighborAdvertPacket…",92,[[],["neighboradvertpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",92,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a NeighborAdvert instance when…",92,[[["neighboradvert"]],["usize"]]],[11,"get_icmpv6_type","","Get the value of the icmpv6_type field",92,[[["self"]],["icmpv6type"]]],[11,"get_icmpv6_code","","Get the value of the icmpv6_code field",92,[[["self"]],["icmpv6code"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",92,[[["self"]],["u16be"]]],[11,"get_flags","","Get the flags field.",92,[[["self"]],["u8"]]],[11,"get_reserved","","Get the reserved field. This field is always stored…",92,[[["self"]],["u24be"]]],[11,"get_target_addr","","Get the value of the target_addr field",92,[[["self"]],["ipv6addr"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",92,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",92,[[["self"]],[["vec",["ndpoption"]],["ndpoption"]]]],[11,"get_options_iter","","Get the value of the options field as iterator",92,[[["self"]],["ndpoptioniterable"]]],[11,"new","","Constructs a new MutableNeighborAdvertPacket. If the…",93,[[],[["mutableneighboradvertpacket"],["option",["mutableneighboradvertpacket"]]]]],[11,"owned","","Constructs a new MutableNeighborAdvertPacket. If the…",93,[[["vec",["u8"]],["u8"]],[["option",["mutableneighboradvertpacket"]],["mutableneighboradvertpacket"]]]],[11,"to_immutable","","Maps from a MutableNeighborAdvertPacket to a…",93,[[["self"]],["neighboradvertpacket"]]],[11,"consume_to_immutable","","Maps from a MutableNeighborAdvertPacket to a…",93,[[],["neighboradvertpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",93,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a NeighborAdvert instance when…",93,[[["neighboradvert"]],["usize"]]],[11,"populate","","Populates a NeighborAdvertPacket using a NeighborAdvert…",93,[[["self"],["neighboradvert"]]]],[11,"get_icmpv6_type","","Get the value of the icmpv6_type field",93,[[["self"]],["icmpv6type"]]],[11,"get_icmpv6_code","","Get the value of the icmpv6_code field",93,[[["self"]],["icmpv6code"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",93,[[["self"]],["u16be"]]],[11,"get_flags","","Get the flags field.",93,[[["self"]],["u8"]]],[11,"get_reserved","","Get the reserved field. This field is always stored…",93,[[["self"]],["u24be"]]],[11,"get_target_addr","","Get the value of the target_addr field",93,[[["self"]],["ipv6addr"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",93,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",93,[[["self"]],[["vec",["ndpoption"]],["ndpoption"]]]],[11,"get_options_iter","","Get the value of the options field as iterator",93,[[["self"]],["ndpoptioniterable"]]],[11,"set_icmpv6_type","","Set the value of the icmpv6_type field",93,[[["self"],["icmpv6type"]]]],[11,"set_icmpv6_code","","Set the value of the icmpv6_code field",93,[[["self"],["icmpv6code"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",93,[[["self"],["u16be"]]]],[11,"set_flags","","Set the flags field.",93,[[["self"],["u8"]]]],[11,"set_reserved","","Set the reserved field. This field is always stored…",93,[[["self"],["u24be"]]]],[11,"set_target_addr","","Set the value of the target_addr field",93,[[["self"],["ipv6addr"]]]],[11,"get_options_raw_mut","","Get the raw &mut [u8] value of the options field, without…",93,[[["self"]]]],[11,"set_options","","Set the value of the options field (copies contents)",93,[[["self"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",93,[[["self"]]]],[11,"new","","Constructs a new RedirectPacket. If the provided buffer is…",94,[[],[["option",["redirectpacket"]],["redirectpacket"]]]],[11,"owned","","Constructs a new RedirectPacket. If the provided buffer is…",94,[[["vec",["u8"]],["u8"]],[["redirectpacket"],["option",["redirectpacket"]]]]],[11,"to_immutable","","Maps from a RedirectPacket to a RedirectPacket",94,[[["self"]],["redirectpacket"]]],[11,"consume_to_immutable","","Maps from a RedirectPacket to a RedirectPacket while…",94,[[],["redirectpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",94,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Redirect instance when converted…",94,[[["redirect"]],["usize"]]],[11,"get_icmpv6_type","","Get the value of the icmpv6_type field",94,[[["self"]],["icmpv6type"]]],[11,"get_icmpv6_code","","Get the value of the icmpv6_code field",94,[[["self"]],["icmpv6code"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",94,[[["self"]],["u16be"]]],[11,"get_reserved","","Get the reserved field. This field is always stored…",94,[[["self"]],["u32be"]]],[11,"get_target_addr","","Get the value of the target_addr field",94,[[["self"]],["ipv6addr"]]],[11,"get_dest_addr","","Get the value of the dest_addr field",94,[[["self"]],["ipv6addr"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",94,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",94,[[["self"]],[["vec",["ndpoption"]],["ndpoption"]]]],[11,"get_options_iter","","Get the value of the options field as iterator",94,[[["self"]],["ndpoptioniterable"]]],[11,"new","","Constructs a new MutableRedirectPacket. If the provided…",95,[[],[["option",["mutableredirectpacket"]],["mutableredirectpacket"]]]],[11,"owned","","Constructs a new MutableRedirectPacket. If the provided…",95,[[["vec",["u8"]],["u8"]],[["option",["mutableredirectpacket"]],["mutableredirectpacket"]]]],[11,"to_immutable","","Maps from a MutableRedirectPacket to a RedirectPacket",95,[[["self"]],["redirectpacket"]]],[11,"consume_to_immutable","","Maps from a MutableRedirectPacket to a RedirectPacket…",95,[[],["redirectpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",95,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Redirect instance when converted…",95,[[["redirect"]],["usize"]]],[11,"populate","","Populates a RedirectPacket using a Redirect structure",95,[[["self"],["redirect"]]]],[11,"get_icmpv6_type","","Get the value of the icmpv6_type field",95,[[["self"]],["icmpv6type"]]],[11,"get_icmpv6_code","","Get the value of the icmpv6_code field",95,[[["self"]],["icmpv6code"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",95,[[["self"]],["u16be"]]],[11,"get_reserved","","Get the reserved field. This field is always stored…",95,[[["self"]],["u32be"]]],[11,"get_target_addr","","Get the value of the target_addr field",95,[[["self"]],["ipv6addr"]]],[11,"get_dest_addr","","Get the value of the dest_addr field",95,[[["self"]],["ipv6addr"]]],[11,"get_options_raw","","Get the raw &[u8] value of the options field, without…",95,[[["self"]]]],[11,"get_options","","Get the value of the options field (copies contents)",95,[[["self"]],[["vec",["ndpoption"]],["ndpoption"]]]],[11,"get_options_iter","","Get the value of the options field as iterator",95,[[["self"]],["ndpoptioniterable"]]],[11,"set_icmpv6_type","","Set the value of the icmpv6_type field",95,[[["self"],["icmpv6type"]]]],[11,"set_icmpv6_code","","Set the value of the icmpv6_code field",95,[[["self"],["icmpv6code"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",95,[[["self"],["u16be"]]]],[11,"set_reserved","","Set the reserved field. This field is always stored…",95,[[["self"],["u32be"]]]],[11,"set_target_addr","","Set the value of the target_addr field",95,[[["self"],["ipv6addr"]]]],[11,"set_dest_addr","","Set the value of the dest_addr field",95,[[["self"],["ipv6addr"]]]],[11,"get_options_raw_mut","","Get the raw &mut [u8] value of the options field, without…",95,[[["self"]]]],[11,"set_options","","Set the value of the options field (copies contents)",95,[[["self"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",95,[[["self"]]]],[11,"new","pnet_packet::icmpv6","Create a new `Icmpv6Type` instance.",74,[[["u8"]],["icmpv6type"]]],[11,"new","","Create a new `Icmpv6Code` instance.",75,[[["u8"]],["icmpv6code"]]],[11,"new","","Constructs a new Icmpv6Packet. If the provided buffer is…",96,[[],[["option",["icmpv6packet"]],["icmpv6packet"]]]],[11,"owned","","Constructs a new Icmpv6Packet. If the provided buffer is…",96,[[["vec",["u8"]],["u8"]],[["icmpv6packet"],["option",["icmpv6packet"]]]]],[11,"to_immutable","","Maps from a Icmpv6Packet to a Icmpv6Packet",96,[[["self"]],["icmpv6packet"]]],[11,"consume_to_immutable","","Maps from a Icmpv6Packet to a Icmpv6Packet while consuming…",96,[[],["icmpv6packet"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",96,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Icmpv6 instance when converted…",96,[[["icmpv6"]],["usize"]]],[11,"get_icmpv6_type","","Get the value of the icmpv6_type field",96,[[["self"]],["icmpv6type"]]],[11,"get_icmpv6_code","","Get the value of the icmpv6_code field",96,[[["self"]],["icmpv6code"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",96,[[["self"]],["u16be"]]],[11,"new","","Constructs a new MutableIcmpv6Packet. If the provided…",97,[[],[["mutableicmpv6packet"],["option",["mutableicmpv6packet"]]]]],[11,"owned","","Constructs a new MutableIcmpv6Packet. If the provided…",97,[[["vec",["u8"]],["u8"]],[["option",["mutableicmpv6packet"]],["mutableicmpv6packet"]]]],[11,"to_immutable","","Maps from a MutableIcmpv6Packet to a Icmpv6Packet",97,[[["self"]],["icmpv6packet"]]],[11,"consume_to_immutable","","Maps from a MutableIcmpv6Packet to a Icmpv6Packet while…",97,[[],["icmpv6packet"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",97,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Icmpv6 instance when converted…",97,[[["icmpv6"]],["usize"]]],[11,"populate","","Populates a Icmpv6Packet using a Icmpv6 structure",97,[[["self"],["icmpv6"]]]],[11,"get_icmpv6_type","","Get the value of the icmpv6_type field",97,[[["self"]],["icmpv6type"]]],[11,"get_icmpv6_code","","Get the value of the icmpv6_code field",97,[[["self"]],["icmpv6code"]]],[11,"get_checksum","","Get the checksum field. This field is always stored…",97,[[["self"]],["u16be"]]],[11,"set_icmpv6_type","","Set the value of the icmpv6_type field",97,[[["self"],["icmpv6type"]]]],[11,"set_icmpv6_code","","Set the value of the icmpv6_code field",97,[[["self"],["icmpv6code"]]]],[11,"set_checksum","","Set the checksum field. This field is always stored…",97,[[["self"],["u16be"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",97,[[["self"]]]],[0,"vlan","pnet_packet","A VLAN packet abstraction.",null,null],[3,"ClassOfService","pnet_packet::vlan","Represents an IEEE 802.1p class of a service.",null,null],[12,"0","","",98,null],[3,"VlanPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"MutableVlanPacket","","A structure enabling manipulation of on the wire packets",null,null],[3,"VlanIterable","","Used to iterate over a slice of `VlanPacket`s",null,null],[3,"Vlan","","Represents a VLAN-tagged packet.",null,null],[12,"priority_code_point","","",99,null],[12,"drop_eligible_indicator","","",99,null],[12,"vlan_identifier","","",99,null],[12,"ethertype","","",99,null],[12,"payload","","",99,null],[0,"ClassesOfService","","IEEE 802.1p classes of service as defined in…",null,null],[17,"BK","pnet_packet::vlan::ClassesOfService","Background",null,null],[17,"BE","","Best Effort",null,null],[17,"EE","","Excellent Effort",null,null],[17,"CA","","Critical Applications",null,null],[17,"VI","","Video, < 100 ms latency",null,null],[17,"VO","","Voice, < 10 ms latency",null,null],[17,"IC","","Internetwork Control",null,null],[17,"NC","","Network Control",null,null],[11,"new","pnet_packet::vlan","Create a new `ClassOfService` instance.",98,[[["u3"]],["classofservice"]]],[11,"new","","Constructs a new VlanPacket. If the provided buffer is…",100,[[],[["option",["vlanpacket"]],["vlanpacket"]]]],[11,"owned","","Constructs a new VlanPacket. If the provided buffer is…",100,[[["vec",["u8"]],["u8"]],[["option",["vlanpacket"]],["vlanpacket"]]]],[11,"to_immutable","","Maps from a VlanPacket to a VlanPacket",100,[[["self"]],["vlanpacket"]]],[11,"consume_to_immutable","","Maps from a VlanPacket to a VlanPacket while consuming the…",100,[[],["vlanpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",100,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Vlan instance when converted into…",100,[[["vlan"]],["usize"]]],[11,"get_priority_code_point","","Get the value of the priority_code_point field",100,[[["self"]],["classofservice"]]],[11,"get_drop_eligible_indicator","","Get the drop_eligible_indicator field.",100,[[["self"]],["u1"]]],[11,"get_vlan_identifier","","Get the vlan_identifier field. This field is always stored…",100,[[["self"]],["u12be"]]],[11,"get_ethertype","","Get the value of the ethertype field",100,[[["self"]],["ethertype"]]],[11,"new","","Constructs a new MutableVlanPacket. If the provided buffer…",101,[[],[["mutablevlanpacket"],["option",["mutablevlanpacket"]]]]],[11,"owned","","Constructs a new MutableVlanPacket. If the provided buffer…",101,[[["vec",["u8"]],["u8"]],[["mutablevlanpacket"],["option",["mutablevlanpacket"]]]]],[11,"to_immutable","","Maps from a MutableVlanPacket to a VlanPacket",101,[[["self"]],["vlanpacket"]]],[11,"consume_to_immutable","","Maps from a MutableVlanPacket to a VlanPacket while…",101,[[],["vlanpacket"]]],[11,"minimum_packet_size","","The minimum size (in bytes) a packet of this type can be.…",101,[[],["usize"]]],[11,"packet_size","","The size (in bytes) of a Vlan instance when converted into…",101,[[["vlan"]],["usize"]]],[11,"populate","","Populates a VlanPacket using a Vlan structure",101,[[["vlan"],["self"]]]],[11,"get_priority_code_point","","Get the value of the priority_code_point field",101,[[["self"]],["classofservice"]]],[11,"get_drop_eligible_indicator","","Get the drop_eligible_indicator field.",101,[[["self"]],["u1"]]],[11,"get_vlan_identifier","","Get the vlan_identifier field. This field is always stored…",101,[[["self"]],["u12be"]]],[11,"get_ethertype","","Get the value of the ethertype field",101,[[["self"]],["ethertype"]]],[11,"set_priority_code_point","","Set the value of the priority_code_point field",101,[[["classofservice"],["self"]]]],[11,"set_drop_eligible_indicator","","Set the drop_eligible_indicator field.",101,[[["u1"],["self"]]]],[11,"set_vlan_identifier","","Set the vlan_identifier field. This field is always stored…",101,[[["self"],["u12be"]]]],[11,"set_ethertype","","Set the value of the ethertype field",101,[[["self"],["ethertype"]]]],[11,"set_payload","","Set the value of the payload field (copies contents)",101,[[["self"]]]],[0,"util","pnet_packet","Utilities for working with packets, eg. checksumming.",null,null],[5,"checksum","pnet_packet::util","Calculates a checksum. Used by ipv4 and icmp. The two…",null,[[["usize"]],["u16be"]]],[5,"ipv4_checksum","","Calculate the checksum for a packet built on IPv4. Used by…",null,[[["ipnextheaderprotocol"],["usize"],["ipv4addr"]],["u16be"]]],[5,"ipv6_checksum","","Calculate the checksum for a packet built on IPv6.",null,[[["ipnextheaderprotocol"],["usize"],["ipv6addr"]],["u16be"]]],[8,"Octets","","Convert a value to a byte array.",null,null],[16,"Output","","Output type - bytes array.",102,null],[10,"octets","","Return a value as bytes (big-endian order).",102,[[["self"]]]],[11,"from","pnet_packet","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","pnet_packet::ethernet","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"into_iter","","",103,[[],["i"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","pnet_packet::gre","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"into_iter","","",104,[[],["i"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"into_iter","","",105,[[],["i"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"into_iter","","",107,[[],["i"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,[[["self"],["t"]]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"from","pnet_packet::ip","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","pnet_packet::ipv4","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"into_iter","","",109,[[],["i"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"into_iter","","",110,[[],["i"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,[[["self"],["t"]]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"from","pnet_packet::ipv6","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"into_iter","","",112,[[],["i"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"into_iter","","",31,[[],["i"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"into_iter","","",113,[[],["i"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"into_iter","","",114,[[],["i"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","pnet_packet::udp","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"into_iter","","",115,[[],["i"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","pnet_packet::tcp","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"into_iter","","",116,[[],["i"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"into_iter","","",117,[[],["i"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","pnet_packet::arp","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"into_iter","","",118,[[],["i"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","pnet_packet::icmp","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"into_iter","","",119,[[],["i"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","pnet_packet::icmp::echo_reply","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"into_iter","","",120,[[],["i"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","pnet_packet::icmp::echo_request","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"into_iter","","",121,[[],["i"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","pnet_packet::icmp::destination_unreachable","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"into_iter","","",122,[[],["i"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","pnet_packet::icmp::time_exceeded","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"into_iter","","",123,[[],["i"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","pnet_packet::icmpv6","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"into_iter","","",124,[[],["i"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","pnet_packet::icmpv6::ndp","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"into_iter","","",125,[[],["i"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"into_iter","","",126,[[],["i"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"into_iter","","",127,[[],["i"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"into_iter","","",128,[[],["i"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"into_iter","","",129,[[],["i"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"into_iter","","",130,[[],["i"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","pnet_packet::vlan","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[],["u"]]],[11,"into_iter","","",131,[[],["i"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"index_mut","pnet_packet","",5,[[["self"],["range",["usize"]],["usize"]]]],[11,"index_mut","","",5,[[["self"],["rangefrom",["usize"]],["usize"]]]],[11,"index_mut","","",5,[[["self"],["usize"]],["u8"]]],[11,"index_mut","","",5,[[["self"],["rangeto",["usize"]],["usize"]]]],[11,"index_mut","","",5,[[["rangefull"],["self"]]]],[11,"eq","","",5,[[["mutpacketdata"],["self"]],["bool"]]],[11,"ne","","",5,[[["mutpacketdata"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["packetdata"]],["bool"]]],[11,"ne","","",4,[[["self"],["packetdata"]],["bool"]]],[11,"index","","",5,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index","","",4,[[["usize"],["self"],["rangeto",["usize"]]]]],[11,"index","","",4,[[["usize"],["self"],["range",["usize"]]]]],[11,"index","","",4,[[["rangefull"],["self"]]]],[11,"index","","",4,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index","","",5,[[["rangefull"],["self"]]]],[11,"index","","",4,[[["self"],["usize"]],["u8"]]],[11,"index","","",5,[[["self"],["usize"]],["u8"]]],[11,"index","","",5,[[["usize"],["self"],["range",["usize"]]]]],[11,"index","","",5,[[["usize"],["self"],["rangeto",["usize"]]]]],[11,"next","pnet_packet::ethernet","",103,[[["self"]],[["ethernetpacket"],["option",["ethernetpacket"]]]]],[11,"size_hint","","",103,[[["self"]]]],[11,"next","pnet_packet::gre","",104,[[["self"]],[["option",["grepacket"]],["grepacket"]]]],[11,"size_hint","","",104,[[["self"]]]],[11,"next","","",105,[[["self"]],[["option",["u16bepacket"]],["u16bepacket"]]]],[11,"size_hint","","",105,[[["self"]]]],[11,"next","","",107,[[["self"]],[["option",["u32bepacket"]],["u32bepacket"]]]],[11,"size_hint","","",107,[[["self"]]]],[11,"next","pnet_packet::ipv4","",109,[[["self"]],[["option",["ipv4packet"]],["ipv4packet"]]]],[11,"size_hint","","",109,[[["self"]]]],[11,"next","","",110,[[["self"]],[["ipv4optionpacket"],["option",["ipv4optionpacket"]]]]],[11,"size_hint","","",110,[[["self"]]]],[11,"next","pnet_packet::ipv6","",112,[[["self"]],[["ipv6packet"],["option",["ipv6packet"]]]]],[11,"size_hint","","",112,[[["self"]]]],[11,"next","","",31,[[["self"]],[["option",["extensionpacket"]],["extensionpacket"]]]],[11,"size_hint","","",31,[[["self"]]]],[11,"next","","",113,[[["self"]],[["option",["routingpacket"]],["routingpacket"]]]],[11,"size_hint","","",113,[[["self"]]]],[11,"next","","",114,[[["self"]],[["option",["fragmentpacket"]],["fragmentpacket"]]]],[11,"size_hint","","",114,[[["self"]]]],[11,"next","pnet_packet::udp","",115,[[["self"]],[["option",["udppacket"]],["udppacket"]]]],[11,"size_hint","","",115,[[["self"]]]],[11,"next","pnet_packet::tcp","",116,[[["self"]],[["option",["tcppacket"]],["tcppacket"]]]],[11,"size_hint","","",116,[[["self"]]]],[11,"next","","",117,[[["self"]],[["option",["tcpoptionpacket"]],["tcpoptionpacket"]]]],[11,"size_hint","","",117,[[["self"]]]],[11,"next","pnet_packet::arp","",118,[[["self"]],[["option",["arppacket"]],["arppacket"]]]],[11,"size_hint","","",118,[[["self"]]]],[11,"next","pnet_packet::icmp","",119,[[["self"]],[["option",["icmppacket"]],["icmppacket"]]]],[11,"size_hint","","",119,[[["self"]]]],[11,"next","pnet_packet::icmp::echo_reply","",120,[[["self"]],[["option",["echoreplypacket"]],["echoreplypacket"]]]],[11,"size_hint","","",120,[[["self"]]]],[11,"next","pnet_packet::icmp::echo_request","",121,[[["self"]],[["echorequestpacket"],["option",["echorequestpacket"]]]]],[11,"size_hint","","",121,[[["self"]]]],[11,"next","pnet_packet::icmp::destination_unreachable","",122,[[["self"]],[["destinationunreachablepacket"],["option",["destinationunreachablepacket"]]]]],[11,"size_hint","","",122,[[["self"]]]],[11,"next","pnet_packet::icmp::time_exceeded","",123,[[["self"]],[["timeexceededpacket"],["option",["timeexceededpacket"]]]]],[11,"size_hint","","",123,[[["self"]]]],[11,"next","pnet_packet::icmpv6","",124,[[["self"]],[["option",["icmpv6packet"]],["icmpv6packet"]]]],[11,"size_hint","","",124,[[["self"]]]],[11,"next","pnet_packet::icmpv6::ndp","",125,[[["self"]],[["option",["ndpoptionpacket"]],["ndpoptionpacket"]]]],[11,"size_hint","","",125,[[["self"]]]],[11,"next","","",126,[[["self"]],[["option",["routersolicitpacket"]],["routersolicitpacket"]]]],[11,"size_hint","","",126,[[["self"]]]],[11,"next","","",127,[[["self"]],[["option",["routeradvertpacket"]],["routeradvertpacket"]]]],[11,"size_hint","","",127,[[["self"]]]],[11,"next","","",128,[[["self"]],[["option",["neighborsolicitpacket"]],["neighborsolicitpacket"]]]],[11,"size_hint","","",128,[[["self"]]]],[11,"next","","",129,[[["self"]],[["option",["neighboradvertpacket"]],["neighboradvertpacket"]]]],[11,"size_hint","","",129,[[["self"]]]],[11,"next","","",130,[[["self"]],[["option",["redirectpacket"]],["redirectpacket"]]]],[11,"size_hint","","",130,[[["self"]]]],[11,"next","pnet_packet::vlan","",131,[[["self"]],[["vlanpacket"],["option",["vlanpacket"]]]]],[11,"size_hint","","",131,[[["self"]]]],[11,"clone","pnet_packet::ethernet","",7,[[["self"]],["ethernet"]]],[11,"clone","","",8,[[["self"]],["ethertype"]]],[11,"clone","pnet_packet::gre","",11,[[["self"]],["gre"]]],[11,"clone","","",106,[[["self"]],["u16be"]]],[11,"clone","","",108,[[["self"]],["u32be"]]],[11,"clone","pnet_packet::ip","",18,[[["self"]],["ipnextheaderprotocol"]]],[11,"clone","pnet_packet::ipv4","",19,[[["self"]],["ipv4optionnumber"]]],[11,"clone","","",20,[[["self"]],["ipv4"]]],[11,"clone","","",111,[[["self"]],["ipv4option"]]],[11,"clone","pnet_packet::ipv6","",25,[[["self"]],["ipv6"]]],[11,"clone","","",26,[[["self"]],["extension"]]],[11,"clone","","",27,[[["self"]],["routing"]]],[11,"clone","","",28,[[["self"]],["fragment"]]],[11,"clone","pnet_packet::udp","",38,[[["self"]],["udp"]]],[11,"clone","pnet_packet::tcp","",41,[[["self"]],["tcp"]]],[11,"clone","","",42,[[["self"]],["tcpoptionnumber"]]],[11,"clone","","",47,[[["self"]],["tcpoption"]]],[11,"clone","pnet_packet::arp","",48,[[["self"]],["arpoperation"]]],[11,"clone","","",49,[[["self"]],["arphardwaretype"]]],[11,"clone","","",50,[[["self"]],["arp"]]],[11,"clone","pnet_packet::icmp","",53,[[["self"]],["icmptype"]]],[11,"clone","","",54,[[["self"]],["icmpcode"]]],[11,"clone","","",55,[[["self"]],["icmp"]]],[11,"clone","pnet_packet::icmp::echo_reply","",56,[[["self"]],["identifier"]]],[11,"clone","","",57,[[["self"]],["sequencenumber"]]],[11,"clone","","",58,[[["self"]],["echoreply"]]],[11,"clone","pnet_packet::icmp::echo_request","",61,[[["self"]],["identifier"]]],[11,"clone","","",62,[[["self"]],["sequencenumber"]]],[11,"clone","","",63,[[["self"]],["echorequest"]]],[11,"clone","pnet_packet::icmp::destination_unreachable","",66,[[["self"]],["destinationunreachable"]]],[11,"clone","pnet_packet::icmp::time_exceeded","",69,[[["self"]],["timeexceeded"]]],[11,"clone","pnet_packet::icmpv6","",74,[[["self"]],["icmpv6type"]]],[11,"clone","","",75,[[["self"]],["icmpv6code"]]],[11,"clone","","",76,[[["self"]],["icmpv6"]]],[11,"clone","pnet_packet::icmpv6::ndp","",77,[[["self"]],["ndpoptiontype"]]],[11,"clone","","",78,[[["self"]],["ndpoption"]]],[11,"clone","","",79,[[["self"]],["routersolicit"]]],[11,"clone","","",80,[[["self"]],["routeradvert"]]],[11,"clone","","",81,[[["self"]],["neighborsolicit"]]],[11,"clone","","",82,[[["self"]],["neighboradvert"]]],[11,"clone","","",83,[[["self"]],["redirect"]]],[11,"clone","pnet_packet::vlan","",98,[[["self"]],["classofservice"]]],[11,"clone","","",99,[[["self"]],["vlan"]]],[11,"cmp","pnet_packet::ethernet","",8,[[["ethertype"],["self"]],["ordering"]]],[11,"cmp","pnet_packet::ip","",18,[[["self"],["ipnextheaderprotocol"]],["ordering"]]],[11,"cmp","pnet_packet::ipv4","",19,[[["self"],["ipv4optionnumber"]],["ordering"]]],[11,"cmp","pnet_packet::tcp","",42,[[["self"],["tcpoptionnumber"]],["ordering"]]],[11,"cmp","pnet_packet::arp","",48,[[["self"],["arpoperation"]],["ordering"]]],[11,"cmp","","",49,[[["self"],["arphardwaretype"]],["ordering"]]],[11,"cmp","pnet_packet::icmp","",53,[[["self"],["icmptype"]],["ordering"]]],[11,"cmp","","",54,[[["icmpcode"],["self"]],["ordering"]]],[11,"cmp","pnet_packet::icmp::echo_reply","",56,[[["identifier"],["self"]],["ordering"]]],[11,"cmp","","",57,[[["sequencenumber"],["self"]],["ordering"]]],[11,"cmp","pnet_packet::icmp::echo_request","",61,[[["identifier"],["self"]],["ordering"]]],[11,"cmp","","",62,[[["sequencenumber"],["self"]],["ordering"]]],[11,"cmp","pnet_packet::icmpv6","",74,[[["self"],["icmpv6type"]],["ordering"]]],[11,"cmp","","",75,[[["icmpv6code"],["self"]],["ordering"]]],[11,"cmp","pnet_packet::icmpv6::ndp","",77,[[["self"],["ndpoptiontype"]],["ordering"]]],[11,"cmp","pnet_packet::vlan","",98,[[["self"],["classofservice"]],["ordering"]]],[11,"eq","pnet_packet::ethernet","",9,[[["ethernetpacket"],["self"]],["bool"]]],[11,"ne","","",9,[[["ethernetpacket"],["self"]],["bool"]]],[11,"eq","","",10,[[["mutableethernetpacket"],["self"]],["bool"]]],[11,"ne","","",10,[[["mutableethernetpacket"],["self"]],["bool"]]],[11,"eq","","",8,[[["ethertype"],["self"]],["bool"]]],[11,"ne","","",8,[[["ethertype"],["self"]],["bool"]]],[11,"eq","pnet_packet::gre","",12,[[["grepacket"],["self"]],["bool"]]],[11,"ne","","",12,[[["grepacket"],["self"]],["bool"]]],[11,"eq","","",13,[[["mutablegrepacket"],["self"]],["bool"]]],[11,"ne","","",13,[[["mutablegrepacket"],["self"]],["bool"]]],[11,"eq","","",14,[[["self"],["u16bepacket"]],["bool"]]],[11,"ne","","",14,[[["self"],["u16bepacket"]],["bool"]]],[11,"eq","","",15,[[["mutableu16bepacket"],["self"]],["bool"]]],[11,"ne","","",15,[[["mutableu16bepacket"],["self"]],["bool"]]],[11,"eq","","",16,[[["u32bepacket"],["self"]],["bool"]]],[11,"ne","","",16,[[["u32bepacket"],["self"]],["bool"]]],[11,"eq","","",17,[[["self"],["mutableu32bepacket"]],["bool"]]],[11,"ne","","",17,[[["self"],["mutableu32bepacket"]],["bool"]]],[11,"eq","pnet_packet::ip","",18,[[["self"],["ipnextheaderprotocol"]],["bool"]]],[11,"ne","","",18,[[["self"],["ipnextheaderprotocol"]],["bool"]]],[11,"eq","pnet_packet::ipv4","",19,[[["self"],["ipv4optionnumber"]],["bool"]]],[11,"ne","","",19,[[["self"],["ipv4optionnumber"]],["bool"]]],[11,"eq","","",21,[[["ipv4packet"],["self"]],["bool"]]],[11,"ne","","",21,[[["ipv4packet"],["self"]],["bool"]]],[11,"eq","","",22,[[["self"],["mutableipv4packet"]],["bool"]]],[11,"ne","","",22,[[["self"],["mutableipv4packet"]],["bool"]]],[11,"eq","","",23,[[["self"],["ipv4optionpacket"]],["bool"]]],[11,"ne","","",23,[[["self"],["ipv4optionpacket"]],["bool"]]],[11,"eq","","",24,[[["self"],["mutableipv4optionpacket"]],["bool"]]],[11,"ne","","",24,[[["self"],["mutableipv4optionpacket"]],["bool"]]],[11,"eq","pnet_packet::ipv6","",29,[[["ipv6packet"],["self"]],["bool"]]],[11,"ne","","",29,[[["ipv6packet"],["self"]],["bool"]]],[11,"eq","","",30,[[["self"],["mutableipv6packet"]],["bool"]]],[11,"ne","","",30,[[["self"],["mutableipv6packet"]],["bool"]]],[11,"eq","","",32,[[["self"],["extensionpacket"]],["bool"]]],[11,"ne","","",32,[[["self"],["extensionpacket"]],["bool"]]],[11,"eq","","",33,[[["self"],["mutableextensionpacket"]],["bool"]]],[11,"ne","","",33,[[["self"],["mutableextensionpacket"]],["bool"]]],[11,"eq","","",34,[[["self"],["routingpacket"]],["bool"]]],[11,"ne","","",34,[[["self"],["routingpacket"]],["bool"]]],[11,"eq","","",35,[[["self"],["mutableroutingpacket"]],["bool"]]],[11,"ne","","",35,[[["self"],["mutableroutingpacket"]],["bool"]]],[11,"eq","","",36,[[["self"],["fragmentpacket"]],["bool"]]],[11,"ne","","",36,[[["self"],["fragmentpacket"]],["bool"]]],[11,"eq","","",37,[[["mutablefragmentpacket"],["self"]],["bool"]]],[11,"ne","","",37,[[["mutablefragmentpacket"],["self"]],["bool"]]],[11,"eq","pnet_packet::udp","",39,[[["udppacket"],["self"]],["bool"]]],[11,"ne","","",39,[[["udppacket"],["self"]],["bool"]]],[11,"eq","","",40,[[["mutableudppacket"],["self"]],["bool"]]],[11,"ne","","",40,[[["mutableudppacket"],["self"]],["bool"]]],[11,"eq","pnet_packet::tcp","",43,[[["tcppacket"],["self"]],["bool"]]],[11,"ne","","",43,[[["tcppacket"],["self"]],["bool"]]],[11,"eq","","",44,[[["mutabletcppacket"],["self"]],["bool"]]],[11,"ne","","",44,[[["mutabletcppacket"],["self"]],["bool"]]],[11,"eq","","",42,[[["self"],["tcpoptionnumber"]],["bool"]]],[11,"ne","","",42,[[["self"],["tcpoptionnumber"]],["bool"]]],[11,"eq","","",45,[[["self"],["tcpoptionpacket"]],["bool"]]],[11,"ne","","",45,[[["self"],["tcpoptionpacket"]],["bool"]]],[11,"eq","","",46,[[["self"],["mutabletcpoptionpacket"]],["bool"]]],[11,"ne","","",46,[[["self"],["mutabletcpoptionpacket"]],["bool"]]],[11,"eq","pnet_packet::arp","",48,[[["self"],["arpoperation"]],["bool"]]],[11,"ne","","",48,[[["self"],["arpoperation"]],["bool"]]],[11,"eq","","",49,[[["self"],["arphardwaretype"]],["bool"]]],[11,"ne","","",49,[[["self"],["arphardwaretype"]],["bool"]]],[11,"eq","","",51,[[["arppacket"],["self"]],["bool"]]],[11,"ne","","",51,[[["arppacket"],["self"]],["bool"]]],[11,"eq","","",52,[[["self"],["mutablearppacket"]],["bool"]]],[11,"ne","","",52,[[["self"],["mutablearppacket"]],["bool"]]],[11,"eq","pnet_packet::icmp","",53,[[["self"],["icmptype"]],["bool"]]],[11,"ne","","",53,[[["self"],["icmptype"]],["bool"]]],[11,"eq","","",54,[[["icmpcode"],["self"]],["bool"]]],[11,"ne","","",54,[[["icmpcode"],["self"]],["bool"]]],[11,"eq","","",72,[[["self"],["icmppacket"]],["bool"]]],[11,"ne","","",72,[[["self"],["icmppacket"]],["bool"]]],[11,"eq","","",73,[[["mutableicmppacket"],["self"]],["bool"]]],[11,"ne","","",73,[[["mutableicmppacket"],["self"]],["bool"]]],[11,"eq","pnet_packet::icmp::echo_reply","",56,[[["identifier"],["self"]],["bool"]]],[11,"ne","","",56,[[["identifier"],["self"]],["bool"]]],[11,"eq","","",57,[[["sequencenumber"],["self"]],["bool"]]],[11,"ne","","",57,[[["sequencenumber"],["self"]],["bool"]]],[11,"eq","","",59,[[["echoreplypacket"],["self"]],["bool"]]],[11,"ne","","",59,[[["echoreplypacket"],["self"]],["bool"]]],[11,"eq","","",60,[[["mutableechoreplypacket"],["self"]],["bool"]]],[11,"ne","","",60,[[["mutableechoreplypacket"],["self"]],["bool"]]],[11,"eq","pnet_packet::icmp::echo_request","",61,[[["identifier"],["self"]],["bool"]]],[11,"ne","","",61,[[["identifier"],["self"]],["bool"]]],[11,"eq","","",62,[[["sequencenumber"],["self"]],["bool"]]],[11,"ne","","",62,[[["sequencenumber"],["self"]],["bool"]]],[11,"eq","","",64,[[["echorequestpacket"],["self"]],["bool"]]],[11,"ne","","",64,[[["echorequestpacket"],["self"]],["bool"]]],[11,"eq","","",65,[[["mutableechorequestpacket"],["self"]],["bool"]]],[11,"ne","","",65,[[["mutableechorequestpacket"],["self"]],["bool"]]],[11,"eq","pnet_packet::icmp::destination_unreachable","",67,[[["self"],["destinationunreachablepacket"]],["bool"]]],[11,"ne","","",67,[[["self"],["destinationunreachablepacket"]],["bool"]]],[11,"eq","","",68,[[["mutabledestinationunreachablepacket"],["self"]],["bool"]]],[11,"ne","","",68,[[["mutabledestinationunreachablepacket"],["self"]],["bool"]]],[11,"eq","pnet_packet::icmp::time_exceeded","",70,[[["self"],["timeexceededpacket"]],["bool"]]],[11,"ne","","",70,[[["self"],["timeexceededpacket"]],["bool"]]],[11,"eq","","",71,[[["self"],["mutabletimeexceededpacket"]],["bool"]]],[11,"ne","","",71,[[["self"],["mutabletimeexceededpacket"]],["bool"]]],[11,"eq","pnet_packet::icmpv6","",74,[[["self"],["icmpv6type"]],["bool"]]],[11,"ne","","",74,[[["self"],["icmpv6type"]],["bool"]]],[11,"eq","","",75,[[["icmpv6code"],["self"]],["bool"]]],[11,"ne","","",75,[[["icmpv6code"],["self"]],["bool"]]],[11,"eq","","",96,[[["self"],["icmpv6packet"]],["bool"]]],[11,"ne","","",96,[[["self"],["icmpv6packet"]],["bool"]]],[11,"eq","","",97,[[["mutableicmpv6packet"],["self"]],["bool"]]],[11,"ne","","",97,[[["mutableicmpv6packet"],["self"]],["bool"]]],[11,"eq","pnet_packet::icmpv6::ndp","",77,[[["self"],["ndpoptiontype"]],["bool"]]],[11,"ne","","",77,[[["self"],["ndpoptiontype"]],["bool"]]],[11,"eq","","",84,[[["ndpoptionpacket"],["self"]],["bool"]]],[11,"ne","","",84,[[["ndpoptionpacket"],["self"]],["bool"]]],[11,"eq","","",85,[[["self"],["mutablendpoptionpacket"]],["bool"]]],[11,"ne","","",85,[[["self"],["mutablendpoptionpacket"]],["bool"]]],[11,"eq","","",86,[[["routersolicitpacket"],["self"]],["bool"]]],[11,"ne","","",86,[[["routersolicitpacket"],["self"]],["bool"]]],[11,"eq","","",87,[[["mutableroutersolicitpacket"],["self"]],["bool"]]],[11,"ne","","",87,[[["mutableroutersolicitpacket"],["self"]],["bool"]]],[11,"eq","","",88,[[["routeradvertpacket"],["self"]],["bool"]]],[11,"ne","","",88,[[["routeradvertpacket"],["self"]],["bool"]]],[11,"eq","","",89,[[["self"],["mutablerouteradvertpacket"]],["bool"]]],[11,"ne","","",89,[[["self"],["mutablerouteradvertpacket"]],["bool"]]],[11,"eq","","",90,[[["neighborsolicitpacket"],["self"]],["bool"]]],[11,"ne","","",90,[[["neighborsolicitpacket"],["self"]],["bool"]]],[11,"eq","","",91,[[["self"],["mutableneighborsolicitpacket"]],["bool"]]],[11,"ne","","",91,[[["self"],["mutableneighborsolicitpacket"]],["bool"]]],[11,"eq","","",92,[[["neighboradvertpacket"],["self"]],["bool"]]],[11,"ne","","",92,[[["neighboradvertpacket"],["self"]],["bool"]]],[11,"eq","","",93,[[["mutableneighboradvertpacket"],["self"]],["bool"]]],[11,"ne","","",93,[[["mutableneighboradvertpacket"],["self"]],["bool"]]],[11,"eq","","",94,[[["self"],["redirectpacket"]],["bool"]]],[11,"ne","","",94,[[["self"],["redirectpacket"]],["bool"]]],[11,"eq","","",95,[[["mutableredirectpacket"],["self"]],["bool"]]],[11,"ne","","",95,[[["mutableredirectpacket"],["self"]],["bool"]]],[11,"eq","pnet_packet::vlan","",98,[[["self"],["classofservice"]],["bool"]]],[11,"ne","","",98,[[["self"],["classofservice"]],["bool"]]],[11,"eq","","",100,[[["vlanpacket"],["self"]],["bool"]]],[11,"ne","","",100,[[["vlanpacket"],["self"]],["bool"]]],[11,"eq","","",101,[[["self"],["mutablevlanpacket"]],["bool"]]],[11,"ne","","",101,[[["self"],["mutablevlanpacket"]],["bool"]]],[11,"partial_cmp","pnet_packet::ethernet","",8,[[["ethertype"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",8,[[["ethertype"],["self"]],["bool"]]],[11,"le","","",8,[[["ethertype"],["self"]],["bool"]]],[11,"gt","","",8,[[["ethertype"],["self"]],["bool"]]],[11,"ge","","",8,[[["ethertype"],["self"]],["bool"]]],[11,"partial_cmp","pnet_packet::ip","",18,[[["self"],["ipnextheaderprotocol"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",18,[[["self"],["ipnextheaderprotocol"]],["bool"]]],[11,"le","","",18,[[["self"],["ipnextheaderprotocol"]],["bool"]]],[11,"gt","","",18,[[["self"],["ipnextheaderprotocol"]],["bool"]]],[11,"ge","","",18,[[["self"],["ipnextheaderprotocol"]],["bool"]]],[11,"partial_cmp","pnet_packet::ipv4","",19,[[["self"],["ipv4optionnumber"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",19,[[["self"],["ipv4optionnumber"]],["bool"]]],[11,"le","","",19,[[["self"],["ipv4optionnumber"]],["bool"]]],[11,"gt","","",19,[[["self"],["ipv4optionnumber"]],["bool"]]],[11,"ge","","",19,[[["self"],["ipv4optionnumber"]],["bool"]]],[11,"partial_cmp","pnet_packet::tcp","",42,[[["self"],["tcpoptionnumber"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",42,[[["self"],["tcpoptionnumber"]],["bool"]]],[11,"le","","",42,[[["self"],["tcpoptionnumber"]],["bool"]]],[11,"gt","","",42,[[["self"],["tcpoptionnumber"]],["bool"]]],[11,"ge","","",42,[[["self"],["tcpoptionnumber"]],["bool"]]],[11,"partial_cmp","pnet_packet::arp","",48,[[["self"],["arpoperation"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",48,[[["self"],["arpoperation"]],["bool"]]],[11,"le","","",48,[[["self"],["arpoperation"]],["bool"]]],[11,"gt","","",48,[[["self"],["arpoperation"]],["bool"]]],[11,"ge","","",48,[[["self"],["arpoperation"]],["bool"]]],[11,"partial_cmp","","",49,[[["self"],["arphardwaretype"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",49,[[["self"],["arphardwaretype"]],["bool"]]],[11,"le","","",49,[[["self"],["arphardwaretype"]],["bool"]]],[11,"gt","","",49,[[["self"],["arphardwaretype"]],["bool"]]],[11,"ge","","",49,[[["self"],["arphardwaretype"]],["bool"]]],[11,"partial_cmp","pnet_packet::icmp","",53,[[["self"],["icmptype"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",53,[[["self"],["icmptype"]],["bool"]]],[11,"le","","",53,[[["self"],["icmptype"]],["bool"]]],[11,"gt","","",53,[[["self"],["icmptype"]],["bool"]]],[11,"ge","","",53,[[["self"],["icmptype"]],["bool"]]],[11,"partial_cmp","","",54,[[["icmpcode"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",54,[[["icmpcode"],["self"]],["bool"]]],[11,"le","","",54,[[["icmpcode"],["self"]],["bool"]]],[11,"gt","","",54,[[["icmpcode"],["self"]],["bool"]]],[11,"ge","","",54,[[["icmpcode"],["self"]],["bool"]]],[11,"partial_cmp","pnet_packet::icmp::echo_reply","",56,[[["identifier"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",56,[[["identifier"],["self"]],["bool"]]],[11,"le","","",56,[[["identifier"],["self"]],["bool"]]],[11,"gt","","",56,[[["identifier"],["self"]],["bool"]]],[11,"ge","","",56,[[["identifier"],["self"]],["bool"]]],[11,"partial_cmp","","",57,[[["sequencenumber"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",57,[[["sequencenumber"],["self"]],["bool"]]],[11,"le","","",57,[[["sequencenumber"],["self"]],["bool"]]],[11,"gt","","",57,[[["sequencenumber"],["self"]],["bool"]]],[11,"ge","","",57,[[["sequencenumber"],["self"]],["bool"]]],[11,"partial_cmp","pnet_packet::icmp::echo_request","",61,[[["identifier"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",61,[[["identifier"],["self"]],["bool"]]],[11,"le","","",61,[[["identifier"],["self"]],["bool"]]],[11,"gt","","",61,[[["identifier"],["self"]],["bool"]]],[11,"ge","","",61,[[["identifier"],["self"]],["bool"]]],[11,"partial_cmp","","",62,[[["sequencenumber"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",62,[[["sequencenumber"],["self"]],["bool"]]],[11,"le","","",62,[[["sequencenumber"],["self"]],["bool"]]],[11,"gt","","",62,[[["sequencenumber"],["self"]],["bool"]]],[11,"ge","","",62,[[["sequencenumber"],["self"]],["bool"]]],[11,"partial_cmp","pnet_packet::icmpv6","",74,[[["self"],["icmpv6type"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",74,[[["self"],["icmpv6type"]],["bool"]]],[11,"le","","",74,[[["self"],["icmpv6type"]],["bool"]]],[11,"gt","","",74,[[["self"],["icmpv6type"]],["bool"]]],[11,"ge","","",74,[[["self"],["icmpv6type"]],["bool"]]],[11,"partial_cmp","","",75,[[["icmpv6code"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",75,[[["icmpv6code"],["self"]],["bool"]]],[11,"le","","",75,[[["icmpv6code"],["self"]],["bool"]]],[11,"gt","","",75,[[["icmpv6code"],["self"]],["bool"]]],[11,"ge","","",75,[[["icmpv6code"],["self"]],["bool"]]],[11,"partial_cmp","pnet_packet::icmpv6::ndp","",77,[[["self"],["ndpoptiontype"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",77,[[["self"],["ndpoptiontype"]],["bool"]]],[11,"le","","",77,[[["self"],["ndpoptiontype"]],["bool"]]],[11,"gt","","",77,[[["self"],["ndpoptiontype"]],["bool"]]],[11,"ge","","",77,[[["self"],["ndpoptiontype"]],["bool"]]],[11,"partial_cmp","pnet_packet::vlan","",98,[[["self"],["classofservice"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",98,[[["self"],["classofservice"]],["bool"]]],[11,"le","","",98,[[["self"],["classofservice"]],["bool"]]],[11,"gt","","",98,[[["self"],["classofservice"]],["bool"]]],[11,"ge","","",98,[[["self"],["classofservice"]],["bool"]]],[11,"fmt","pnet_packet::ethernet","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","pnet_packet::gre","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",106,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",108,[[["formatter"],["self"]],["result"]]],[11,"fmt","pnet_packet::ip","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","pnet_packet::ipv4","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["formatter"],["self"]],["result"]]],[11,"fmt","pnet_packet::ipv6","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","pnet_packet::udp","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","pnet_packet::tcp","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","pnet_packet::arp","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","pnet_packet::icmp","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","pnet_packet::icmp::echo_reply","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","pnet_packet::icmp::echo_request","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","pnet_packet::icmp::destination_unreachable","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","pnet_packet::icmp::time_exceeded","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","pnet_packet::icmpv6","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","pnet_packet::icmpv6::ndp","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","pnet_packet::vlan","",98,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["formatter"],["self"]],["result"]]],[11,"fmt","pnet_packet::ethernet","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","pnet_packet::ip","",18,[[["formatter"],["self"]],["result"]]],[11,"hash","pnet_packet::ethernet","",8,[[["self"],["__h"]]]],[11,"hash","pnet_packet::ip","",18,[[["self"],["__h"]]]],[11,"hash","pnet_packet::ipv4","",19,[[["self"],["__h"]]]],[11,"hash","pnet_packet::tcp","",42,[[["self"],["__h"]]]],[11,"hash","pnet_packet::arp","",48,[[["self"],["__h"]]]],[11,"hash","","",49,[[["self"],["__h"]]]],[11,"hash","pnet_packet::icmp","",53,[[["self"],["__h"]]]],[11,"hash","","",54,[[["self"],["__h"]]]],[11,"hash","pnet_packet::icmp::echo_reply","",56,[[["self"],["__h"]]]],[11,"hash","","",57,[[["self"],["__h"]]]],[11,"hash","pnet_packet::icmp::echo_request","",61,[[["self"],["__h"]]]],[11,"hash","","",62,[[["self"],["__h"]]]],[11,"hash","pnet_packet::icmpv6","",74,[[["self"],["__h"]]]],[11,"hash","","",75,[[["self"],["__h"]]]],[11,"hash","pnet_packet::icmpv6::ndp","",77,[[["self"],["__h"]]]],[11,"hash","pnet_packet::vlan","",98,[[["self"],["__h"]]]],[11,"packet","pnet_packet::ethernet","",10,[[["self"]]]],[11,"payload","","",10,[[["self"]]]],[11,"packet","","",9,[[["self"]]]],[11,"payload","","",9,[[["self"]]]],[11,"packet","pnet_packet::gre","",13,[[["self"]]]],[11,"payload","","",13,[[["self"]]]],[11,"packet","","",12,[[["self"]]]],[11,"payload","","",12,[[["self"]]]],[11,"packet","","",15,[[["self"]]]],[11,"payload","","",15,[[["self"]]]],[11,"packet","","",14,[[["self"]]]],[11,"payload","","",14,[[["self"]]]],[11,"packet","","",17,[[["self"]]]],[11,"payload","","",17,[[["self"]]]],[11,"packet","","",16,[[["self"]]]],[11,"payload","","",16,[[["self"]]]],[11,"packet","pnet_packet::ipv4","",22,[[["self"]]]],[11,"payload","","",22,[[["self"]]]],[11,"packet","","",21,[[["self"]]]],[11,"payload","","",21,[[["self"]]]],[11,"packet","","",24,[[["self"]]]],[11,"payload","","",24,[[["self"]]]],[11,"packet","","",23,[[["self"]]]],[11,"payload","","",23,[[["self"]]]],[11,"packet","pnet_packet::ipv6","",30,[[["self"]]]],[11,"payload","","",30,[[["self"]]]],[11,"packet","","",29,[[["self"]]]],[11,"payload","","",29,[[["self"]]]],[11,"packet","","",33,[[["self"]]]],[11,"payload","","",33,[[["self"]]]],[11,"packet","","",32,[[["self"]]]],[11,"payload","","",32,[[["self"]]]],[11,"packet","","",35,[[["self"]]]],[11,"payload","","",35,[[["self"]]]],[11,"packet","","",34,[[["self"]]]],[11,"payload","","",34,[[["self"]]]],[11,"packet","","",37,[[["self"]]]],[11,"payload","","",37,[[["self"]]]],[11,"packet","","",36,[[["self"]]]],[11,"payload","","",36,[[["self"]]]],[11,"packet","pnet_packet::udp","",40,[[["self"]]]],[11,"payload","","",40,[[["self"]]]],[11,"packet","","",39,[[["self"]]]],[11,"payload","","",39,[[["self"]]]],[11,"packet","pnet_packet::tcp","",44,[[["self"]]]],[11,"payload","","",44,[[["self"]]]],[11,"packet","","",43,[[["self"]]]],[11,"payload","","",43,[[["self"]]]],[11,"packet","","",46,[[["self"]]]],[11,"payload","","",46,[[["self"]]]],[11,"packet","","",45,[[["self"]]]],[11,"payload","","",45,[[["self"]]]],[11,"packet","pnet_packet::arp","",52,[[["self"]]]],[11,"payload","","",52,[[["self"]]]],[11,"packet","","",51,[[["self"]]]],[11,"payload","","",51,[[["self"]]]],[11,"packet","pnet_packet::icmp","",73,[[["self"]]]],[11,"payload","","",73,[[["self"]]]],[11,"packet","","",72,[[["self"]]]],[11,"payload","","",72,[[["self"]]]],[11,"packet","pnet_packet::icmp::echo_reply","",60,[[["self"]]]],[11,"payload","","",60,[[["self"]]]],[11,"packet","","",59,[[["self"]]]],[11,"payload","","",59,[[["self"]]]],[11,"packet","pnet_packet::icmp::echo_request","",65,[[["self"]]]],[11,"payload","","",65,[[["self"]]]],[11,"packet","","",64,[[["self"]]]],[11,"payload","","",64,[[["self"]]]],[11,"packet","pnet_packet::icmp::destination_unreachable","",68,[[["self"]]]],[11,"payload","","",68,[[["self"]]]],[11,"packet","","",67,[[["self"]]]],[11,"payload","","",67,[[["self"]]]],[11,"packet","pnet_packet::icmp::time_exceeded","",71,[[["self"]]]],[11,"payload","","",71,[[["self"]]]],[11,"packet","","",70,[[["self"]]]],[11,"payload","","",70,[[["self"]]]],[11,"packet","pnet_packet::icmpv6","",97,[[["self"]]]],[11,"payload","","",97,[[["self"]]]],[11,"packet","","",96,[[["self"]]]],[11,"payload","","",96,[[["self"]]]],[11,"packet","pnet_packet::icmpv6::ndp","",85,[[["self"]]]],[11,"payload","","",85,[[["self"]]]],[11,"packet","","",84,[[["self"]]]],[11,"payload","","",84,[[["self"]]]],[11,"packet","","",87,[[["self"]]]],[11,"payload","","",87,[[["self"]]]],[11,"packet","","",86,[[["self"]]]],[11,"payload","","",86,[[["self"]]]],[11,"packet","","",89,[[["self"]]]],[11,"payload","","",89,[[["self"]]]],[11,"packet","","",88,[[["self"]]]],[11,"payload","","",88,[[["self"]]]],[11,"packet","","",91,[[["self"]]]],[11,"payload","","",91,[[["self"]]]],[11,"packet","","",90,[[["self"]]]],[11,"payload","","",90,[[["self"]]]],[11,"packet","","",93,[[["self"]]]],[11,"payload","","",93,[[["self"]]]],[11,"packet","","",92,[[["self"]]]],[11,"payload","","",92,[[["self"]]]],[11,"packet","","",95,[[["self"]]]],[11,"payload","","",95,[[["self"]]]],[11,"packet","","",94,[[["self"]]]],[11,"payload","","",94,[[["self"]]]],[11,"packet","pnet_packet::vlan","",101,[[["self"]]]],[11,"payload","","",101,[[["self"]]]],[11,"packet","","",100,[[["self"]]]],[11,"payload","","",100,[[["self"]]]],[11,"packet_mut","pnet_packet::ethernet","",10,[[["self"]]]],[11,"payload_mut","","",10,[[["self"]]]],[11,"packet_mut","pnet_packet::gre","",13,[[["self"]]]],[11,"payload_mut","","",13,[[["self"]]]],[11,"packet_mut","","",15,[[["self"]]]],[11,"payload_mut","","",15,[[["self"]]]],[11,"packet_mut","","",17,[[["self"]]]],[11,"payload_mut","","",17,[[["self"]]]],[11,"packet_mut","pnet_packet::ipv4","",22,[[["self"]]]],[11,"payload_mut","","",22,[[["self"]]]],[11,"packet_mut","","",24,[[["self"]]]],[11,"payload_mut","","",24,[[["self"]]]],[11,"packet_mut","pnet_packet::ipv6","",30,[[["self"]]]],[11,"payload_mut","","",30,[[["self"]]]],[11,"packet_mut","","",33,[[["self"]]]],[11,"payload_mut","","",33,[[["self"]]]],[11,"packet_mut","","",35,[[["self"]]]],[11,"payload_mut","","",35,[[["self"]]]],[11,"packet_mut","","",37,[[["self"]]]],[11,"payload_mut","","",37,[[["self"]]]],[11,"packet_mut","pnet_packet::udp","",40,[[["self"]]]],[11,"payload_mut","","",40,[[["self"]]]],[11,"packet_mut","pnet_packet::tcp","",44,[[["self"]]]],[11,"payload_mut","","",44,[[["self"]]]],[11,"packet_mut","","",46,[[["self"]]]],[11,"payload_mut","","",46,[[["self"]]]],[11,"packet_mut","pnet_packet::arp","",52,[[["self"]]]],[11,"payload_mut","","",52,[[["self"]]]],[11,"packet_mut","pnet_packet::icmp","",73,[[["self"]]]],[11,"payload_mut","","",73,[[["self"]]]],[11,"packet_mut","pnet_packet::icmp::echo_reply","",60,[[["self"]]]],[11,"payload_mut","","",60,[[["self"]]]],[11,"packet_mut","pnet_packet::icmp::echo_request","",65,[[["self"]]]],[11,"payload_mut","","",65,[[["self"]]]],[11,"packet_mut","pnet_packet::icmp::destination_unreachable","",68,[[["self"]]]],[11,"payload_mut","","",68,[[["self"]]]],[11,"packet_mut","pnet_packet::icmp::time_exceeded","",71,[[["self"]]]],[11,"payload_mut","","",71,[[["self"]]]],[11,"packet_mut","pnet_packet::icmpv6","",97,[[["self"]]]],[11,"payload_mut","","",97,[[["self"]]]],[11,"packet_mut","pnet_packet::icmpv6::ndp","",85,[[["self"]]]],[11,"payload_mut","","",85,[[["self"]]]],[11,"packet_mut","","",87,[[["self"]]]],[11,"payload_mut","","",87,[[["self"]]]],[11,"packet_mut","","",89,[[["self"]]]],[11,"payload_mut","","",89,[[["self"]]]],[11,"packet_mut","","",91,[[["self"]]]],[11,"payload_mut","","",91,[[["self"]]]],[11,"packet_mut","","",93,[[["self"]]]],[11,"payload_mut","","",93,[[["self"]]]],[11,"packet_mut","","",95,[[["self"]]]],[11,"payload_mut","","",95,[[["self"]]]],[11,"packet_mut","pnet_packet::vlan","",101,[[["self"]]]],[11,"payload_mut","","",101,[[["self"]]]],[11,"from_packet","pnet_packet::ethernet","",9,[[["self"]],["ethernet"]]],[11,"from_packet","","",10,[[["self"]],["ethernet"]]],[11,"from_packet","pnet_packet::gre","",12,[[["self"]],["gre"]]],[11,"from_packet","","",13,[[["self"]],["gre"]]],[11,"from_packet","","",14,[[["self"]],["u16be"]]],[11,"from_packet","","",15,[[["self"]],["u16be"]]],[11,"from_packet","","",16,[[["self"]],["u32be"]]],[11,"from_packet","","",17,[[["self"]],["u32be"]]],[11,"from_packet","pnet_packet::ipv4","",21,[[["self"]],["ipv4"]]],[11,"from_packet","","",22,[[["self"]],["ipv4"]]],[11,"from_packet","","",23,[[["self"]],["ipv4option"]]],[11,"from_packet","","",24,[[["self"]],["ipv4option"]]],[11,"from_packet","pnet_packet::ipv6","",29,[[["self"]],["ipv6"]]],[11,"from_packet","","",30,[[["self"]],["ipv6"]]],[11,"from_packet","","",32,[[["self"]],["extension"]]],[11,"from_packet","","",33,[[["self"]],["extension"]]],[11,"from_packet","","",34,[[["self"]],["routing"]]],[11,"from_packet","","",35,[[["self"]],["routing"]]],[11,"from_packet","","",36,[[["self"]],["fragment"]]],[11,"from_packet","","",37,[[["self"]],["fragment"]]],[11,"from_packet","pnet_packet::udp","",39,[[["self"]],["udp"]]],[11,"from_packet","","",40,[[["self"]],["udp"]]],[11,"from_packet","pnet_packet::tcp","",43,[[["self"]],["tcp"]]],[11,"from_packet","","",44,[[["self"]],["tcp"]]],[11,"from_packet","","",45,[[["self"]],["tcpoption"]]],[11,"from_packet","","",46,[[["self"]],["tcpoption"]]],[11,"from_packet","pnet_packet::arp","",51,[[["self"]],["arp"]]],[11,"from_packet","","",52,[[["self"]],["arp"]]],[11,"from_packet","pnet_packet::icmp","",72,[[["self"]],["icmp"]]],[11,"from_packet","","",73,[[["self"]],["icmp"]]],[11,"from_packet","pnet_packet::icmp::echo_reply","",59,[[["self"]],["echoreply"]]],[11,"from_packet","","",60,[[["self"]],["echoreply"]]],[11,"from_packet","pnet_packet::icmp::echo_request","",64,[[["self"]],["echorequest"]]],[11,"from_packet","","",65,[[["self"]],["echorequest"]]],[11,"from_packet","pnet_packet::icmp::destination_unreachable","",67,[[["self"]],["destinationunreachable"]]],[11,"from_packet","","",68,[[["self"]],["destinationunreachable"]]],[11,"from_packet","pnet_packet::icmp::time_exceeded","",70,[[["self"]],["timeexceeded"]]],[11,"from_packet","","",71,[[["self"]],["timeexceeded"]]],[11,"from_packet","pnet_packet::icmpv6","",96,[[["self"]],["icmpv6"]]],[11,"from_packet","","",97,[[["self"]],["icmpv6"]]],[11,"from_packet","pnet_packet::icmpv6::ndp","",84,[[["self"]],["ndpoption"]]],[11,"from_packet","","",85,[[["self"]],["ndpoption"]]],[11,"from_packet","","",86,[[["self"]],["routersolicit"]]],[11,"from_packet","","",87,[[["self"]],["routersolicit"]]],[11,"from_packet","","",88,[[["self"]],["routeradvert"]]],[11,"from_packet","","",89,[[["self"]],["routeradvert"]]],[11,"from_packet","","",90,[[["self"]],["neighborsolicit"]]],[11,"from_packet","","",91,[[["self"]],["neighborsolicit"]]],[11,"from_packet","","",92,[[["self"]],["neighboradvert"]]],[11,"from_packet","","",93,[[["self"]],["neighboradvert"]]],[11,"from_packet","","",94,[[["self"]],["redirect"]]],[11,"from_packet","","",95,[[["self"]],["redirect"]]],[11,"from_packet","pnet_packet::vlan","",100,[[["self"]],["vlan"]]],[11,"from_packet","","",101,[[["self"]],["vlan"]]],[11,"packet_size","pnet_packet::ethernet","",9,[[["self"]],["usize"]]],[11,"packet_size","","",10,[[["self"]],["usize"]]],[11,"packet_size","pnet_packet::gre","",12,[[["self"]],["usize"]]],[11,"packet_size","","",13,[[["self"]],["usize"]]],[11,"packet_size","","",14,[[["self"]],["usize"]]],[11,"packet_size","","",15,[[["self"]],["usize"]]],[11,"packet_size","","",16,[[["self"]],["usize"]]],[11,"packet_size","","",17,[[["self"]],["usize"]]],[11,"packet_size","pnet_packet::ipv4","",21,[[["self"]],["usize"]]],[11,"packet_size","","",22,[[["self"]],["usize"]]],[11,"packet_size","","",23,[[["self"]],["usize"]]],[11,"packet_size","","",24,[[["self"]],["usize"]]],[11,"packet_size","pnet_packet::ipv6","",29,[[["self"]],["usize"]]],[11,"packet_size","","",30,[[["self"]],["usize"]]],[11,"packet_size","","",32,[[["self"]],["usize"]]],[11,"packet_size","","",33,[[["self"]],["usize"]]],[11,"packet_size","","",34,[[["self"]],["usize"]]],[11,"packet_size","","",35,[[["self"]],["usize"]]],[11,"packet_size","","",36,[[["self"]],["usize"]]],[11,"packet_size","","",37,[[["self"]],["usize"]]],[11,"packet_size","pnet_packet::udp","",39,[[["self"]],["usize"]]],[11,"packet_size","","",40,[[["self"]],["usize"]]],[11,"packet_size","pnet_packet::tcp","",43,[[["self"]],["usize"]]],[11,"packet_size","","",44,[[["self"]],["usize"]]],[11,"packet_size","","",45,[[["self"]],["usize"]]],[11,"packet_size","","",46,[[["self"]],["usize"]]],[11,"packet_size","pnet_packet::arp","",51,[[["self"]],["usize"]]],[11,"packet_size","","",52,[[["self"]],["usize"]]],[11,"packet_size","pnet_packet::icmp","",72,[[["self"]],["usize"]]],[11,"packet_size","","",73,[[["self"]],["usize"]]],[11,"packet_size","pnet_packet::icmp::echo_reply","",59,[[["self"]],["usize"]]],[11,"packet_size","","",60,[[["self"]],["usize"]]],[11,"packet_size","pnet_packet::icmp::echo_request","",64,[[["self"]],["usize"]]],[11,"packet_size","","",65,[[["self"]],["usize"]]],[11,"packet_size","pnet_packet::icmp::destination_unreachable","",67,[[["self"]],["usize"]]],[11,"packet_size","","",68,[[["self"]],["usize"]]],[11,"packet_size","pnet_packet::icmp::time_exceeded","",70,[[["self"]],["usize"]]],[11,"packet_size","","",71,[[["self"]],["usize"]]],[11,"packet_size","pnet_packet::icmpv6","",96,[[["self"]],["usize"]]],[11,"packet_size","","",97,[[["self"]],["usize"]]],[11,"packet_size","pnet_packet::icmpv6::ndp","",84,[[["self"]],["usize"]]],[11,"packet_size","","",85,[[["self"]],["usize"]]],[11,"packet_size","","",86,[[["self"]],["usize"]]],[11,"packet_size","","",87,[[["self"]],["usize"]]],[11,"packet_size","","",88,[[["self"]],["usize"]]],[11,"packet_size","","",89,[[["self"]],["usize"]]],[11,"packet_size","","",90,[[["self"]],["usize"]]],[11,"packet_size","","",91,[[["self"]],["usize"]]],[11,"packet_size","","",92,[[["self"]],["usize"]]],[11,"packet_size","","",93,[[["self"]],["usize"]]],[11,"packet_size","","",94,[[["self"]],["usize"]]],[11,"packet_size","","",95,[[["self"]],["usize"]]],[11,"packet_size","pnet_packet::vlan","",100,[[["self"]],["usize"]]],[11,"packet_size","","",101,[[["self"]],["usize"]]],[11,"to_primitive_values","pnet_packet::ethernet","",8,[[["self"]]]],[11,"to_primitive_values","pnet_packet::ip","",18,[[["self"]]]],[11,"to_primitive_values","pnet_packet::ipv4","",19,[[["self"]]]],[11,"to_primitive_values","pnet_packet::tcp","",42,[[["self"]]]],[11,"to_primitive_values","pnet_packet::arp","",48,[[["self"]]]],[11,"to_primitive_values","","",49,[[["self"]]]],[11,"to_primitive_values","pnet_packet::icmp","",53,[[["self"]]]],[11,"to_primitive_values","","",54,[[["self"]]]],[11,"to_primitive_values","pnet_packet::icmp::echo_reply","",56,[[["self"]]]],[11,"to_primitive_values","","",57,[[["self"]]]],[11,"to_primitive_values","pnet_packet::icmp::echo_request","",61,[[["self"]]]],[11,"to_primitive_values","","",62,[[["self"]]]],[11,"to_primitive_values","pnet_packet::icmpv6","",74,[[["self"]]]],[11,"to_primitive_values","","",75,[[["self"]]]],[11,"to_primitive_values","pnet_packet::icmpv6::ndp","",77,[[["self"]]]],[11,"to_primitive_values","pnet_packet::vlan","",98,[[["self"]]]],[11,"as_slice","pnet_packet","Get a slice of the packet data.",4,[[["self"]]]],[11,"to_immutable","","No-op - returns `self`.",4,[[],["packetdata"]]],[11,"len","","A length of the packet data.",4,[[["self"]],["usize"]]],[11,"as_slice","","Get packet data as a slice.",5,[[["self"]]]],[11,"as_mut_slice","","Get packet data as a mutable slice.",5,[[["self"]]]],[11,"to_immutable","","Get an immutable version of packet data.",5,[[],["packetdata"]]],[11,"len","","Get a length of data in the packet.",5,[[["self"]],["usize"]]]],"p":[[8,"Packet"],[8,"MutablePacket"],[8,"FromPacket"],[8,"PacketSize"],[4,"PacketData"],[4,"MutPacketData"],[8,"PrimitiveValues"],[3,"Ethernet"],[3,"EtherType"],[3,"EthernetPacket"],[3,"MutableEthernetPacket"],[3,"Gre"],[3,"GrePacket"],[3,"MutableGrePacket"],[3,"U16BEPacket"],[3,"MutableU16BEPacket"],[3,"U32BEPacket"],[3,"MutableU32BEPacket"],[3,"IpNextHeaderProtocol"],[3,"Ipv4OptionNumber"],[3,"Ipv4"],[3,"Ipv4Packet"],[3,"MutableIpv4Packet"],[3,"Ipv4OptionPacket"],[3,"MutableIpv4OptionPacket"],[3,"Ipv6"],[3,"Extension"],[3,"Routing"],[3,"Fragment"],[3,"Ipv6Packet"],[3,"MutableIpv6Packet"],[3,"ExtensionIterable"],[3,"ExtensionPacket"],[3,"MutableExtensionPacket"],[3,"RoutingPacket"],[3,"MutableRoutingPacket"],[3,"FragmentPacket"],[3,"MutableFragmentPacket"],[3,"Udp"],[3,"UdpPacket"],[3,"MutableUdpPacket"],[3,"Tcp"],[3,"TcpOptionNumber"],[3,"TcpPacket"],[3,"MutableTcpPacket"],[3,"TcpOptionPacket"],[3,"MutableTcpOptionPacket"],[3,"TcpOption"],[3,"ArpOperation"],[3,"ArpHardwareType"],[3,"Arp"],[3,"ArpPacket"],[3,"MutableArpPacket"],[3,"IcmpType"],[3,"IcmpCode"],[3,"Icmp"],[3,"Identifier"],[3,"SequenceNumber"],[3,"EchoReply"],[3,"EchoReplyPacket"],[3,"MutableEchoReplyPacket"],[3,"Identifier"],[3,"SequenceNumber"],[3,"EchoRequest"],[3,"EchoRequestPacket"],[3,"MutableEchoRequestPacket"],[3,"DestinationUnreachable"],[3,"DestinationUnreachablePacket"],[3,"MutableDestinationUnreachablePacket"],[3,"TimeExceeded"],[3,"TimeExceededPacket"],[3,"MutableTimeExceededPacket"],[3,"IcmpPacket"],[3,"MutableIcmpPacket"],[3,"Icmpv6Type"],[3,"Icmpv6Code"],[3,"Icmpv6"],[3,"NdpOptionType"],[3,"NdpOption"],[3,"RouterSolicit"],[3,"RouterAdvert"],[3,"NeighborSolicit"],[3,"NeighborAdvert"],[3,"Redirect"],[3,"NdpOptionPacket"],[3,"MutableNdpOptionPacket"],[3,"RouterSolicitPacket"],[3,"MutableRouterSolicitPacket"],[3,"RouterAdvertPacket"],[3,"MutableRouterAdvertPacket"],[3,"NeighborSolicitPacket"],[3,"MutableNeighborSolicitPacket"],[3,"NeighborAdvertPacket"],[3,"MutableNeighborAdvertPacket"],[3,"RedirectPacket"],[3,"MutableRedirectPacket"],[3,"Icmpv6Packet"],[3,"MutableIcmpv6Packet"],[3,"ClassOfService"],[3,"Vlan"],[3,"VlanPacket"],[3,"MutableVlanPacket"],[8,"Octets"],[3,"EthernetIterable"],[3,"GreIterable"],[3,"U16BEIterable"],[3,"U16BE"],[3,"U32BEIterable"],[3,"U32BE"],[3,"Ipv4Iterable"],[3,"Ipv4OptionIterable"],[3,"Ipv4Option"],[3,"Ipv6Iterable"],[3,"RoutingIterable"],[3,"FragmentIterable"],[3,"UdpIterable"],[3,"TcpIterable"],[3,"TcpOptionIterable"],[3,"ArpIterable"],[3,"IcmpIterable"],[3,"EchoReplyIterable"],[3,"EchoRequestIterable"],[3,"DestinationUnreachableIterable"],[3,"TimeExceededIterable"],[3,"Icmpv6Iterable"],[3,"NdpOptionIterable"],[3,"RouterSolicitIterable"],[3,"RouterAdvertIterable"],[3,"NeighborSolicitIterable"],[3,"NeighborAdvertIterable"],[3,"RedirectIterable"],[3,"VlanIterable"]]};
searchIndex["pnet_sys"] = {"doc":"","i":[[17,"IFF_UP","pnet_sys","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_MULTICAST","","",null,null],[3,"FileDesc","","Any file descriptor on unix, only sockets on Windows.",null,null],[12,"fd","","",0,null],[5,"close","","",null,[[["csocket"]]]],[5,"socket","","",null,[[["c_int"]],["csocket"]]],[5,"getsockopt","","",null,[[["mutbuf"],["csocket"],["c_int"],["mutsocklen"]],["c_int"]]],[5,"setsockopt","","",null,[[["socklen"],["buf"],["csocket"],["c_int"]],["c_int"]]],[5,"timeval_to_duration","","Convert a platform specific `timeval` into a Duration.",null,[[["timeval"]],["duration"]]],[5,"duration_to_timeval","","Convert a Duration into a platform specific `timeval`.",null,[[["duration"]],["timeval"]]],[5,"timespec_to_duration","","Convert a platform specific `timespec` into a Duration.",null,[[["timespec"]],["duration"]]],[5,"duration_to_timespec","","Convert a Duration into a platform specific `timespec`.",null,[[["duration"]],["timespec"]]],[5,"send_to","","",null,[[["socklen"],["csocket"]],[["result",["usize"]],["usize"]]]],[5,"recv_from","","",null,[[["csocket"]],[["result",["usize"]],["usize"]]]],[5,"set_socket_receive_timeout","","Set a timeout for receiving from the socket.",null,[[["csocket"],["duration"]],["result"]]],[5,"get_socket_receive_timeout","","Extracts and returns a timout for reading from the socket.",null,[[["csocket"]],[["result",["duration"]],["duration"]]]],[5,"addr_to_sockaddr","","",null,[[["socketaddr"],["sockaddrstorage"]],["socklen"]]],[5,"sockaddr_to_addr","","",null,[[["sockaddrstorage"],["usize"]],[["socketaddr"],["result",["socketaddr"]]]]],[6,"CSocket","","",null,null],[6,"Buf","","",null,null],[6,"MutBuf","","",null,null],[6,"BufLen","","",null,null],[6,"CouldFail","","",null,null],[6,"SockLen","","",null,null],[6,"MutSockLen","","",null,null],[6,"SockAddr","","",null,null],[6,"SockAddrIn","","",null,null],[6,"SockAddrIn6","","",null,null],[6,"SockAddrStorage","","",null,null],[6,"SockAddrFamily","","",null,null],[6,"SockAddrFamily6","","",null,null],[6,"InAddr","","",null,null],[6,"In6Addr","","",null,null],[6,"TvUsecType","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_TTL","","",null,null],[17,"INVALID_SOCKET","","",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"drop","","",0,[[["self"]]]]],"p":[[3,"FileDesc"]]};
searchIndex["pnet_transport"] = {"doc":"Support for implementing transport layer protocols","i":[[3,"TransportSender","pnet_transport","Structure used for sending at the transport layer. Should…",null,null],[12,"socket","","",0,null],[3,"TransportReceiver","","Structure used for receiving at the transport layer.…",null,null],[12,"socket","","",1,null],[12,"buffer","","",1,null],[12,"channel_type","","",1,null],[3,"Config","","Structure used for holding all configurable options for…",null,null],[3,"Ipv4TransportChannelIterator","","An iterator over packets of type `Ipv4Packet`.",null,null],[3,"UdpTransportChannelIterator","","An iterator over packets of type `UdpPacket`.",null,null],[3,"IcmpTransportChannelIterator","","An iterator over packets of type `IcmpPacket`.",null,null],[3,"Icmpv6TransportChannelIterator","","An iterator over packets of type `Icmpv6Packet`.",null,null],[3,"TcpTransportChannelIterator","","An iterator over packets of type `TcpPacket`.",null,null],[4,"TransportProtocol","","Represents a transport layer protocol.",null,null],[13,"Ipv4","","Represents a transport protocol built on top of IPv4",2,null],[13,"Ipv6","","Represents a transport protocol built on top of IPv6",2,null],[4,"TransportChannelType","","Type of transport channel to present.",null,null],[13,"Layer4","","The application will send and receive transport layer…",3,null],[13,"Layer3","","The application will send and receive IPv4 packets, with…",3,null],[5,"transport_channel","","Create a new `(TransportSender, TransportReceiver)` pair.",null,[[["usize"],["transportchanneltype"]],["result"]]],[5,"transport_channel_with","","Create a new `(TransportSender, TransportReceiver)` pair…",null,[[["config"],["usize"],["transportchanneltype"]],["result"]]],[5,"ipv4_packet_iter","","Return a packet iterator with packets of type `Ipv4Packet`…",null,[[["transportreceiver"]],["ipv4transportchanneliterator"]]],[5,"udp_packet_iter","","Return a packet iterator with packets of type `UdpPacket`…",null,[[["transportreceiver"]],["udptransportchanneliterator"]]],[5,"icmp_packet_iter","","Return a packet iterator with packets of type `IcmpPacket`…",null,[[["transportreceiver"]],["icmptransportchanneliterator"]]],[5,"icmpv6_packet_iter","","Return a packet iterator with packets of type…",null,[[["transportreceiver"]],["icmpv6transportchanneliterator"]]],[5,"tcp_packet_iter","","Return a packet iterator with packets of type `TcpPacket`…",null,[[["transportreceiver"]],["tcptransportchanneliterator"]]],[11,"send_to","","Send a packet to the provided destination.",0,[[["ipaddr"],["self"],["packet"]],[["result",["usize"]],["usize"]]]],[11,"set_ttl","","Sets a time-to-live on the socket, which then applies for…",0,[[["self"],["u8"]],["result"]]],[11,"next","","Get the next (`Ipv4Packet`, `IpAddr`) pair for the given…",4,[[["self"]],["result"]]],[11,"next_with_timeout","","Wait only for a timespan of `t` to receive some data, then…",4,[[["self"],["duration"]],[["result",["option"]],["option"]]]],[11,"next","","Get the next (`UdpPacket`, `IpAddr`) pair for the given…",5,[[["self"]],["result"]]],[11,"next_with_timeout","","Wait only for a timespan of `t` to receive some data, then…",5,[[["self"],["duration"]],[["option"],["result",["option"]]]]],[11,"next","","Get the next (`IcmpPacket`, `IpAddr`) pair for the given…",6,[[["self"]],["result"]]],[11,"next_with_timeout","","Wait only for a timespan of `t` to receive some data, then…",6,[[["self"],["duration"]],[["result",["option"]],["option"]]]],[11,"next","","Get the next (`Icmpv6Packet`, `IpAddr`) pair for the given…",7,[[["self"]],["result"]]],[11,"next_with_timeout","","Wait only for a timespan of `t` to receive some data, then…",7,[[["self"],["duration"]],[["option"],["result",["option"]]]]],[11,"next","","Get the next (`TcpPacket`, `IpAddr`) pair for the given…",8,[[["self"]],["result"]]],[11,"next_with_timeout","","Wait only for a timespan of `t` to receive some data, then…",8,[[["self"],["duration"]],[["result",["option"]],["option"]]]],[14,"transport_channel_iterator","","Create an iterator for some packet type.",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"clone","","",2,[[["self"]],["transportprotocol"]]],[11,"clone","","",3,[[["self"]],["transportchanneltype"]]],[11,"clone","","",9,[[["self"]],["config"]]],[11,"eq","","",9,[[["self"],["config"]],["bool"]]],[11,"ne","","",9,[[["self"],["config"]],["bool"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"hash","","",9,[[["self"],["__h"]]]]],"p":[[3,"TransportSender"],[3,"TransportReceiver"],[4,"TransportProtocol"],[4,"TransportChannelType"],[3,"Ipv4TransportChannelIterator"],[3,"UdpTransportChannelIterator"],[3,"IcmpTransportChannelIterator"],[3,"Icmpv6TransportChannelIterator"],[3,"TcpTransportChannelIterator"],[3,"Config"]]};
searchIndex["ppv_lite86"] = {"doc":"","i":[[0,"x86_64","ppv_lite86","",null,null],[3,"YesS3","ppv_lite86::x86_64","",null,null],[3,"NoS3","","",null,null],[3,"YesS4","","",null,null],[3,"NoS4","","",null,null],[3,"YesA1","","",null,null],[3,"NoA1","","",null,null],[3,"YesA2","","",null,null],[3,"NoA2","","",null,null],[3,"YesNI","","",null,null],[3,"NoNI","","",null,null],[3,"SseMachine","","",null,null],[3,"Avx2Machine","","",null,null],[19,"vec128_storage","","Generic wrapper for unparameterized storage of any of the…",null,null],[19,"vec256_storage","","",null,null],[19,"vec512_storage","","",null,null],[6,"SSE2","","",null,null],[6,"SSSE3","","",null,null],[6,"SSE41","","",null,null],[6,"AVX","","AVX but not AVX2: only 128-bit integer operations, but use…",null,null],[6,"AVX2","","",null,null],[11,"new128","","",0,[[],["self"]]],[11,"split128","","",0,[[]]],[11,"new128","","",1,[[],["self"]]],[11,"split128","","",1,[[]]],[8,"AndNot","ppv_lite86","",null,null],[16,"Output","","",2,null],[10,"andnot","","",2,[[]]],[8,"BSwap","","",null,null],[10,"bswap","","",3,[[],["self"]]],[8,"ArithOps","","Ops that depend on word size",null,null],[8,"BitOps0","","Ops that are independent of word size and endian",null,null],[8,"BitOps32","","",null,null],[8,"BitOps64","","",null,null],[8,"BitOps128","","",null,null],[8,"RotateEachWord32","","",null,null],[10,"rotate_each_word_right7","","",4,[[],["self"]]],[10,"rotate_each_word_right8","","",4,[[],["self"]]],[10,"rotate_each_word_right11","","",4,[[],["self"]]],[10,"rotate_each_word_right12","","",4,[[],["self"]]],[10,"rotate_each_word_right16","","",4,[[],["self"]]],[10,"rotate_each_word_right20","","",4,[[],["self"]]],[10,"rotate_each_word_right24","","",4,[[],["self"]]],[10,"rotate_each_word_right25","","",4,[[],["self"]]],[8,"RotateEachWord64","","",null,null],[10,"rotate_each_word_right32","","",5,[[],["self"]]],[8,"RotateEachWord128","","",null,null],[8,"UnsafeFrom","","",null,null],[10,"unsafe_from","","",6,[[["t"]],["self"]]],[8,"Vec2","","A vector composed of two elements, which may be words or…",null,null],[10,"extract","","",7,[[["u32"]],["w"]]],[10,"insert","","",7,[[["w"],["u32"]],["self"]]],[8,"Vec4","","A vector composed of four elements, which may be words or…",null,null],[10,"extract","","",8,[[["u32"]],["w"]]],[10,"insert","","",8,[[["w"],["u32"]],["self"]]],[8,"Words4","","A vector composed of four words; depending on their size,…",null,null],[10,"shuffle1230","","",9,[[],["self"]]],[10,"shuffle2301","","",9,[[],["self"]]],[10,"shuffle3012","","",9,[[],["self"]]],[8,"LaneWords4","","A vector composed one or more lanes each composed of four…",null,null],[10,"shuffle_lane_words1230","","",10,[[],["self"]]],[10,"shuffle_lane_words2301","","",10,[[],["self"]]],[10,"shuffle_lane_words3012","","",10,[[],["self"]]],[8,"Swap64","","Exchange neigboring ranges of bits of the specified size",null,null],[10,"swap1","","",11,[[],["self"]]],[10,"swap2","","",11,[[],["self"]]],[10,"swap4","","",11,[[],["self"]]],[10,"swap8","","",11,[[],["self"]]],[10,"swap16","","",11,[[],["self"]]],[10,"swap32","","",11,[[],["self"]]],[10,"swap64","","",11,[[],["self"]]],[8,"u32x4","","",null,null],[8,"u64x2","","",null,null],[8,"u128x1","","",null,null],[8,"u32x4x2","","",null,null],[8,"u64x2x2","","",null,null],[8,"u64x4","","",null,null],[8,"u128x2","","",null,null],[8,"u32x4x4","","",null,null],[8,"u64x2x4","","",null,null],[8,"u128x4","","",null,null],[8,"MultiLane","","A vector composed of multiple 128-bit lanes.",null,null],[10,"to_lanes","","Split a multi-lane vector into single-lane vectors.",12,[[],["lanes"]]],[10,"from_lanes","","Build a multi-lane vector from individual lanes.",12,[[["lanes"]],["self"]]],[8,"VZip","","Combine single vectors into a multi-lane vector.",null,null],[10,"vzip","","",13,[[],["v"]]],[8,"Machine","","",null,null],[16,"u32x4","","",14,null],[16,"u64x2","","",14,null],[16,"u128x1","","",14,null],[16,"u32x4x2","","",14,null],[16,"u64x2x2","","",14,null],[16,"u64x4","","",14,null],[16,"u128x2","","",14,null],[16,"u32x4x4","","",14,null],[16,"u64x2x4","","",14,null],[16,"u128x4","","",14,null],[11,"unpack","","",14,[[["s"]],["store"]]],[11,"vec","","",14,[[["a"]],["v"]]],[11,"read_le","","",14,[[],["v"]]],[11,"read_be","","",14,[[],["v"]]],[10,"instance","","",14,[[],["self"]]],[8,"Store","","",null,null],[10,"unpack","","",15,[[["s"]],["self"]]],[8,"StoreBytes","","",null,null],[10,"unsafe_read_le","","",16,[[],["self"]]],[10,"unsafe_read_be","","",16,[[],["self"]]],[10,"write_le","","",16,[[]]],[10,"write_be","","",16,[[]]],[14,"dispatch","","Generate the full set of optimized implementations to take…",null,null],[14,"dispatch_light128","","Generate only the basic implementations necessary to be…",null,null],[14,"dispatch_light256","","Generate only the basic implementations necessary to be…",null,null],[11,"from","ppv_lite86::x86_64","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"instance","","",27,[[],["self"]]],[11,"instance","","",28,[[],["self"]]],[11,"unpack","","",29,[[["vec128_storage"]],["self"]]],[11,"into","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"clone","","",17,[[["self"]],["yess3"]]],[11,"clone","","",18,[[["self"]],["nos3"]]],[11,"clone","","",19,[[["self"]],["yess4"]]],[11,"clone","","",20,[[["self"]],["nos4"]]],[11,"clone","","",21,[[["self"]],["yesa1"]]],[11,"clone","","",22,[[["self"]],["noa1"]]],[11,"clone","","",23,[[["self"]],["yesa2"]]],[11,"clone","","",24,[[["self"]],["noa2"]]],[11,"clone","","",25,[[["self"]],["yesni"]]],[11,"clone","","",26,[[["self"]],["noni"]]],[11,"clone","","",27,[[["self"]],["ssemachine"]]],[11,"clone","","",28,[[["self"]],["avx2machine"]]],[11,"clone","","",29,[[["self"]],["vec128_storage"]]],[11,"clone","","",0,[[["self"]],["vec256_storage"]]],[11,"clone","","",1,[[["self"]],["vec512_storage"]]],[11,"default","","",29,[[],["self"]]],[11,"default","","",0,[[],["self"]]],[11,"default","","",1,[[],["self"]]],[11,"unpack","ppv_lite86","",14,[[["s"]],["store"]]],[11,"vec","","",14,[[["a"]],["v"]]],[11,"read_le","","",14,[[],["v"]]],[11,"read_be","","",14,[[],["v"]]]],"p":[[19,"vec256_storage"],[19,"vec512_storage"],[8,"AndNot"],[8,"BSwap"],[8,"RotateEachWord32"],[8,"RotateEachWord64"],[8,"UnsafeFrom"],[8,"Vec2"],[8,"Vec4"],[8,"Words4"],[8,"LaneWords4"],[8,"Swap64"],[8,"MultiLane"],[8,"VZip"],[8,"Machine"],[8,"Store"],[8,"StoreBytes"],[3,"YesS3"],[3,"NoS3"],[3,"YesS4"],[3,"NoS4"],[3,"YesA1"],[3,"NoA1"],[3,"YesA2"],[3,"NoA2"],[3,"YesNI"],[3,"NoNI"],[3,"SseMachine"],[3,"Avx2Machine"],[19,"vec128_storage"]]};
searchIndex["proc_macro2"] = {"doc":"A wrapper around the procedural macro API of the…","i":[[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a…",null,null],[3,"LexError","","Error returned from `TokenStream::from_str`.",null,null],[3,"Span","","A region of source code, along with macro expansion…",null,null],[3,"Group","","A delimited token stream.",null,null],[3,"Punct","","An `Punct` is an single punctuation character like `+`,…",null,null],[3,"Ident","","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Literal","","A literal string (`\"hello\"`), byte string (`b\"hello\"`),…",null,null],[4,"TokenTree","","A single token or a delimited sequence of token trees…",null,null],[13,"Group","","A token stream surrounded by bracket delimiters.",0,null],[13,"Ident","","An identifier.",0,null],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",0,null],[13,"Literal","","A literal character (`'a'`), string (`\"hello\"`), number…",0,null],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",null,null],[13,"Parenthesis","","`( ... )`",1,null],[13,"Brace","","`{ ... }`",1,null],[13,"Bracket","","`[ ... ]`",1,null],[13,"None","","`Ø ... Ø`",1,null],[4,"Spacing","","Whether an `Punct` is followed immediately by another…",null,null],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,null],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `'` is `Joint` in `'#`.",2,null],[0,"token_stream","","Public implementation details for the `TokenStream` type,…",null,null],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`'s `TokenTree`s.",null,null],[11,"new","proc_macro2","Returns an empty `TokenStream` containing no token trees.",3,[[],["tokenstream"]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",3,[[["self"]],["bool"]]],[11,"call_site","","The span of the invocation of the current procedural macro.",4,[[],["span"]]],[11,"unwrap","","Convert `proc_macro2::Span` to `proc_macro::Span`.",4,[[],["span"]]],[11,"join","","Create a new span encompassing `self` and `other`.",4,[[["span"],["self"]],[["span"],["option",["span"]]]]],[11,"span","","Returns the span of this tree, delegating to the `span`…",0,[[["self"]],["span"]]],[11,"set_span","","Configures the span for only this token.",0,[[["self"],["span"]]]],[11,"new","","Creates a new `Group` with the given delimiter and token…",5,[[["tokenstream"],["delimiter"]],["group"]]],[11,"delimiter","","Returns the delimiter of this `Group`",5,[[["self"]],["delimiter"]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in…",5,[[["self"]],["tokenstream"]]],[11,"span","","Returns the span for the delimiters of this token stream,…",5,[[["self"]],["span"]]],[11,"span_open","","Returns the span pointing to the opening delimiter of this…",5,[[["self"]],["span"]]],[11,"span_close","","Returns the span pointing to the closing delimiter of this…",5,[[["self"]],["span"]]],[11,"set_span","","Configures the span for this `Group`'s delimiters, but not…",5,[[["self"],["span"]]]],[11,"new","","Creates a new `Punct` from the given character and spacing.",6,[[["char"],["spacing"]],["punct"]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",6,[[["self"]],["char"]]],[11,"spacing","","Returns the spacing of this punctuation character,…",6,[[["self"]],["spacing"]]],[11,"span","","Returns the span for this punctuation character.",6,[[["self"]],["span"]]],[11,"set_span","","Configure the span for this punctuation character.",6,[[["self"],["span"]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",7,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",7,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",7,[[["self"],["span"]]]],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u8"]],["literal"]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u16"]],["literal"]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u32"]],["literal"]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u64"]],["literal"]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u128"]],["literal"]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["usize"]],["literal"]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i8"]],["literal"]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i16"]],["literal"]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i32"]],["literal"]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i64"]],["literal"]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i128"]],["literal"]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["isize"]],["literal"]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u8"]],["literal"]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u16"]],["literal"]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u32"]],["literal"]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u64"]],["literal"]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u128"]],["literal"]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["usize"]],["literal"]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i8"]],["literal"]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i16"]],["literal"]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i32"]],["literal"]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i64"]],["literal"]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i128"]],["literal"]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["isize"]],["literal"]]],[11,"f64_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[["f64"]],["literal"]]],[11,"f64_suffixed","","Creates a new suffixed floating-point literal.",8,[[["f64"]],["literal"]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[["f32"]],["literal"]]],[11,"f32_suffixed","","Creates a new suffixed floating-point literal.",8,[[["f32"]],["literal"]]],[11,"string","","String literal.",8,[[["str"]],["literal"]]],[11,"character","","Character literal.",8,[[["char"]],["literal"]]],[11,"byte_string","","Byte string literal.",8,[[],["literal"]]],[11,"span","","Returns the span encompassing this literal.",8,[[["self"]],["span"]]],[11,"set_span","","Configures the span associated for this literal.",8,[[["self"],["span"]]]],[11,"subspan","","Returns a `Span` that is a subset of `self.span()`…",8,[[["rangebounds",["usize"]],["self"],["usize"]],[["span"],["option",["span"]]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","proc_macro2::token_stream","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","proc_macro2","",4,[[["span"]],["span"]]],[11,"from","","",3,[[["tokenstream"]],["tokenstream"]]],[11,"from","","",3,[[["tokentree"]],["self"]]],[11,"from","","",0,[[["group"]],["tokentree"]]],[11,"from","","",0,[[["ident"]],["tokentree"]]],[11,"from","","",0,[[["punct"]],["tokentree"]]],[11,"from","","",0,[[["literal"]],["tokentree"]]],[11,"extend","","",3,[[["intoiterator"],["self"]]]],[11,"extend","","",3,[[["self"],["intoiterator"]]]],[11,"into_iter","","",3,[[],["intoiter"]]],[11,"next","proc_macro2::token_stream","",10,[[["self"]],[["option",["tokentree"]],["tokentree"]]]],[11,"clone","proc_macro2","",3,[[["self"]],["tokenstream"]]],[11,"clone","","",4,[[["self"]],["span"]]],[11,"clone","","",0,[[["self"]],["tokentree"]]],[11,"clone","","",5,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["delimiter"]]],[11,"clone","","",6,[[["self"]],["punct"]]],[11,"clone","","",2,[[["self"]],["spacing"]]],[11,"clone","","",7,[[["self"]],["ident"]]],[11,"clone","","",8,[[["self"]],["literal"]]],[11,"clone","proc_macro2::token_stream","",10,[[["self"]],["intoiter"]]],[11,"default","proc_macro2","",3,[[],["self"]]],[11,"cmp","","",7,[[["self"],["ident"]],["ordering"]]],[11,"eq","","",1,[[["self"],["delimiter"]],["bool"]]],[11,"eq","","",2,[[["spacing"],["self"]],["bool"]]],[11,"eq","","",7,[[["self"],["ident"]],["bool"]]],[11,"eq","","",7,[[["t"],["self"]],["bool"]]],[11,"partial_cmp","","",7,[[["self"],["ident"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","proc_macro2::token_stream","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","proc_macro2","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"hash","","",7,[[["self"],["h"]]]],[11,"from_iter","","",3,[[["intoiterator"]],["self"]]],[11,"from_iter","","",3,[[["intoiterator"]],["self"]]],[11,"from_str","","",3,[[["str"]],[["lexerror"],["tokenstream"],["result",["tokenstream","lexerror"]]]]]],"p":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"TokenStream"],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"LexError"],[3,"IntoIter"]]};
searchIndex["proc_macro_error"] = {"doc":"proc-macro-error","i":[[23,"proc_macro_error","proc_macro_error","",null,null],[3,"Diagnostic","","Represents a single diagnostic message",null,null],[4,"Level","","Represents a diagnostic level",null,null],[13,"Error","","",0,null],[13,"Warning","","",0,null],[5,"abort_if_dirty","","Abort macro execution and display all the emitted errors,…",null,[[]]],[0,"dummy","","Facility to emit dummy implementations (or whatever) in…",null,null],[5,"set_dummy","proc_macro_error::dummy","Sets dummy token stream which will be appended to…",null,[[["tokenstream"]],[["option",["tokenstream"]],["tokenstream"]]]],[11,"new","proc_macro_error","Create a new diagnostic message that points to…",1,[[["string"],["level"]],["self"]]],[11,"spanned","","Create a new diagnostic message that points to the `span`",1,[[["string"],["level"],["span"]],["self"]]],[11,"span_error","","Add another error message to self such that it will be…",1,[[["string"],["span"]],["self"]]],[11,"span_help","","Attach a \"help\" note to your main message, the note will…",1,[[["string"],["span"]],["self"]]],[11,"help","","Attach a \"help\" note to your main message.",1,[[["string"]],["self"]]],[11,"span_note","","Attach a note to your main message, the note will have…",1,[[["string"],["span"]],["self"]]],[11,"note","","Attach a note to your main message",1,[[["string"]],["self"]]],[11,"message","","The message of main warning/error (no notes attached)",1,[[["self"]],["str"]]],[11,"abort","","Abort the proc-macro's execution and display the diagnostic.",1,[[]]],[11,"emit","","Display the diagnostic while not aborting macro execution.",1,[[]]],[8,"ResultExt","","This traits expands `Result<T, Into<Diagnostic>>` with…",null,null],[16,"Ok","","",2,null],[10,"unwrap_or_abort","","Behaves like `Result::unwrap`: if self is `Ok` yield the…",2,[[]]],[10,"expect_or_abort","","Behaves like `Result::expect`: if self is `Ok` yield the…",2,[[["str"]]]],[8,"OptionExt","","This traits expands `Option` with some handy shortcuts.",null,null],[16,"Some","","",3,null],[10,"expect_or_abort","","Behaves like `Option::expect`: if self is `Some` yield the…",3,[[["str"]]]],[14,"diagnostic","","Build `Diagnostic` instance from provided arguments.",null,null],[14,"abort","","Abort proc-macro execution right now and display the error.",null,null],[14,"abort_call_site","","Shortcut for `abort!(Span::call_site(), msg...)`. This…",null,null],[14,"emit_error","","Emit an error while not aborting the proc-macro right away.",null,null],[14,"emit_call_site_error","","Shortcut for `emit_error!(Span::call_site(), ...)`. This…",null,null],[14,"emit_warning","","Emit a warning. Warnings are not errors and compilation…",null,null],[14,"emit_call_site_warning","","Shortcut for `emit_warning!(Span::call_site(), ...)`.",null,null],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"span","","",1,[[["self"]],["span"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["error"]],["self"]]],[11,"eq","","",0,[[["level"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"to_tokens","","",1,[[["tokenstream"],["self"]]]]],"p":[[4,"Level"],[3,"Diagnostic"],[8,"ResultExt"],[8,"OptionExt"]]};
searchIndex["proc_macro_error_attr"] = {"doc":"This is `#[proc_macro_error]` attribute to be used with…","i":[[23,"proc_macro_error","proc_macro_error_attr","",null,null]],"p":[]};
searchIndex["quick_error"] = {"doc":"A macro which makes errors easy to write","i":[[3,"Context","quick_error","Generic context type",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[8,"ResultExt","","Result extension trait adding a `context` method",null,null],[10,"context","","The method is use to add context information to current…",1,[[["x"]],[["result",["context"]],["context"]]]],[14,"quick_error","","Main macro that does all the work",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Context"],[8,"ResultExt"]]};
searchIndex["quote"] = {"doc":"This crate provides the [`quote!`] macro for turning Rust…","i":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending…",null,null],[10,"append","","For use by `ToTokens` implementations.",0,[[["u"],["self"]]]],[10,"append_all","","For use by `ToTokens` implementations.",0,[[["self"],["i"]]]],[10,"append_separated","","For use by `ToTokens` implementations.",0,[[["u"],["self"],["i"]]]],[10,"append_terminated","","For use by `ToTokens` implementations.",0,[[["u"],["self"],["i"]]]],[8,"IdentFragment","","Specialized formatting trait used by `format_ident!`.",null,null],[10,"fmt","","Format this value as an identifier fragment.",1,[[["formatter"],["self"]],["result"]]],[11,"span","","Span associated with this `IdentFragment`.",1,[[["self"]],[["option",["span"]],["span"]]]],[8,"ToTokens","","Types that can be interpolated inside a `quote!` invocation.",null,null],[10,"to_tokens","","Write `self` to the given `TokenStream`.",2,[[["tokenstream"],["self"]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[["self"]],["tokenstream"]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream"]]],[14,"format_ident","","Formatting macro for constructing `Ident`s.",null,null],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens…",null,null],[11,"span","","Span associated with this `IdentFragment`.",1,[[["self"]],[["option",["span"]],["span"]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[["self"]],["tokenstream"]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream"]]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","i":[[8,"CryptoRng","rand","A marker trait used to indicate that an [`RngCore`] or…",null,null],[3,"Error","","Error type of random number generators",null,null],[8,"RngCore","","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",0,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",0,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",0,[[["self"]]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",0,[[["self"]],[["error"],["result",["error"]]]]],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",1,null],[10,"from_seed","","Create a new PRNG using the given seed.",1,[[],["self"]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",1,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",1,[[["r"]],[["error"],["result",["error"]]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via [`getrandom`].",1,[[],["self"]]],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number…",null,[[],["threadrng"]]],[5,"random","","Generates a random value using the thread-local random…",null,[[],["t"]]],[0,"distributions","","Generating random samples from probability distributions",null,null],[3,"Bernoulli","rand::distributions","The Bernoulli distribution.",null,null],[3,"Open01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"Alphanumeric","","Sample a `char`, uniformly distributed over ASCII letters…",null,null],[3,"Uniform","","Sample values uniformly between two bounds.",null,null],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",null,null],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",null,null],[3,"Dirichlet","","The dirichelet distribution `Dirichlet(alpha)`.",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[3,"Exp1","","Samples floating-point numbers according to the…",null,null],[3,"Beta","","The Beta distribution with shape parameters `alpha` and…",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the…",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the…",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"StandardNormal","","Samples floating-point numbers according to the normal…",null,null],[3,"Pareto","","Samples floating-point numbers according to the Pareto…",null,null],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",null,null],[3,"Triangular","","The triangular distribution.",null,null],[3,"UnitCircle","","Samples uniformly from the edge of the unit circle in two…",null,null],[3,"UnitSphereSurface","","Samples uniformly from the surface of the unit sphere in…",null,null],[3,"Weibull","","Samples floating-point numbers according to the Weibull…",null,null],[3,"DistIter","","An iterator that generates random values of `T` with…",null,null],[3,"Standard","","A generic random value distribution, implemented for many…",null,null],[4,"BernoulliError","","Error type returned from `Bernoulli::new`.",null,null],[13,"InvalidProbability","","`p < 0` or `p > 1`.",2,null],[11,"new","","Construct a new `Bernoulli` with the given probability of…",3,[[["f64"]],[["result",["bernoulli","bernoullierror"]],["bernoulli"],["bernoullierror"]]]],[11,"from_ratio","","Construct a new `Bernoulli` with the probability of…",3,[[["u32"]],[["result",["bernoulli","bernoullierror"]],["bernoulli"],["bernoullierror"]]]],[11,"new","","Construct a new `Binomial` with the given shape parameters…",4,[[["f64"],["u64"]],["binomial"]]],[11,"new","","Construct a new `Cauchy` with the given shape parameters…",5,[[["f64"]],["cauchy"]]],[11,"new","","Construct a new `Dirichlet` with the given alpha parameter…",6,[[["into",["vec"]],["vec",["f64"]]],["dirichlet"]]],[11,"new_with_param","","Construct a new `Dirichlet` with the given shape parameter…",6,[[["f64"],["usize"]],["dirichlet"]]],[11,"new","","Construct a new `Exp` with the given shape parameter…",7,[[["f64"]],["exp"]]],[11,"new","","Construct an object representing the `Gamma(shape, scale)`…",8,[[["f64"]],["gamma"]]],[11,"new","","Create a new chi-squared distribution with…",9,[[["f64"]],["chisquared"]]],[11,"new","","Create a new `FisherF` distribution, with the given…",10,[[["f64"]],["fisherf"]]],[11,"new","","Create a new Student t distribution with `n` degrees of…",11,[[["f64"]],["studentt"]]],[11,"new","","Construct an object representing the `Beta(alpha, beta)`…",12,[[["f64"]],["beta"]]],[11,"new","","Construct a new `Normal` distribution with the given mean…",13,[[["f64"]],["normal"]]],[11,"new","","Construct a new `LogNormal` distribution with the given…",14,[[["f64"]],["lognormal"]]],[11,"new","","Construct a new Pareto distribution with given `scale` and…",15,[[["f64"]],["pareto"]]],[11,"new","","Construct a new `Poisson` with the given shape parameter…",16,[[["f64"]],["poisson"]]],[11,"new","","Construct a new `Triangular` with minimum `min`, maximum…",17,[[["f64"]],["triangular"]]],[0,"uniform","","A distribution uniformly sampling numbers within a given…",null,null],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",null,null],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer…",null,null],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for…",null,null],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",null,null],[8,"SampleUniform","","Helper trait for creating objects using the correct…",null,null],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",18,null],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",null,null],[16,"X","","The type sampled by this implementation.",19,null],[10,"new","","Construct self, with inclusive lower bound and exclusive…",19,[[["b2"],["b1"]],["self"]]],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",19,[[["b2"],["b1"]],["self"]]],[10,"sample","","Sample a value.",19,[[["self"],["r"]]]],[11,"sample_single","","Sample a single value uniformly from a range with…",19,[[["b2"],["b1"],["r"]]]],[8,"SampleBorrow","","Helper trait similar to [`Borrow`] but implemented only…",null,null],[10,"borrow","","Immutably borrows from an owned value. See…",20,[[["self"]],["borrowed"]]],[11,"new","","Create a new `Uniform` instance which samples uniformly…",21,[[["b2"],["b1"]],["uniform"]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly…",21,[[["b2"],["b1"]],["uniform"]]],[11,"new","rand::distributions","Construct a new `UnitCircle` distribution.",22,[[],["unitcircle"]]],[11,"new","","Construct a new `UnitSphereSurface` distribution.",23,[[],["unitspheresurface"]]],[11,"new","","Construct a new `Weibull` distribution with given `scale`…",24,[[["f64"]],["weibull"]]],[0,"weighted","","Weighted index sampling",null,null],[3,"WeightedIndex","rand::distributions::weighted","A distribution using weighted sampling to pick a…",null,null],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",null,null],[13,"NoItem","","The provided weight collection contains no items.",25,null],[13,"InvalidWeight","","A weight is either less than zero, greater than the…",25,null],[13,"AllWeightsZero","","All items in the provided weight collection are zero.",25,null],[13,"TooMany","","Too many weights are provided (length greater than…",25,null],[0,"alias_method","","This module contains an implementation of alias method for…",null,null],[3,"WeightedIndex","rand::distributions::weighted::alias_method","A distribution using weighted sampling to pick a…",null,null],[8,"Weight","","Trait that must be implemented for weights, that are used…",null,null],[18,"MAX","","Maximum number representable by `Self`.",26,null],[18,"ZERO","","Element of `Self` equivalent to 0.",26,null],[10,"try_from_u32_lossy","","Produce an instance of `Self` from a `u32` value, or…",26,[[["u32"]],["option"]]],[11,"sum","","Sums all values in slice `values`.",26,[[],["self"]]],[11,"new","","Creates a new [`WeightedIndex`].",27,[[["vec"]],[["weightederror"],["result",["weightederror"]]]]],[11,"new","rand::distributions::weighted","Creates a new a `WeightedIndex` [`Distribution`] using the…",28,[[["i"]],[["weightederror"],["result",["weightedindex","weightederror"]],["weightedindex"]]]],[11,"update_weights","","Update a subset of weights, without changing the number of…",28,[[["self"]],[["weightederror"],["result",["weightederror"]]]]],[8,"Distribution","rand::distributions","Types (distributions) that can be used to create a random…",null,null],[10,"sample","","Generate a random value of `T`, using `rng` as the source…",29,[[["self"],["r"]],["t"]]],[11,"sample_iter","","Create an iterator that generates random values of `T`,…",29,[[["r"]],["distiter"]]],[0,"prelude","rand","Convenience re-export of common members",null,null],[0,"rngs","","Random number generators and adapters",null,null],[3,"OsRng","rand::rngs","A random number generator that retrieves randomness from…",null,null],[3,"EntropyRng","","An interface returning random data from external…",null,null],[3,"StdRng","","The standard RNG. The PRNG algorithm in `StdRng` is chosen…",null,null],[3,"ThreadRng","","The type returned by [`thread_rng`], essentially just a…",null,null],[0,"adapter","","Wrappers / adapters forming RNGs",null,null],[3,"ReadError","rand::rngs::adapter","`ReadRng` error type",null,null],[3,"ReadRng","","An RNG that reads random bytes straight from any type…",null,null],[3,"ReseedingRng","","A wrapper around any PRNG that implements…",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",30,[[["r"]],["readrng"]]],[11,"new","","Create a new `ReseedingRng` from an existing PRNG,…",31,[[["rsdr"],["u64"],["r"]],["self"]]],[11,"reseed","","Reseed the internal PRNG.",31,[[["self"]],[["error"],["result",["error"]]]]],[11,"new","rand::rngs","Create a new `EntropyRng`.",32,[[],["self"]]],[0,"mock","","Mock random number generator",null,null],[3,"StepRng","rand::rngs::mock","A simple implementation of `RngCore` for testing purposes.",null,null],[11,"new","","Create a `StepRng`, yielding an arithmetic sequence…",33,[[["u64"]],["self"]]],[0,"seq","rand","Sequence-related functionality",null,null],[3,"SliceChooseIter","rand::seq","An iterator over multiple slice elements.",null,null],[0,"index","","Low-level API for sampling indices",null,null],[4,"IndexVec","rand::seq::index","A vector of indices.",null,null],[4,"IndexVecIter","","Return type of `IndexVec::iter`.",null,null],[4,"IndexVecIntoIter","","Return type of `IndexVec::into_iter`.",null,null],[5,"sample","","Randomly sample exactly `amount` distinct indices from…",null,[[["usize"],["r"]],["indexvec"]]],[11,"len","","Returns the number of indices",34,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the length is 0.",34,[[["self"]],["bool"]]],[11,"index","","Return the value at the given `index`.",34,[[["self"],["usize"]],["usize"]]],[11,"into_vec","","Return result as a `Vec<usize>`. Conversion may or may not…",34,[[],[["vec",["usize"]],["usize"]]]],[11,"iter","","Iterate over the indices as a sequence of `usize` values",34,[[["self"]],["indexveciter"]]],[11,"into_iter","","Convert into an iterator over the indices as a sequence of…",34,[[],["indexvecintoiter"]]],[8,"SliceRandom","rand::seq","Extension trait on slices, providing random mutation and…",null,null],[16,"Item","","The element type.",35,null],[10,"choose","","Returns a reference to one random element of the slice, or…",35,[[["self"],["r"]],["option"]]],[10,"choose_mut","","Returns a mutable reference to one random element of the…",35,[[["self"],["r"]],["option"]]],[10,"choose_multiple","","Chooses `amount` elements from the slice at random,…",35,[[["usize"],["self"],["r"]],["slicechooseiter"]]],[10,"choose_weighted","","Similar to [`choose`], but where the likelihood of each…",35,[[["f"],["self"],["r"]],[["weightederror"],["result",["weightederror"]]]]],[10,"choose_weighted_mut","","Similar to [`choose_mut`], but where the likelihood of…",35,[[["self"],["f"],["r"]],[["weightederror"],["result",["weightederror"]]]]],[10,"shuffle","","Shuffle a mutable slice in place.",35,[[["self"],["r"]]]],[10,"partial_shuffle","","Shuffle a slice in place, but exit early.",35,[[["self"],["usize"],["r"]]]],[8,"IteratorRandom","","Extension trait on iterators, providing random sampling…",null,null],[11,"choose","","Choose one element at random from the iterator.",36,[[["r"]],["option"]]],[11,"choose_multiple_fill","","Collects values at random from the iterator into a…",36,[[["r"]],["usize"]]],[11,"choose_multiple","","Collects `amount` values at random from the iterator into…",36,[[["usize"],["r"]],["vec"]]],[8,"Rng","rand","An automatically-implemented extension trait on…",null,null],[11,"gen","","Return a random value supporting the [`Standard`]…",37,[[["self"]],["t"]]],[11,"gen_range","","Generate a random value in the range [`low`, `high`), i.e.…",37,[[["b2"],["self"],["b1"]],["sampleuniform"]]],[11,"sample","","Sample a new value, using the given distribution.",37,[[["self"],["distribution"]],["t"]]],[11,"sample_iter","","Create an iterator that generates values using the given…",37,[[["d"]],["distiter"]]],[11,"fill","","Fill `dest` entirely with random bytes (uniform value…",37,[[["self"],["t"]]]],[11,"try_fill","","Fill `dest` entirely with random bytes (uniform value…",37,[[["self"],["t"]],[["error"],["result",["error"]]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",37,[[["self"],["f64"]],["bool"]]],[11,"gen_ratio","","Return a bool with a probability of…",37,[[["self"],["u32"]],["bool"]]],[8,"AsByteSliceMut","","Trait for casting types to byte slices",null,null],[10,"as_byte_slice_mut","","Return a mutable reference to self as a byte slice",38,[[["self"]]]],[10,"to_le","","Call `to_le` on each element (i.e. byte-swap on Big Endian…",38,[[["self"]]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","rand::distributions","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","rand::distributions::uniform","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","rand::distributions","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"into_iter","","",45,[[],["i"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","rand::distributions::uniform","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"vzip","","",47,[[],["v"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"vzip","","",48,[[],["v"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"vzip","","",49,[[],["v"]]],[11,"from","rand::distributions::weighted","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"to_string","","",25,[[["self"]],["string"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","rand::distributions::weighted::alias_method","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"from","rand::rngs","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"vzip","","",50,[[],["v"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"vzip","","",51,[[],["v"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"vzip","","",52,[[],["v"]]],[11,"from","rand::rngs::adapter","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_string","","",53,[[["self"]],["string"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"vzip","","",53,[[],["v"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"from","rand::rngs::mock","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"from","rand::seq","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"into_iter","","",54,[[],["i"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"vzip","","",54,[[],["v"]]],[11,"from","rand::seq::index","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"vzip","","",34,[[],["v"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"into_iter","","",55,[[],["i"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"vzip","","",55,[[],["v"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"into_iter","","",56,[[],["i"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"vzip","","",56,[[],["v"]]],[11,"next_u32","rand::rngs","",50,[[["self"]],["u32"]]],[11,"next_u64","","",50,[[["self"]],["u64"]]],[11,"fill_bytes","","",50,[[["self"]]]],[11,"try_fill_bytes","","",50,[[["self"]],[["error"],["result",["error"]]]]],[11,"clone","","",50,[[["self"]],["osrng"]]],[11,"read","rand","",0,[[["self"]],[["error"],["usize"],["result",["usize","error"]]]]],[11,"fmt","rand::rngs","",50,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","rand","",39,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",39,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"from","","",39,[[["nonzerou32"]],["error"]]],[11,"from","","",39,[[["error"]],["error"]]],[11,"source","","",39,[[["self"]],[["option",["error"]],["error"]]]],[11,"default","rand::rngs","",50,[[],["osrng"]]],[11,"new","rand::distributions::uniform","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",48,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",48,[[["b2"],["b1"]],["self"]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample_single","","",48,[[["b2"],["b1"],["r"]]]],[11,"new","","",48,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",48,[[["b2"],["b1"]],["self"]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample_single","","",48,[[["b2"],["b1"],["r"]]]],[11,"new","","",49,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",49,[[["b2"],["b1"]],["self"]]],[11,"sample","","",49,[[["self"],["r"]],["duration"]]],[11,"sample","rand::distributions","",3,[[["self"],["r"]],["bool"]]],[11,"sample","","",4,[[["self"],["r"]],["u64"]]],[11,"sample","","",5,[[["self"],["r"]],["f64"]]],[11,"sample","","",6,[[["self"],["r"]],[["f64"],["vec",["f64"]]]]],[11,"sample","","",43,[[["self"],["r"]],["f64"]]],[11,"sample","","",7,[[["self"],["r"]],["f64"]]],[11,"sample","","",8,[[["self"],["r"]],["f64"]]],[11,"sample","","",9,[[["self"],["r"]],["f64"]]],[11,"sample","","",10,[[["self"],["r"]],["f64"]]],[11,"sample","","",11,[[["self"],["r"]],["f64"]]],[11,"sample","","",12,[[["self"],["r"]],["f64"]]],[11,"sample","","",44,[[["self"],["r"]],["f64"]]],[11,"sample","","",13,[[["self"],["r"]],["f64"]]],[11,"sample","","",14,[[["self"],["r"]],["f64"]]],[11,"sample","","",15,[[["self"],["r"]],["f64"]]],[11,"sample","","",16,[[["self"],["r"]],["u64"]]],[11,"sample","","",17,[[["self"],["r"]],["f64"]]],[11,"sample","rand::distributions::uniform","",21,[[["self"],["r"]],["x"]]],[11,"sample","rand::distributions","",22,[[["self"],["r"]]]],[11,"sample","","",23,[[["self"],["r"]]]],[11,"sample","","",24,[[["self"],["r"]],["f64"]]],[11,"sample","rand::distributions::weighted::alias_method","",27,[[["self"],["r"]],["usize"]]],[11,"sample","rand::distributions::weighted","",28,[[["self"],["r"]],["usize"]]],[11,"sample","rand::distributions","",46,[[["self"],["r"]],["f32"]]],[11,"sample","","",41,[[["self"],["r"]],["f32"]]],[11,"sample","","",40,[[["self"],["r"]],["f32"]]],[11,"sample","","",46,[[["self"],["r"]],["f64"]]],[11,"sample","","",41,[[["self"],["r"]],["f64"]]],[11,"sample","","",40,[[["self"],["r"]],["f64"]]],[11,"sample","","",46,[[["self"],["r"]],["u8"]]],[11,"sample","","",46,[[["self"],["r"]],["u16"]]],[11,"sample","","",46,[[["self"],["r"]],["u32"]]],[11,"sample","","",46,[[["self"],["r"]],["u64"]]],[11,"sample","","",46,[[["self"],["r"]],["u128"]]],[11,"sample","","",46,[[["self"],["r"]],["usize"]]],[11,"sample","","",46,[[["self"],["r"]],["i8"]]],[11,"sample","","",46,[[["self"],["r"]],["i16"]]],[11,"sample","","",46,[[["self"],["r"]],["i32"]]],[11,"sample","","",46,[[["self"],["r"]],["i64"]]],[11,"sample","","",46,[[["self"],["r"]],["i128"]]],[11,"sample","","",46,[[["self"],["r"]],["isize"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou8"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou16"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou32"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou64"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou128"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerousize"]]],[11,"sample","","",46,[[["self"],["r"]],["char"]]],[11,"sample","","",42,[[["self"],["r"]],["char"]]],[11,"sample","","",46,[[["self"],["r"]],["bool"]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]],["option"]]],[11,"sample","","",46,[[["self"],["r"]],["wrapping"]]],[11,"from","rand::distributions::uniform","",21,[[["range"]],["uniform"]]],[11,"from","","",21,[[["rangeinclusive"]],["uniform"]]],[11,"from","rand::seq::index","",34,[[["u32"],["vec",["u32"]]],["self"]]],[11,"from","","",34,[[["vec",["usize"]],["usize"]],["self"]]],[11,"len","rand::seq","",54,[[["self"]],["usize"]]],[11,"next","rand::distributions","",45,[[["self"]],["option"]]],[11,"size_hint","","",45,[[["self"]]]],[11,"next","rand::seq::index","",55,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",55,[[["self"]]]],[11,"next","","",56,[[["self"]],["option"]]],[11,"size_hint","","",56,[[["self"]]]],[11,"next","rand::seq","",54,[[["self"]],["option"]]],[11,"size_hint","","",54,[[["self"]]]],[11,"clone","rand::distributions","",3,[[["self"]],["bernoulli"]]],[11,"clone","","",2,[[["self"]],["bernoullierror"]]],[11,"clone","","",4,[[["self"]],["binomial"]]],[11,"clone","","",5,[[["self"]],["cauchy"]]],[11,"clone","","",6,[[["self"]],["dirichlet"]]],[11,"clone","","",43,[[["self"]],["exp1"]]],[11,"clone","","",7,[[["self"]],["exp"]]],[11,"clone","","",8,[[["self"]],["gamma"]]],[11,"clone","","",9,[[["self"]],["chisquared"]]],[11,"clone","","",10,[[["self"]],["fisherf"]]],[11,"clone","","",11,[[["self"]],["studentt"]]],[11,"clone","","",12,[[["self"]],["beta"]]],[11,"clone","","",44,[[["self"]],["standardnormal"]]],[11,"clone","","",13,[[["self"]],["normal"]]],[11,"clone","","",14,[[["self"]],["lognormal"]]],[11,"clone","","",15,[[["self"]],["pareto"]]],[11,"clone","","",16,[[["self"]],["poisson"]]],[11,"clone","","",17,[[["self"]],["triangular"]]],[11,"clone","rand::distributions::uniform","",21,[[["self"]],["uniform"]]],[11,"clone","","",47,[[["self"]],["uniformint"]]],[11,"clone","","",48,[[["self"]],["uniformfloat"]]],[11,"clone","","",49,[[["self"]],["uniformduration"]]],[11,"clone","rand::distributions","",22,[[["self"]],["unitcircle"]]],[11,"clone","","",23,[[["self"]],["unitspheresurface"]]],[11,"clone","","",24,[[["self"]],["weibull"]]],[11,"clone","rand::distributions::weighted::alias_method","",27,[[["self"]],["self"]]],[11,"clone","rand::distributions::weighted","",28,[[["self"]],["weightedindex"]]],[11,"clone","","",25,[[["self"]],["weightederror"]]],[11,"clone","rand::distributions","",41,[[["self"]],["openclosed01"]]],[11,"clone","","",40,[[["self"]],["open01"]]],[11,"clone","","",46,[[["self"]],["standard"]]],[11,"clone","rand::rngs::adapter","",31,[[["self"]],["reseedingrng"]]],[11,"clone","rand::rngs::mock","",33,[[["self"]],["steprng"]]],[11,"clone","rand::rngs","",51,[[["self"]],["stdrng"]]],[11,"clone","","",52,[[["self"]],["threadrng"]]],[11,"clone","rand::seq::index","",34,[[["self"]],["indexvec"]]],[11,"clone","","",56,[[["self"]],["indexvecintoiter"]]],[11,"default","rand::rngs","",32,[[],["self"]]],[11,"default","","",52,[[],["threadrng"]]],[11,"eq","rand::distributions","",2,[[["bernoullierror"],["self"]],["bool"]]],[11,"eq","rand::distributions::weighted","",25,[[["self"],["weightederror"]],["bool"]]],[11,"eq","rand::seq::index","",34,[[["self"],["indexvec"]],["bool"]]],[11,"fmt","rand::distributions","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions::uniform","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions::weighted::alias_method","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions::weighted","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs::adapter","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs::mock","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::seq::index","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::seq","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions::weighted","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs::adapter","",53,[[["formatter"],["self"]],["result"]]],[11,"source","","",53,[[["self"]],[["error"],["option",["error"]]]]],[11,"next_u32","","",30,[[["self"]],["u32"]]],[11,"next_u64","","",30,[[["self"]],["u64"]]],[11,"fill_bytes","","",30,[[["self"]]]],[11,"try_fill_bytes","","",30,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",31,[[["self"]],["u32"]]],[11,"next_u64","","",31,[[["self"]],["u64"]]],[11,"fill_bytes","","",31,[[["self"]]]],[11,"try_fill_bytes","","",31,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","rand::rngs","",32,[[["self"]],["u32"]]],[11,"next_u64","","",32,[[["self"]],["u64"]]],[11,"fill_bytes","","",32,[[["self"]]]],[11,"try_fill_bytes","","",32,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","rand::rngs::mock","",33,[[["self"]],["u32"]]],[11,"next_u64","","",33,[[["self"]],["u64"]]],[11,"fill_bytes","","",33,[[["self"]]]],[11,"try_fill_bytes","","",33,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","rand::rngs","",51,[[["self"]],["u32"]]],[11,"next_u64","","",51,[[["self"]],["u64"]]],[11,"fill_bytes","","",51,[[["self"]]]],[11,"try_fill_bytes","","",51,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",52,[[["self"]],["u32"]]],[11,"next_u64","","",52,[[["self"]],["u64"]]],[11,"fill_bytes","","",52,[[["self"]]]],[11,"try_fill_bytes","","",52,[[["self"]],[["error"],["result",["error"]]]]],[11,"from_seed","","",51,[[],["self"]]],[11,"from_rng","","",51,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"new","rand","Construct from any type supporting `std::error::Error`",39,[[["e"]],["error"]]],[11,"inner","","Reference the inner error (`std` only)",39,[[["self"]],["error"]]],[11,"take_inner","","Unwrap the inner error (`std` only)",39,[[],[["error"],["box",["error"]]]]],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",39,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",39,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",39,[[["self"]],[["i32"],["option",["i32"]]]]],[11,"code","","Retrieve the error code, if any.",39,[[["self"]],[["nonzerou32"],["option",["nonzerou32"]]]]]],"p":[[8,"RngCore"],[8,"SeedableRng"],[4,"BernoulliError"],[3,"Bernoulli"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Exp"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,"LogNormal"],[3,"Pareto"],[3,"Poisson"],[3,"Triangular"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[3,"Uniform"],[3,"UnitCircle"],[3,"UnitSphereSurface"],[3,"Weibull"],[4,"WeightedError"],[8,"Weight"],[3,"WeightedIndex"],[3,"WeightedIndex"],[8,"Distribution"],[3,"ReadRng"],[3,"ReseedingRng"],[3,"EntropyRng"],[3,"StepRng"],[4,"IndexVec"],[8,"SliceRandom"],[8,"IteratorRandom"],[8,"Rng"],[8,"AsByteSliceMut"],[3,"Error"],[3,"Open01"],[3,"OpenClosed01"],[3,"Alphanumeric"],[3,"Exp1"],[3,"StandardNormal"],[3,"DistIter"],[3,"Standard"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"OsRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"ReadError"],[3,"SliceChooseIter"],[4,"IndexVecIter"],[4,"IndexVecIntoIter"]]};
searchIndex["rand_chacha"] = {"doc":"The ChaCha random number generator.","i":[[3,"ChaCha12Core","rand_chacha","ChaCha with 12 rounds",null,null],[3,"ChaCha12Rng","","A cryptographically secure random number generator that…",null,null],[3,"ChaCha20Core","","ChaCha with 20 rounds",null,null],[3,"ChaCha20Rng","","A cryptographically secure random number generator that…",null,null],[3,"ChaCha8Core","","ChaCha with 8 rounds",null,null],[3,"ChaCha8Rng","","A cryptographically secure random number generator that…",null,null],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",0,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",0,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",0,[[["self"],["u64"]]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",1,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",1,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",1,[[["self"],["u64"]]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",2,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",2,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",2,[[["self"],["u64"]]]],[6,"ChaChaRng","","ChaCha with 20 rounds",null,null],[6,"ChaChaCore","","ChaCha with 20 rounds, low-level interface",null,null],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",0,[[["chacha20core"]],["self"]]],[11,"from","","",1,[[["chacha12core"]],["self"]]],[11,"from","","",2,[[["chacha8core"]],["self"]]],[11,"clone","","",4,[[["self"]],["chacha20core"]]],[11,"clone","","",0,[[["self"]],["chacha20rng"]]],[11,"clone","","",3,[[["self"]],["chacha12core"]]],[11,"clone","","",1,[[["self"]],["chacha12rng"]]],[11,"clone","","",5,[[["self"]],["chacha8core"]]],[11,"clone","","",2,[[["self"]],["chacha8rng"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"generate","","",4,[[["self"]]]],[11,"generate","","",3,[[["self"]]]],[11,"generate","","",5,[[["self"]]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,[[["self"]]]],[11,"try_fill_bytes","","",0,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,[[["self"]]]],[11,"try_fill_bytes","","",1,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",2,[[["self"]],["u32"]]],[11,"next_u64","","",2,[[["self"]],["u64"]]],[11,"fill_bytes","","",2,[[["self"]]]],[11,"try_fill_bytes","","",2,[[["self"]],[["error"],["result",["error"]]]]],[11,"from_seed","","",4,[[],["self"]]],[11,"from_seed","","",0,[[],["self"]]],[11,"from_seed","","",3,[[],["self"]]],[11,"from_seed","","",1,[[],["self"]]],[11,"from_seed","","",5,[[],["self"]]],[11,"from_seed","","",2,[[],["self"]]]],"p":[[3,"ChaCha20Rng"],[3,"ChaCha12Rng"],[3,"ChaCha8Rng"],[3,"ChaCha12Core"],[3,"ChaCha20Core"],[3,"ChaCha8Core"]]};
searchIndex["rand_core"] = {"doc":"Random number generation traits","i":[[3,"Error","rand_core","Error type of random number generators",null,null],[3,"OsRng","","A random number generator that retrieves randomness from…",null,null],[11,"new","","Construct from any type supporting `std::error::Error`",0,[[["e"]],["self"]]],[11,"inner","","Reference the inner error (`std` only)",0,[[["self"]],["error"]]],[11,"take_inner","","Unwrap the inner error (`std` only)",0,[[],[["error"],["box",["error"]]]]],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",0,[[["self"]],[["i32"],["option",["i32"]]]]],[11,"code","","Retrieve the error code, if any.",0,[[["self"]],[["option",["nonzerou32"]],["nonzerou32"]]]],[0,"block","","The `BlockRngCore` trait and implementation helpers",null,null],[3,"BlockRng","rand_core::block","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",1,null],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",2,null],[8,"BlockRngCore","","A trait for RNGs which do not generate random numbers…",null,null],[16,"Item","","Results element type, e.g. `u32`.",3,null],[16,"Results","","Results type. This is the 'block' an RNG implementing…",3,null],[10,"generate","","Generate a new block of results.",3,[[["self"]]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",1,[[["r"]],["blockrng"]]],[11,"index","","Get the index into the result buffer.",1,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",1,[[["self"]]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",1,[[["self"],["usize"]]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",2,[[["r"]],["blockrng64"]]],[11,"index","","Get the index into the result buffer.",2,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",2,[[["self"]]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",2,[[["self"],["usize"]]]],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",null,null],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",null,[[["r"]],["u64"]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`,…",null,[[["r"]]]],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",null,[[["r"]],["u32"]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",null,[[["r"]],["u64"]]],[0,"le","rand_core","Little-Endian utilities",null,null],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",null,[[]]],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.…",null,[[]]],[8,"RngCore","rand_core","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",4,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",4,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",4,[[["self"]]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",4,[[["self"]],[["result",["error"]],["error"]]]],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",null,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",5,null],[10,"from_seed","","Create a new PRNG using the given seed.",5,[[],["self"]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",5,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",5,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via [`getrandom`].",5,[[],["self"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","rand_core::block","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,[[["self"]]]],[11,"try_fill_bytes","","",1,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",2,[[["self"]],["u32"]]],[11,"next_u64","","",2,[[["self"]],["u64"]]],[11,"fill_bytes","","",2,[[["self"]]]],[11,"try_fill_bytes","","",2,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","rand_core","",6,[[["self"]],["u32"]]],[11,"next_u64","","",6,[[["self"]],["u64"]]],[11,"fill_bytes","","",6,[[["self"]]]],[11,"try_fill_bytes","","",6,[[["self"]],[["result",["error"]],["error"]]]],[11,"from_seed","rand_core::block","",1,[[],["self"]]],[11,"seed_from_u64","","",1,[[["u64"]],["self"]]],[11,"from_rng","","",1,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from_seed","","",2,[[],["self"]]],[11,"seed_from_u64","","",2,[[["u64"]],["self"]]],[11,"from_rng","","",2,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from","rand_core","",0,[[["nonzerou32"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"clone","rand_core::block","",1,[[["self"]],["blockrng"]]],[11,"clone","","",2,[[["self"]],["blockrng64"]]],[11,"clone","rand_core","",6,[[["self"]],["osrng"]]],[11,"default","","",6,[[],["osrng"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand_core::block","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand_core","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"source","","",0,[[["self"]],[["error"],["option",["error"]]]]],[11,"read","","",4,[[["self"]],[["error"],["usize"],["result",["usize","error"]]]]]],"p":[[3,"Error"],[3,"BlockRng"],[3,"BlockRng64"],[8,"BlockRngCore"],[8,"RngCore"],[8,"SeedableRng"],[3,"OsRng"]]};
searchIndex["regex"] = {"doc":"This crate provides a library for parsing, compiling, and…","i":[[3,"RegexSetBuilder","regex","A configurable builder for a set of regular expressions.",null,null],[3,"RegexBuilder","","A configurable builder for a regular expression.",null,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions…",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex…",null,null],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw…",null,null],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups…",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"Captures","","Captures represents a group of captured strings for a…",null,null],[3,"Match","","Match represents a single match of a regex in a haystack.",null,null],[3,"Matches","","An iterator over all non-overlapping matches for a…",null,null],[3,"NoExpand","","`NoExpand` indicates literal string replacement.",null,null],[12,"0","","",0,null],[3,"Regex","","A compiled regular expression for matching Unicode strings.",null,null],[3,"ReplacerRef","","By-reference adaptor for a `Replacer`",null,null],[3,"Split","","Yields all substrings delimited by a regular expression…",null,null],[3,"SplitN","","Yields at most `N` substrings delimited by a regular…",null,null],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order…",null,null],[4,"Error","","An error that occurred during parsing or compiling a…",null,null],[13,"Syntax","","A syntax error.",1,null],[13,"CompiledTooBig","","The compiled program exceeded the set size limit. The…",1,null],[5,"escape","","Escapes all regular expression meta characters in `text`.",null,[[["str"]],["string"]]],[0,"bytes","","Match regular expressions on arbitrary bytes.",null,null],[3,"RegexBuilder","regex::bytes","A configurable builder for a regular expression.",null,null],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",null,null],[3,"Match","","Match represents a single match of a regex in a haystack.",null,null],[3,"Regex","","A compiled regular expression for matching arbitrary bytes.",null,null],[3,"Matches","","An iterator over all non-overlapping matches for a…",null,null],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups…",null,null],[3,"Split","","Yields all substrings delimited by a regular expression…",null,null],[3,"SplitN","","Yields at most `N` substrings delimited by a regular…",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw…",null,null],[3,"Captures","","Captures represents a group of captured byte strings for a…",null,null],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order…",null,null],[3,"ReplacerRef","","By-reference adaptor for a `Replacer`",null,null],[3,"NoExpand","","`NoExpand` indicates literal byte string replacement.",null,null],[12,"0","","",2,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions…",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex…",null,null],[8,"Replacer","","Replacer describes types that can be used to replace…",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",3,[[["vec"],["self"],["captures"]]]],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",3,[[["self"]],[["cow"],["option",["cow"]]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",3,[[["self"]],["replacerref"]]],[11,"new","","Create a new regular expression builder with the given…",4,[[["str"]],["regexbuilder"]]],[11,"build","","Consume the builder and compile the regular expression.",4,[[["self"]],[["regex"],["result",["regex","error"]],["error"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",4,[[["self"],["usize"]],["regexbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",4,[[["self"],["usize"]],["regexbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",4,[[["self"],["u32"]],["regexbuilder"]]],[11,"new","regex","Create a new regular expression builder with the given…",5,[[["str"]],["regexbuilder"]]],[11,"build","","Consume the builder and compile the regular expression.",5,[[["self"]],[["result",["regex","error"]],["error"],["regex"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",5,[[["self"],["usize"]],["regexbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",5,[[["self"],["usize"]],["regexbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",5,[[["self"],["u32"]],["regexbuilder"]]],[11,"new","regex::bytes","Create a new regular expression builder with the given…",6,[[["i"]],["regexsetbuilder"]]],[11,"build","","Consume the builder and compile the regular expressions…",6,[[["self"]],[["error"],["regexset"],["result",["regexset","error"]]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",6,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",6,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",6,[[["self"],["u32"]],["regexsetbuilder"]]],[11,"new","regex","Create a new regular expression builder with the given…",7,[[["i"]],["regexsetbuilder"]]],[11,"build","","Consume the builder and compile the regular expressions…",7,[[["self"]],[["regexset"],["error"],["result",["regexset","error"]]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",7,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",7,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",7,[[["self"],["u32"]],["regexsetbuilder"]]],[11,"no_expansion","regex::bytes","Return a fixed unchanging replacement byte string.",3,[[["self"]],[["cow"],["option",["cow"]]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",3,[[["self"]],["replacerref"]]],[11,"start","","Returns the starting byte offset of the match in the…",8,[[["self"]],["usize"]]],[11,"end","","Returns the ending byte offset of the match in the haystack.",8,[[["self"]],["usize"]]],[11,"as_bytes","","Returns the matched text.",8,[[["self"]]]],[11,"new","","Compiles a regular expression. Once compiled, it can be…",9,[[["str"]],[["regex"],["result",["regex","error"]],["error"]]]],[11,"is_match","","Returns true if and only if the regex matches the string…",9,[[["self"]],["bool"]]],[11,"find","","Returns the start and end byte range of the leftmost-first…",9,[[["self"]],[["match"],["option",["match"]]]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping…",9,[[["self"]],["matches"]]],[11,"captures","","Returns the capture groups corresponding to the…",9,[[["self"]],[["captures"],["option",["captures"]]]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture…",9,[[["self"]],["capturematches"]]],[11,"split","","Returns an iterator of substrings of `text` delimited by a…",9,[[["self"]],["split"]]],[11,"splitn","","Returns an iterator of at most `limit` substrings of…",9,[[["self"],["usize"]],["splitn"]]],[11,"replace","","Replaces the leftmost-first match with the replacement…",9,[[["self"],["replacer"]],["cow"]]],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the…",9,[[["self"],["replacer"]],["cow"]]],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text`…",9,[[["usize"],["replacer"],["self"]],["cow"]]],[11,"shortest_match","","Returns the end location of a match in the text given.",9,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search…",9,[[["self"],["usize"]],[["option",["usize"]],["usize"]]]],[11,"is_match_at","","Returns the same as is_match, but starts the search at the…",9,[[["self"],["usize"]],["bool"]]],[11,"find_at","","Returns the same as find, but starts the search at the…",9,[[["self"],["usize"]],[["match"],["option",["match"]]]]],[11,"captures_read","","This is like `captures`, but uses `CaptureLocations`…",9,[[["self"],["capturelocations"]],[["match"],["option",["match"]]]]],[11,"captures_read_at","","Returns the same as `captures_read`, but starts the search…",9,[[["usize"],["self"],["capturelocations"]],[["match"],["option",["match"]]]]],[11,"as_str","","Returns the original string of this regex.",9,[[["self"]],["str"]]],[11,"capture_names","","Returns an iterator over the capture names.",9,[[["self"]],["capturenames"]]],[11,"captures_len","","Returns the number of captures.",9,[[["self"]],["usize"]]],[11,"capture_locations","","Returns an empty set of capture locations that can be…",9,[[["self"]],["capturelocations"]]],[11,"get","","Returns the start and end positions of the Nth capture…",10,[[["self"],["usize"]],["option"]]],[11,"len","","Returns the total number of capturing groups.",10,[[["self"]],["usize"]]],[11,"get","","Returns the match associated with the capture group at…",11,[[["self"],["usize"]],[["match"],["option",["match"]]]]],[11,"name","","Returns the match for the capture group named `name`. If…",11,[[["str"],["self"]],[["match"],["option",["match"]]]]],[11,"iter","","An iterator that yields all capturing matches in the order…",11,[[["self"]],["subcapturematches"]]],[11,"expand","","Expands all instances of `$name` in `replacement` to the…",11,[[["vec"],["self"]]]],[11,"len","","Returns the number of captured groups.",11,[[["self"]],["usize"]]],[11,"new","regex","Create a new regex set with the given regular expressions.",12,[[["i"]],[["regexset"],["error"],["result",["regexset","error"]]]]],[11,"is_match","","Returns true if and only if one of the regexes in this set…",12,[[["str"],["self"]],["bool"]]],[11,"matches","","Returns the set of regular expressions that match in the…",12,[[["str"],["self"]],["setmatches"]]],[11,"len","","Returns the total number of regular expressions in this set.",12,[[["self"]],["usize"]]],[11,"patterns","","Returns the patterns that this set will match on.",12,[[["self"]]]],[11,"matched_any","","Whether this set contains any matches.",13,[[["self"]],["bool"]]],[11,"matched","","Whether the regex at the given index matched.",13,[[["self"],["usize"]],["bool"]]],[11,"len","","The total number of regexes in the set that created these…",13,[[["self"]],["usize"]]],[11,"iter","","Returns an iterator over indexes in the regex that matched.",13,[[["self"]],["setmatchesiter"]]],[11,"new","regex::bytes","Create a new regex set with the given regular expressions.",14,[[["i"]],[["error"],["regexset"],["result",["regexset","error"]]]]],[11,"is_match","","Returns true if and only if one of the regexes in this set…",14,[[["self"]],["bool"]]],[11,"matches","","Returns the set of regular expressions that match in the…",14,[[["self"]],["setmatches"]]],[11,"len","","Returns the total number of regular expressions in this set.",14,[[["self"]],["usize"]]],[11,"patterns","","Returns the patterns that this set will match on.",14,[[["self"]]]],[11,"matched_any","","Whether this set contains any matches.",15,[[["self"]],["bool"]]],[11,"matched","","Whether the regex at the given index matched.",15,[[["self"],["usize"]],["bool"]]],[11,"len","","The total number of regexes in the set that created these…",15,[[["self"]],["usize"]]],[11,"iter","","Returns an iterator over indexes in the regex that matched.",15,[[["self"]],["setmatchesiter"]]],[11,"start","regex","Returns the starting byte offset of the match in the…",16,[[["self"]],["usize"]]],[11,"end","","Returns the ending byte offset of the match in the haystack.",16,[[["self"]],["usize"]]],[11,"as_str","","Returns the matched text.",16,[[["self"]],["str"]]],[11,"new","","Compiles a regular expression. Once compiled, it can be…",17,[[["str"]],[["result",["regex","error"]],["error"],["regex"]]]],[11,"is_match","","Returns true if and only if the regex matches the string…",17,[[["str"],["self"]],["bool"]]],[11,"find","","Returns the start and end byte range of the leftmost-first…",17,[[["str"],["self"]],[["option",["match"]],["match"]]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping…",17,[[["str"],["self"]],["matches"]]],[11,"captures","","Returns the capture groups corresponding to the…",17,[[["str"],["self"]],[["captures"],["option",["captures"]]]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture…",17,[[["str"],["self"]],["capturematches"]]],[11,"split","","Returns an iterator of substrings of `text` delimited by a…",17,[[["str"],["self"]],["split"]]],[11,"splitn","","Returns an iterator of at most `limit` substrings of…",17,[[["str"],["self"],["usize"]],["splitn"]]],[11,"replace","","Replaces the leftmost-first match with the replacement…",17,[[["str"],["self"],["replacer"]],[["cow",["str"]],["str"]]]],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the…",17,[[["str"],["self"],["replacer"]],[["cow",["str"]],["str"]]]],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text`…",17,[[["usize"],["replacer"],["str"],["self"]],[["cow",["str"]],["str"]]]],[11,"shortest_match","","Returns the end location of a match in the text given.",17,[[["str"],["self"]],[["option",["usize"]],["usize"]]]],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search…",17,[[["str"],["self"],["usize"]],[["option",["usize"]],["usize"]]]],[11,"is_match_at","","Returns the same as is_match, but starts the search at the…",17,[[["str"],["self"],["usize"]],["bool"]]],[11,"find_at","","Returns the same as find, but starts the search at the…",17,[[["str"],["self"],["usize"]],[["option",["match"]],["match"]]]],[11,"captures_read","","This is like `captures`, but uses `CaptureLocations`…",17,[[["capturelocations"],["self"],["str"]],[["option",["match"]],["match"]]]],[11,"captures_read_at","","Returns the same as captures, but starts the search at the…",17,[[["capturelocations"],["usize"],["str"],["self"]],[["option",["match"]],["match"]]]],[11,"as_str","","Returns the original string of this regex.",17,[[["self"]],["str"]]],[11,"capture_names","","Returns an iterator over the capture names.",17,[[["self"]],["capturenames"]]],[11,"captures_len","","Returns the number of captures.",17,[[["self"]],["usize"]]],[11,"capture_locations","","Returns an empty set of capture locations that can be…",17,[[["self"]],["capturelocations"]]],[11,"get","","Returns the start and end positions of the Nth capture…",18,[[["self"],["usize"]],["option"]]],[11,"len","","Returns the total number of capturing groups.",18,[[["self"]],["usize"]]],[11,"get","","Returns the match associated with the capture group at…",19,[[["self"],["usize"]],[["option",["match"]],["match"]]]],[11,"name","","Returns the match for the capture group named `name`. If…",19,[[["str"],["self"]],[["option",["match"]],["match"]]]],[11,"iter","","An iterator that yields all capturing matches in the order…",19,[[["self"]],["subcapturematches"]]],[11,"expand","","Expands all instances of `$name` in `replacement` to the…",19,[[["str"],["self"],["string"]]]],[11,"len","","Returns the number of captured groups.",19,[[["self"]],["usize"]]],[8,"Replacer","","Replacer describes types that can be used to replace…",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",20,[[["captures"],["self"],["string"]]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",20,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",20,[[["self"]],["replacerref"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"into_iter","","",21,[[],["i"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"into_iter","","",22,[[],["i"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"into_iter","","",23,[[],["i"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"into_iter","","",24,[[],["i"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"into_iter","","",25,[[],["i"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"into_iter","","",27,[[],["i"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"into_iter","","",28,[[],["i"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"into_iter","","",29,[[],["i"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","regex::bytes","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"into_iter","","",30,[[],["i"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"into_iter","","",31,[[],["i"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"into_iter","","",32,[[],["i"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"into_iter","","",33,[[],["i"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"into_iter","","",34,[[],["i"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"into_iter","","",35,[[],["i"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"into_iter","","",15,[[],["i"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"into_iter","","",37,[[],["i"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"into_iter","","",38,[[],["i"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"replace_append","","",36,[[["vec"],["self"],["captures"]]]],[11,"no_expansion","","",36,[[["self"]],[["cow"],["option",["cow"]]]]],[11,"replace_append","","",2,[[["vec"],["self"],["captures"]]]],[11,"no_expansion","","",2,[[["self"]],[["option",["cow"]],["cow"]]]],[11,"replace_append","regex","",26,[[["captures"],["self"],["string"]]]],[11,"no_expansion","","",26,[[["self"]],[["cow",["str"]],["option",["cow"]]]]],[11,"replace_append","","",0,[[["captures"],["self"],["string"]]]],[11,"no_expansion","","",0,[[["self"]],[["cow",["str"]],["option",["cow"]]]]],[11,"next_back","","",21,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"next_back","","",22,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"next_back","regex::bytes","",37,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"next_back","","",38,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"into_iter","regex","",13,[[]]],[11,"into_iter","regex::bytes","",15,[[]]],[11,"next","","",30,[[["self"]],[["match"],["option",["match"]]]]],[11,"next","","",31,[[["self"]],[["captures"],["option",["captures"]]]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"next","","",33,[[["self"]],["option"]]],[11,"next","","",34,[[["self"]],[["option",["option"]],["option",["str"]]]]],[11,"size_hint","","",34,[[["self"]]]],[11,"next","","",35,[[["self"]],[["option",["option"]],["option",["match"]]]]],[11,"next","regex","",21,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",21,[[["self"]]]],[11,"next","","",22,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",22,[[["self"]]]],[11,"next","regex::bytes","",37,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",37,[[["self"]]]],[11,"next","","",38,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",38,[[["self"]]]],[11,"next","regex","",24,[[["self"]],[["option",["option"]],["option",["str"]]]]],[11,"size_hint","","",24,[[["self"]]]],[11,"next","","",27,[[["self"]],[["option",["str"]],["str"]]]],[11,"next","","",28,[[["self"]],[["option",["str"]],["str"]]]],[11,"next","","",29,[[["self"]],[["option",["match"]],["option",["option"]]]]],[11,"next","","",23,[[["self"]],[["captures"],["option",["captures"]]]]],[11,"next","","",25,[[["self"]],[["option",["match"]],["match"]]]],[11,"clone","","",1,[[["self"]],["error"]]],[11,"clone","regex::bytes","",8,[[["self"]],["match"]]],[11,"clone","","",9,[[["self"]],["regex"]]],[11,"clone","","",10,[[["self"]],["capturelocations"]]],[11,"clone","regex","",12,[[["self"]],["regexset"]]],[11,"clone","","",13,[[["self"]],["setmatches"]]],[11,"clone","","",22,[[["self"]],["setmatchesiter"]]],[11,"clone","regex::bytes","",14,[[["self"]],["regexset"]]],[11,"clone","","",15,[[["self"]],["setmatches"]]],[11,"clone","","",38,[[["self"]],["setmatchesiter"]]],[11,"clone","regex","",16,[[["self"]],["match"]]],[11,"clone","","",17,[[["self"]],["regex"]]],[11,"clone","","",18,[[["self"]],["capturelocations"]]],[11,"eq","","",1,[[["self"],["error"]],["bool"]]],[11,"ne","","",1,[[["self"],["error"]],["bool"]]],[11,"eq","regex::bytes","",8,[[["match"],["self"]],["bool"]]],[11,"ne","","",8,[[["match"],["self"]],["bool"]]],[11,"eq","regex","",16,[[["self"],["match"]],["bool"]]],[11,"ne","","",16,[[["self"],["match"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex::bytes","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","Shows the original regular expression.",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex::bytes","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","Shows the original regular expression.",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex::bytes","Shows the original regular expression.",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex","Shows the original regular expression.",17,[[["formatter"],["self"]],["result"]]],[11,"index","regex::bytes","",11,[[["self"],["usize"]]]],[11,"index","","",11,[[["str"],["self"]]]],[11,"index","regex","",19,[[["self"],["usize"]],["str"]]],[11,"index","","",19,[[["str"],["self"]],["str"]]],[11,"from_str","regex::bytes","Attempts to parse a string into a regular expression",9,[[["str"]],[["regex"],["result",["regex","error"]],["error"]]]],[11,"from_str","regex","Attempts to parse a string into a regular expression",17,[[["str"]],[["result",["regex","error"]],["error"],["regex"]]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",20,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",20,[[["self"]],["replacerref"]]]],"p":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,"RegexBuilder"],[3,"RegexBuilder"],[3,"RegexSetBuilder"],[3,"RegexSetBuilder"],[3,"Match"],[3,"Regex"],[3,"CaptureLocations"],[3,"Captures"],[3,"RegexSet"],[3,"SetMatches"],[3,"RegexSet"],[3,"SetMatches"],[3,"Match"],[3,"Regex"],[3,"CaptureLocations"],[3,"Captures"],[8,"Replacer"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"CaptureMatches"],[3,"CaptureNames"],[3,"Matches"],[3,"ReplacerRef"],[3,"Split"],[3,"SplitN"],[3,"SubCaptureMatches"],[3,"Matches"],[3,"CaptureMatches"],[3,"Split"],[3,"SplitN"],[3,"CaptureNames"],[3,"SubCaptureMatches"],[3,"ReplacerRef"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"]]};
searchIndex["regex_syntax"] = {"doc":"This crate provides a robust regular expression parser.","i":[[3,"Parser","regex_syntax","A convenience parser for regular expressions.",null,null],[3,"ParserBuilder","","A builder for a regular expression parser.",null,null],[3,"UnicodeWordError","","An error that occurs when the Unicode-aware `\\w` class is…",null,null],[4,"Error","","This error type encompasses any error that can be returned…",null,null],[13,"Parse","","An error that occurred while translating concrete syntax…",0,null],[13,"Translate","","An error that occurred while translating abstract syntax…",0,null],[5,"escape","","Escapes all regular expression meta characters in `text`.",null,[[["str"]],["string"]]],[5,"escape_into","","Escapes all meta characters in `text` and writes the…",null,[[["str"],["string"]]]],[5,"is_meta_character","","Returns true if the give character has significance in a…",null,[[["char"]],["bool"]]],[5,"is_word_character","","Returns true if and only if the given character is a…",null,[[["char"]],["bool"]]],[5,"try_is_word_character","","Returns true if and only if the given character is a…",null,[[["char"]],[["result",["bool","unicodeworderror"]],["unicodeworderror"],["bool"]]]],[5,"is_word_byte","","Returns true if and only if the given character is an…",null,[[["u8"]],["bool"]]],[0,"ast","","Defines an abstract syntax for regular expressions.",null,null],[3,"Error","regex_syntax::ast","An error that occurred while parsing a regular expression…",null,null],[3,"Span","","Span represents the position information of a single AST…",null,null],[12,"start","","The start byte offset.",1,null],[12,"end","","The end byte offset.",1,null],[3,"Position","","A single position in a regular expression.",null,null],[12,"offset","","The absolute offset of this position, starting at `0` from…",2,null],[12,"line","","The line number, starting at `1`.",2,null],[12,"column","","The approximate column number, starting at `1`.",2,null],[3,"WithComments","","An abstract syntax tree for a singular expression along…",null,null],[12,"ast","","The actual ast.",3,null],[12,"comments","","All comments found in the original regular expression.",3,null],[3,"Comment","","A comment from a regular expression with an associated span.",null,null],[12,"span","","The span of this comment, including the beginning `#` and…",4,null],[12,"comment","","The comment text, starting with the first character…",4,null],[3,"Alternation","","An alternation of regular expressions.",null,null],[12,"span","","The span of this alternation.",5,null],[12,"asts","","The alternate regular expressions.",5,null],[3,"Concat","","A concatenation of regular expressions.",null,null],[12,"span","","The span of this concatenation.",6,null],[12,"asts","","The concatenation regular expressions.",6,null],[3,"Literal","","A single literal expression.",null,null],[12,"span","","The span of this literal.",7,null],[12,"kind","","The kind of this literal.",7,null],[12,"c","","The Unicode scalar value corresponding to this literal.",7,null],[3,"ClassPerl","","A Perl character class.",null,null],[12,"span","","The span of this class.",8,null],[12,"kind","","The kind of Perl class.",8,null],[12,"negated","","Whether the class is negated or not. e.g., `\\d` is not…",8,null],[3,"ClassAscii","","An ASCII character class.",null,null],[12,"span","","The span of this class.",9,null],[12,"kind","","The kind of ASCII class.",9,null],[12,"negated","","Whether the class is negated or not. e.g., `[[:alpha:]]`…",9,null],[3,"ClassUnicode","","A Unicode character class.",null,null],[12,"span","","The span of this class.",10,null],[12,"negated","","Whether this class is negated or not.",10,null],[12,"kind","","The kind of Unicode class.",10,null],[3,"ClassBracketed","","A bracketed character class, e.g., `[a-z0-9]`.",null,null],[12,"span","","The span of this class.",11,null],[12,"negated","","Whether this class is negated or not. e.g., `[a]` is not…",11,null],[12,"kind","","The type of this set. A set is either a normal union of…",11,null],[3,"ClassSetRange","","A single character class range in a set.",null,null],[12,"span","","The span of this range.",12,null],[12,"start","","The start of this range.",12,null],[12,"end","","The end of this range.",12,null],[3,"ClassSetUnion","","A union of items inside a character class set.",null,null],[12,"span","","The span of the items in this operation. e.g., the…",13,null],[12,"items","","The sequence of items that make up this union.",13,null],[3,"ClassSetBinaryOp","","A Unicode character class set operation.",null,null],[12,"span","","The span of this operation. e.g., the `a-z--[h-p]` in…",14,null],[12,"kind","","The type of this set operation.",14,null],[12,"lhs","","The left hand side of the operation.",14,null],[12,"rhs","","The right hand side of the operation.",14,null],[3,"Assertion","","A single zero-width assertion.",null,null],[12,"span","","The span of this assertion.",15,null],[12,"kind","","The assertion kind, e.g., `\\b` or `^`.",15,null],[3,"Repetition","","A repetition operation applied to a regular expression.",null,null],[12,"span","","The span of this operation.",16,null],[12,"op","","The actual operation.",16,null],[12,"greedy","","Whether this operation was applied greedily or not.",16,null],[12,"ast","","The regular expression under repetition.",16,null],[3,"RepetitionOp","","The repetition operator itself.",null,null],[12,"span","","The span of this operator. This includes things like `+`,…",17,null],[12,"kind","","The type of operation.",17,null],[3,"Group","","A grouped regular expression.",null,null],[12,"span","","The span of this group.",18,null],[12,"kind","","The kind of this group.",18,null],[12,"ast","","The regular expression in this group.",18,null],[3,"CaptureName","","A capture name.",null,null],[12,"span","","The span of this capture name.",19,null],[12,"name","","The capture name.",19,null],[12,"index","","The capture index.",19,null],[3,"SetFlags","","A group of flags that is not applied to a particular…",null,null],[12,"span","","The span of these flags, including the grouping parentheses.",20,null],[12,"flags","","The actual sequence of flags.",20,null],[3,"Flags","","A group of flags.",null,null],[12,"span","","The span of this group of flags.",21,null],[12,"items","","A sequence of flag items. Each item is either a flag or a…",21,null],[3,"FlagsItem","","A single item in a group of flags.",null,null],[12,"span","","The span of this item.",22,null],[12,"kind","","The kind of this item.",22,null],[4,"ErrorKind","","The type of an error that occurred while building an AST.",null,null],[13,"CaptureLimitExceeded","","The capturing group limit was exceeded.",23,null],[13,"ClassEscapeInvalid","","An invalid escape sequence was found in a character class…",23,null],[13,"ClassRangeInvalid","","An invalid character class range was found. An invalid…",23,null],[13,"ClassRangeLiteral","","An invalid range boundary was found in a character class.…",23,null],[13,"ClassUnclosed","","An opening `[` was found with no corresponding closing `]`.",23,null],[13,"DecimalEmpty","","Note that this error variant is no longer used. Namely, a…",23,null],[13,"DecimalInvalid","","An invalid decimal number was given where one was expected.",23,null],[13,"EscapeHexEmpty","","A bracketed hex literal was empty.",23,null],[13,"EscapeHexInvalid","","A bracketed hex literal did not correspond to a Unicode…",23,null],[13,"EscapeHexInvalidDigit","","An invalid hexadecimal digit was found.",23,null],[13,"EscapeUnexpectedEof","","EOF was found before an escape sequence was completed.",23,null],[13,"EscapeUnrecognized","","An unrecognized escape sequence.",23,null],[13,"FlagDanglingNegation","","A dangling negation was used when setting flags, e.g., `i-`.",23,null],[13,"FlagDuplicate","","A flag was used twice, e.g., `i-i`.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the original flag. The error position…",24,null],[13,"FlagRepeatedNegation","regex_syntax::ast","The negation operator was used twice, e.g., `-i-s`.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the original negation operator. The error…",25,null],[13,"FlagUnexpectedEof","regex_syntax::ast","Expected a flag but got EOF, e.g., `(?`.",23,null],[13,"FlagUnrecognized","","Unrecognized flag, e.g., `a`.",23,null],[13,"GroupNameDuplicate","","A duplicate capture name was found.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the initial occurrence of the capture…",26,null],[13,"GroupNameEmpty","regex_syntax::ast","A capture group name is empty, e.g., `(?P<>abc)`.",23,null],[13,"GroupNameInvalid","","An invalid character was seen for a capture group name.…",23,null],[13,"GroupNameUnexpectedEof","","A closing `>` could not be found for a capture group name.",23,null],[13,"GroupUnclosed","","An unclosed group, e.g., `(ab`.",23,null],[13,"GroupUnopened","","An unopened group, e.g., `ab)`.",23,null],[13,"NestLimitExceeded","","The nest limit was exceeded. The limit stored here is the…",23,null],[13,"RepetitionCountInvalid","","The range provided in a counted repetition operator is…",23,null],[13,"RepetitionCountDecimalEmpty","","An opening `{` was not followed by a valid decimal value.…",23,null],[13,"RepetitionCountUnclosed","","An opening `{` was found with no corresponding closing `}`.",23,null],[13,"RepetitionMissing","","A repetition operator was applied to a missing…",23,null],[13,"UnsupportedBackreference","","When octal support is disabled, this error is produced…",23,null],[13,"UnsupportedLookAround","","When syntax similar to PCRE's look-around is used, this…",23,null],[4,"Ast","","An abstract syntax tree for a single regular expression.",null,null],[13,"Empty","","An empty regex that matches everything.",27,null],[13,"Flags","","A set of flags, e.g., `(?is)`.",27,null],[13,"Literal","","A single character literal, which includes escape sequences.",27,null],[13,"Dot","","The \"any character\" class.",27,null],[13,"Assertion","","A single zero-width assertion.",27,null],[13,"Class","","A single character class. This includes all forms of…",27,null],[13,"Repetition","","A repetition operator applied to an arbitrary regular…",27,null],[13,"Group","","A grouped regular expression.",27,null],[13,"Alternation","","An alternation of regular expressions.",27,null],[13,"Concat","","A concatenation of regular expressions.",27,null],[4,"LiteralKind","","The kind of a single literal expression.",null,null],[13,"Verbatim","","The literal is written verbatim, e.g., `a` or `☃`.",28,null],[13,"Punctuation","","The literal is written as an escape because it is…",28,null],[13,"Octal","","The literal is written as an octal escape, e.g., `\\141`.",28,null],[13,"HexFixed","","The literal is written as a hex code with a fixed number…",28,null],[13,"HexBrace","","The literal is written as a hex code with a bracketed…",28,null],[13,"Special","","The literal is written as a specially recognized escape,…",28,null],[4,"SpecialLiteralKind","","The type of a special literal.",null,null],[13,"Bell","","Bell, spelled `\\a` (`\\x07`).",29,null],[13,"FormFeed","","Form feed, spelled `\\f` (`\\x0C`).",29,null],[13,"Tab","","Tab, spelled `\\t` (`\\x09`).",29,null],[13,"LineFeed","","Line feed, spelled `\\n` (`\\x0A`).",29,null],[13,"CarriageReturn","","Carriage return, spelled `\\r` (`\\x0D`).",29,null],[13,"VerticalTab","","Vertical tab, spelled `\\v` (`\\x0B`).",29,null],[13,"Space","","Space, spelled `\\ ` (`\\x20`). Note that this can only…",29,null],[4,"HexLiteralKind","","The type of a Unicode hex literal.",null,null],[13,"X","","A `\\x` prefix. When used without brackets, this form is…",30,null],[13,"UnicodeShort","","A `\\u` prefix. When used without brackets, this form is…",30,null],[13,"UnicodeLong","","A `\\U` prefix. When used without brackets, this form is…",30,null],[4,"Class","","A single character class expression.",null,null],[13,"Unicode","","A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.",31,null],[13,"Perl","","A perl character class, e.g., `\\d` or `\\W`.",31,null],[13,"Bracketed","","A bracketed character class set, which may contain zero or…",31,null],[4,"ClassPerlKind","","The available Perl character classes.",null,null],[13,"Digit","","Decimal numbers.",32,null],[13,"Space","","Whitespace.",32,null],[13,"Word","","Word characters.",32,null],[4,"ClassAsciiKind","","The available ASCII character classes.",null,null],[13,"Alnum","","`[0-9A-Za-z]`",33,null],[13,"Alpha","","`[A-Za-z]`",33,null],[13,"Ascii","","`[\\x00-\\x7F]`",33,null],[13,"Blank","","`[ \\t]`",33,null],[13,"Cntrl","","`[\\x00-\\x1F\\x7F]`",33,null],[13,"Digit","","`[0-9]`",33,null],[13,"Graph","","`[!-~]`",33,null],[13,"Lower","","`[a-z]`",33,null],[13,"Print","","`[ -~]`",33,null],[13,"Punct","","`[!-/:-@\\[-`{-~]`",33,null],[13,"Space","","`[\\t\\n\\v\\f\\r ]`",33,null],[13,"Upper","","`[A-Z]`",33,null],[13,"Word","","`[0-9A-Za-z_]`",33,null],[13,"Xdigit","","`[0-9A-Fa-f]`",33,null],[4,"ClassUnicodeKind","","The available forms of Unicode character classes.",null,null],[13,"OneLetter","","A one letter abbreviated class, e.g., `\\pN`.",34,null],[13,"Named","","A binary property, general category or script. The string…",34,null],[13,"NamedValue","","A property name and an associated value.",34,null],[12,"op","regex_syntax::ast::ClassUnicodeKind","The type of Unicode op used to associate `name` with…",35,null],[12,"name","","The property name (which may be empty).",35,null],[12,"value","","The property value (which may be empty).",35,null],[4,"ClassUnicodeOpKind","regex_syntax::ast","The type of op used in a Unicode character class.",null,null],[13,"Equal","","A property set to a specific value, e.g.,…",36,null],[13,"Colon","","A property set to a specific value using a colon, e.g.,…",36,null],[13,"NotEqual","","A property that isn't a particular value, e.g.,…",36,null],[4,"ClassSet","","A character class set.",null,null],[13,"Item","","An item, which can be a single literal, range, nested…",37,null],[13,"BinaryOp","","A single binary operation (i.e., &&, -- or ~~).",37,null],[4,"ClassSetItem","","A single component of a character class set.",null,null],[13,"Empty","","An empty item.",38,null],[13,"Literal","","A single literal.",38,null],[13,"Range","","A range between two literals.",38,null],[13,"Ascii","","An ASCII character class, e.g., `[:alnum:]` or `[:punct:]`.",38,null],[13,"Unicode","","A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.",38,null],[13,"Perl","","A perl character class, e.g., `\\d` or `\\W`.",38,null],[13,"Bracketed","","A bracketed character class set, which may contain zero or…",38,null],[13,"Union","","A union of items.",38,null],[4,"ClassSetBinaryOpKind","","The type of a Unicode character class set operation.",null,null],[13,"Intersection","","The intersection of two sets, e.g., `\\pN&&[a-z]`.",39,null],[13,"Difference","","The difference of two sets, e.g., `\\pN--[0-9]`.",39,null],[13,"SymmetricDifference","","The symmetric difference of two sets. The symmetric…",39,null],[4,"AssertionKind","","An assertion kind.",null,null],[13,"StartLine","","`^`",40,null],[13,"EndLine","","`$`",40,null],[13,"StartText","","`\\A`",40,null],[13,"EndText","","`\\z`",40,null],[13,"WordBoundary","","`\\b`",40,null],[13,"NotWordBoundary","","`\\B`",40,null],[4,"RepetitionKind","","The kind of a repetition operator.",null,null],[13,"ZeroOrOne","","`?`",41,null],[13,"ZeroOrMore","","`*`",41,null],[13,"OneOrMore","","`+`",41,null],[13,"Range","","`{m,n}`",41,null],[4,"RepetitionRange","","A range repetition operator.",null,null],[13,"Exactly","","`{m}`",42,null],[13,"AtLeast","","`{m,}`",42,null],[13,"Bounded","","`{m,n}`",42,null],[4,"GroupKind","","The kind of a group.",null,null],[13,"CaptureIndex","","`(a)`",43,null],[13,"CaptureName","","`(?P<name>a)`",43,null],[13,"NonCapturing","","`(?:a)` and `(?i:a)`",43,null],[4,"FlagsItemKind","","The kind of an item in a group of flags.",null,null],[13,"Negation","","A negation operator applied to all subsequent flags in the…",44,null],[13,"Flag","","A single flag in a group.",44,null],[4,"Flag","","A single flag.",null,null],[13,"CaseInsensitive","","`i`",45,null],[13,"MultiLine","","`m`",45,null],[13,"DotMatchesNewLine","","`s`",45,null],[13,"SwapGreed","","`U`",45,null],[13,"Unicode","","`u`",45,null],[13,"IgnoreWhitespace","","`x`",45,null],[5,"visit","","Executes an implementation of `Visitor` in constant stack…",null,[[["ast"],["visitor"]],["result"]]],[0,"parse","","This module provides a regular expression parser.",null,null],[3,"ParserBuilder","regex_syntax::ast::parse","A builder for a regular expression parser.",null,null],[3,"Parser","","A regular expression parser.",null,null],[11,"new","","Create a new parser builder with a default configuration.",46,[[],["parserbuilder"]]],[11,"build","","Build a parser from this configuration with the given…",46,[[["self"]],["parser"]]],[11,"nest_limit","","Set the nesting limit for this parser.",46,[[["self"],["u32"]],["parserbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",46,[[["self"],["bool"]],["parserbuilder"]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",46,[[["self"],["bool"]],["parserbuilder"]]],[11,"new","","Create a new parser with a default configuration.",47,[[],["parser"]]],[11,"parse","","Parse the regular expression into an abstract syntax tree.",47,[[["str"],["self"]],[["ast"],["result",["ast","error"]],["error"]]]],[11,"parse_with_comments","","Parse the regular expression and return an abstract syntax…",47,[[["str"],["self"]],[["withcomments"],["error"],["result",["withcomments","error"]]]]],[0,"print","regex_syntax::ast","This module provides a regular expression printer for `Ast`.",null,null],[3,"Printer","regex_syntax::ast::print","A printer for a regular expression abstract syntax tree.",null,null],[11,"new","","Create a new printer.",48,[[],["printer"]]],[11,"print","","Print the given `Ast` to the given writer. The writer must…",48,[[["ast"],["self"],["write"]],["result"]]],[8,"Visitor","regex_syntax::ast","A trait for visiting an abstract syntax tree (AST) in…",null,null],[16,"Output","","The result of visiting an AST.",49,null],[16,"Err","","An error that visiting an AST might return.",49,null],[10,"finish","","All implementors of `Visitor` must provide a `finish`…",49,[[],["result"]]],[11,"start","","This method is called before beginning traversal of the AST.",49,[[["self"]]]],[11,"visit_pre","","This method is called on an `Ast` before descending into…",49,[[["ast"],["self"]],["result"]]],[11,"visit_post","","This method is called on an `Ast` after descending all of…",49,[[["ast"],["self"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an…",49,[[["self"]],["result"]]],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before…",49,[[["self"],["classsetitem"]],["result"]]],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after…",49,[[["self"],["classsetitem"]],["result"]]],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before…",49,[[["classsetbinaryop"],["self"]],["result"]]],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after…",49,[[["classsetbinaryop"],["self"]],["result"]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand…",49,[[["classsetbinaryop"],["self"]],["result"]]],[11,"kind","","Return the type of this error.",50,[[["self"]],["errorkind"]]],[11,"pattern","","The original pattern string in which this error occurred.",50,[[["self"]],["str"]]],[11,"span","","Return the span at which this error occurred.",50,[[["self"]],["span"]]],[11,"auxiliary_span","","Return an auxiliary span. This span exists only for some…",50,[[["self"]],[["option",["span"]],["span"]]]],[11,"new","","Create a new span with the given positions.",1,[[["position"]],["span"]]],[11,"splat","","Create a new span using the given position as the start…",1,[[["position"]],["span"]]],[11,"with_start","","Create a new span by replacing the starting the position…",1,[[["position"]],["span"]]],[11,"with_end","","Create a new span by replacing the ending the position…",1,[[["position"]],["span"]]],[11,"is_one_line","","Returns true if and only if this span occurs on a single…",1,[[["self"]],["bool"]]],[11,"is_empty","","Returns true if and only if this span is empty. That is,…",1,[[["self"]],["bool"]]],[11,"new","","Create a new position with the given information.",2,[[["usize"]],["position"]]],[11,"span","","Return the span of this abstract syntax tree.",27,[[["self"]],["span"]]],[11,"is_empty","","Return true if and only if this Ast is empty.",27,[[["self"]],["bool"]]],[11,"into_ast","","Return this alternation as an AST.",5,[[],["ast"]]],[11,"into_ast","","Return this concatenation as an AST.",6,[[],["ast"]]],[11,"byte","","If this literal was written as a `\\x` hex escape, then…",7,[[["self"]],[["u8"],["option",["u8"]]]]],[11,"digits","","The number of digits that must be used with this literal…",30,[[["self"]],["u32"]]],[11,"span","","Return the span of this character class.",31,[[["self"]],["span"]]],[11,"from_name","","Return the corresponding ClassAsciiKind variant for the…",33,[[["str"]],[["option",["classasciikind"]],["classasciikind"]]]],[11,"is_negated","","Returns true if this class has been negated.",10,[[["self"]],["bool"]]],[11,"is_equal","","Whether the op is an equality op or not.",36,[[["self"]],["bool"]]],[11,"union","","Build a set from a union.",37,[[["classsetunion"]],["classset"]]],[11,"span","","Return the span of this character class set.",37,[[["self"]],["span"]]],[11,"span","","Return the span of this character class set item.",38,[[["self"]],["span"]]],[11,"is_valid","","Returns true if and only if this character class range is…",12,[[["self"]],["bool"]]],[11,"push","","Push a new item in this union.",13,[[["self"],["classsetitem"]]]],[11,"into_item","","Return this union as a character class set item.",13,[[],["classsetitem"]]],[11,"is_valid","","Returns true if and only if this repetition range is valid.",42,[[["self"]],["bool"]]],[11,"flags","","If this group is non-capturing, then this returns the…",18,[[["self"]],[["option",["flags"]],["flags"]]]],[11,"is_capturing","","Returns true if and only if this group is capturing.",18,[[["self"]],["bool"]]],[11,"capture_index","","Returns the capture index of this group, if this is a…",18,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"add_item","","Add the given item to this sequence of flags.",21,[[["flagsitem"],["self"]],[["option",["usize"]],["usize"]]]],[11,"flag_state","","Returns the state of the given flag in this set.",21,[[["self"],["flag"]],[["option",["bool"]],["bool"]]]],[11,"is_negation","","Returns true if and only if this item is a negation…",44,[[["self"]],["bool"]]],[0,"hir","regex_syntax","Defines a high-level intermediate representation for…",null,null],[3,"CaseFoldError","regex_syntax::hir","An error that occurs when Unicode-aware simple case…",null,null],[3,"Error","","An error that can occur while translating an `Ast` to a…",null,null],[3,"Hir","","A high-level intermediate representation (HIR) for a…",null,null],[3,"ClassUnicode","","A set of characters represented by Unicode scalar values.",null,null],[3,"ClassUnicodeIter","","An iterator over all ranges in a Unicode character class.",null,null],[3,"ClassUnicodeRange","","A single range of characters represented by Unicode scalar…",null,null],[3,"ClassBytes","","A set of characters represented by arbitrary bytes (where…",null,null],[3,"ClassBytesIter","","An iterator over all ranges in a byte character class.",null,null],[3,"ClassBytesRange","","A single range of characters represented by arbitrary bytes.",null,null],[3,"Group","","The high-level intermediate representation for a group.",null,null],[12,"kind","","The kind of this group. If it is a capturing group, then…",51,null],[12,"hir","","The expression inside the capturing group, which may be…",51,null],[3,"Repetition","","The high-level intermediate representation of a repetition…",null,null],[12,"kind","","The kind of this repetition operator.",52,null],[12,"greedy","","Whether this repetition operator is greedy or not. A…",52,null],[12,"hir","","The expression being repeated.",52,null],[4,"ErrorKind","","The type of an error that occurred while building an `Hir`.",null,null],[13,"UnicodeNotAllowed","","This error occurs when a Unicode feature is used when…",53,null],[13,"InvalidUtf8","","This error occurs when translating a pattern that could…",53,null],[13,"UnicodePropertyNotFound","","This occurs when an unrecognized Unicode property name…",53,null],[13,"UnicodePropertyValueNotFound","","This occurs when an unrecognized Unicode property value…",53,null],[13,"UnicodePerlClassNotFound","","This occurs when a Unicode-aware Perl character class…",53,null],[13,"UnicodeCaseUnavailable","","This occurs when the Unicode simple case mapping tables…",53,null],[13,"EmptyClassNotAllowed","","This occurs when the translator attempts to construct a…",53,null],[4,"HirKind","","The kind of an arbitrary `Hir` expression.",null,null],[13,"Empty","","The empty regular expression, which matches everything,…",54,null],[13,"Literal","","A single literal character that matches exactly this…",54,null],[13,"Class","","A single character class that matches any of the…",54,null],[13,"Anchor","","An anchor assertion. An anchor assertion match always has…",54,null],[13,"WordBoundary","","A word boundary assertion, which may or may not be Unicode…",54,null],[13,"Repetition","","A repetition operation applied to a child expression.",54,null],[13,"Group","","A possibly capturing group, which contains a child…",54,null],[13,"Concat","","A concatenation of expressions. A concatenation always has…",54,null],[13,"Alternation","","An alternation of expressions. An alternation always has…",54,null],[4,"Literal","","The high-level intermediate representation of a literal.",null,null],[13,"Unicode","","A single character represented by a Unicode scalar value.",55,null],[13,"Byte","","A single character represented by an arbitrary byte.",55,null],[4,"Class","","The high-level intermediate representation of a character…",null,null],[13,"Unicode","","A set of characters represented by Unicode scalar values.",56,null],[13,"Bytes","","A set of characters represented by arbitrary bytes (one…",56,null],[4,"Anchor","","The high-level intermediate representation for an anchor…",null,null],[13,"StartLine","","Match the beginning of a line or the beginning of text.…",57,null],[13,"EndLine","","Match the end of a line or the end of text. Specifically,…",57,null],[13,"StartText","","Match the beginning of text. Specifically, this matches at…",57,null],[13,"EndText","","Match the end of text. Specifically, this matches at the…",57,null],[4,"WordBoundary","","The high-level intermediate representation for a…",null,null],[13,"Unicode","","Match a Unicode-aware word boundary. That is, this matches…",58,null],[13,"UnicodeNegate","","Match a Unicode-aware negation of a word boundary.",58,null],[13,"Ascii","","Match an ASCII-only word boundary. That is, this matches a…",58,null],[13,"AsciiNegate","","Match an ASCII-only negation of a word boundary.",58,null],[4,"GroupKind","","The kind of group.",null,null],[13,"CaptureIndex","","A normal unnamed capturing group.",59,null],[13,"CaptureName","","A named capturing group.",59,null],[12,"name","regex_syntax::hir::GroupKind","The name of the group.",60,null],[12,"index","","The capture index of the group.",60,null],[13,"NonCapturing","regex_syntax::hir","A non-capturing group.",59,null],[4,"RepetitionKind","","The kind of a repetition operator.",null,null],[13,"ZeroOrOne","","Matches a sub-expression zero or one times.",61,null],[13,"ZeroOrMore","","Matches a sub-expression zero or more times.",61,null],[13,"OneOrMore","","Matches a sub-expression one or more times.",61,null],[13,"Range","","Matches a sub-expression within a bounded range of times.",61,null],[4,"RepetitionRange","","The kind of a counted repetition operator.",null,null],[13,"Exactly","","Matches a sub-expression exactly this many times.",62,null],[13,"AtLeast","","Matches a sub-expression at least this many times.",62,null],[13,"Bounded","","Matches a sub-expression at least `m` times and at most…",62,null],[5,"visit","","Executes an implementation of `Visitor` in constant stack…",null,[[["visitor"],["hir"]],["result"]]],[0,"literal","","Provides routines for extracting literal prefixes and…",null,null],[3,"Literals","regex_syntax::hir::literal","A set of literal byte strings extracted from a regular…",null,null],[3,"Literal","","A single member of a set of literals extracted from a…",null,null],[11,"empty","","Returns a new empty set of literals using default limits.",63,[[],["literals"]]],[11,"prefixes","","Returns a set of literal prefixes extracted from the given…",63,[[["hir"]],["literals"]]],[11,"suffixes","","Returns a set of literal suffixes extracted from the given…",63,[[["hir"]],["literals"]]],[11,"limit_size","","Get the approximate size limit (in bytes) of this set.",63,[[["self"]],["usize"]]],[11,"set_limit_size","","Set the approximate size limit (in bytes) of this set.",63,[[["self"],["usize"]],["literals"]]],[11,"limit_class","","Get the character class size limit for this set.",63,[[["self"]],["usize"]]],[11,"set_limit_class","","Limits the size of character(or byte) classes considered.",63,[[["self"],["usize"]],["literals"]]],[11,"literals","","Returns the set of literals as a slice. Its order is…",63,[[["self"]]]],[11,"min_len","","Returns the length of the smallest literal.",63,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"all_complete","","Returns true if all members in this set are complete.",63,[[["self"]],["bool"]]],[11,"any_complete","","Returns true if any member in this set is complete.",63,[[["self"]],["bool"]]],[11,"contains_empty","","Returns true if this set contains an empty literal.",63,[[["self"]],["bool"]]],[11,"is_empty","","Returns true if this set is empty or if all of its members…",63,[[["self"]],["bool"]]],[11,"to_empty","","Returns a new empty set of literals using this set's limits.",63,[[["self"]],["literals"]]],[11,"longest_common_prefix","","Returns the longest common prefix of all members in this…",63,[[["self"]]]],[11,"longest_common_suffix","","Returns the longest common suffix of all members in this…",63,[[["self"]]]],[11,"trim_suffix","","Returns a new set of literals with the given number of…",63,[[["self"],["usize"]],[["option",["literals"]],["literals"]]]],[11,"unambiguous_prefixes","","Returns a new set of prefixes of this set of literals that…",63,[[["self"]],["literals"]]],[11,"unambiguous_suffixes","","Returns a new set of suffixes of this set of literals that…",63,[[["self"]],["literals"]]],[11,"union_prefixes","","Unions the prefixes from the given expression to this set.",63,[[["self"],["hir"]],["bool"]]],[11,"union_suffixes","","Unions the suffixes from the given expression to this set.",63,[[["self"],["hir"]],["bool"]]],[11,"union","","Unions this set with another set.",63,[[["self"],["literals"]],["bool"]]],[11,"cross_product","","Extends this set with another set.",63,[[["literals"],["self"]],["bool"]]],[11,"cross_add","","Extends each literal in this set with the bytes given.",63,[[["self"]],["bool"]]],[11,"add","","Adds the given literal to this set.",63,[[["self"],["literal"]],["bool"]]],[11,"add_char_class","","Extends each literal in this set with the character class…",63,[[["classunicode"],["self"]],["bool"]]],[11,"add_byte_class","","Extends each literal in this set with the byte class given.",63,[[["self"],["classbytes"]],["bool"]]],[11,"cut","","Cuts every member of this set. When a member is cut, it…",63,[[["self"]]]],[11,"reverse","","Reverses all members in place.",63,[[["self"]]]],[11,"clear","","Clears this set of all members.",63,[[["self"]]]],[11,"new","","Returns a new complete literal with the bytes given.",64,[[["vec",["u8"]],["u8"]],["literal"]]],[11,"empty","","Returns a new complete empty literal.",64,[[],["literal"]]],[11,"is_cut","","Returns true if this literal was \"cut.\"",64,[[["self"]],["bool"]]],[11,"cut","","Cuts this literal.",64,[[["self"]]]],[0,"print","regex_syntax::hir","This module provides a regular expression printer for `Hir`.",null,null],[3,"Printer","regex_syntax::hir::print","A printer for a regular expression's high-level…",null,null],[11,"new","","Create a new printer.",65,[[],["printer"]]],[11,"print","","Print the given `Ast` to the given writer. The writer must…",65,[[["self"],["write"],["hir"]],["result"]]],[0,"translate","regex_syntax::hir","Defines a translator that converts an `Ast` to an `Hir`.",null,null],[3,"TranslatorBuilder","regex_syntax::hir::translate","A builder for constructing an AST->HIR translator.",null,null],[3,"Translator","","A translator maps abstract syntax to a high level…",null,null],[11,"new","","Create a new translator builder with a default c…",66,[[],["translatorbuilder"]]],[11,"build","","Build a translator using the current configuration.",66,[[["self"]],["translator"]]],[11,"allow_invalid_utf8","","When enabled, translation will permit the construction of…",66,[[["self"],["bool"]],["translatorbuilder"]]],[11,"case_insensitive","","Enable or disable the case insensitive flag (`i`) by…",66,[[["self"],["bool"]],["translatorbuilder"]]],[11,"multi_line","","Enable or disable the multi-line matching flag (`m`) by…",66,[[["self"],["bool"]],["translatorbuilder"]]],[11,"dot_matches_new_line","","Enable or disable the \"dot matches any character\" flag…",66,[[["self"],["bool"]],["translatorbuilder"]]],[11,"swap_greed","","Enable or disable the \"swap greed\" flag (`U`) by default.",66,[[["self"],["bool"]],["translatorbuilder"]]],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",66,[[["self"],["bool"]],["translatorbuilder"]]],[11,"new","","Create a new translator using the default configuration.",67,[[],["translator"]]],[11,"translate","","Translate the given abstract syntax tree (AST) into a high…",67,[[["str"],["self"],["ast"]],[["hir"],["result",["hir","error"]],["error"]]]],[8,"Visitor","regex_syntax::hir","A trait for visiting the high-level IR (HIR) in depth…",null,null],[16,"Output","","The result of visiting an HIR.",68,null],[16,"Err","","An error that visiting an HIR might return.",68,null],[10,"finish","","All implementors of `Visitor` must provide a `finish`…",68,[[],["result"]]],[11,"start","","This method is called before beginning traversal of the HIR.",68,[[["self"]]]],[11,"visit_pre","","This method is called on an `Hir` before descending into…",68,[[["self"],["hir"]],["result"]]],[11,"visit_post","","This method is called on an `Hir` after descending all of…",68,[[["self"],["hir"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",68,[[["self"]],["result"]]],[11,"kind","","Return the type of this error.",69,[[["self"]],["errorkind"]]],[11,"pattern","","The original pattern string in which this error occurred.",69,[[["self"]],["str"]]],[11,"span","","Return the span at which this error occurred.",69,[[["self"]],["span"]]],[11,"kind","","Returns a reference to the underlying HIR kind.",70,[[["self"]],["hirkind"]]],[11,"into_kind","","Consumes ownership of this HIR expression and returns its…",70,[[],["hirkind"]]],[11,"empty","","Returns an empty HIR expression.",70,[[],["hir"]]],[11,"literal","","Creates a literal HIR expression.",70,[[["literal"]],["hir"]]],[11,"class","","Creates a class HIR expression.",70,[[["class"]],["hir"]]],[11,"anchor","","Creates an anchor assertion HIR expression.",70,[[["anchor"]],["hir"]]],[11,"word_boundary","","Creates a word boundary assertion HIR expression.",70,[[["wordboundary"]],["hir"]]],[11,"repetition","","Creates a repetition HIR expression.",70,[[["repetition"]],["hir"]]],[11,"group","","Creates a group HIR expression.",70,[[["group"]],["hir"]]],[11,"concat","","Returns the concatenation of the given expressions.",70,[[["hir"],["vec",["hir"]]],["hir"]]],[11,"alternation","","Returns the alternation of the given expressions.",70,[[["hir"],["vec",["hir"]]],["hir"]]],[11,"dot","","Build an HIR expression for `.`.",70,[[["bool"]],["hir"]]],[11,"any","","Build an HIR expression for `(?s).`.",70,[[["bool"]],["hir"]]],[11,"is_always_utf8","","Return true if and only if this HIR will always match…",70,[[["self"]],["bool"]]],[11,"is_all_assertions","","Returns true if and only if this entire HIR expression is…",70,[[["self"]],["bool"]]],[11,"is_anchored_start","","Return true if and only if this HIR is required to match…",70,[[["self"]],["bool"]]],[11,"is_anchored_end","","Return true if and only if this HIR is required to match…",70,[[["self"]],["bool"]]],[11,"is_line_anchored_start","","Return true if and only if this HIR is required to match…",70,[[["self"]],["bool"]]],[11,"is_line_anchored_end","","Return true if and only if this HIR is required to match…",70,[[["self"]],["bool"]]],[11,"is_any_anchored_start","","Return true if and only if this HIR contains any…",70,[[["self"]],["bool"]]],[11,"is_any_anchored_end","","Return true if and only if this HIR contains any…",70,[[["self"]],["bool"]]],[11,"is_match_empty","","Return true if and only if the empty string is part of the…",70,[[["self"]],["bool"]]],[11,"is_literal","","Return true if and only if this HIR is a simple literal.…",70,[[["self"]],["bool"]]],[11,"is_alternation_literal","","Return true if and only if this HIR is either a simple…",70,[[["self"]],["bool"]]],[11,"is_empty","","Return true if and only if this HIR is the empty regular…",54,[[["self"]],["bool"]]],[11,"has_subexprs","","Returns true if and only if this kind has any (including…",54,[[["self"]],["bool"]]],[11,"is_unicode","","Returns true if and only if this literal corresponds to a…",55,[[["self"]],["bool"]]],[11,"case_fold_simple","","Apply Unicode simple case folding to this character class,…",56,[[["self"]]]],[11,"negate","","Negate this character class in place.",56,[[["self"]]]],[11,"is_always_utf8","","Returns true if and only if this character class will only…",56,[[["self"]],["bool"]]],[11,"new","","Create a new class from a sequence of ranges.",71,[[["i"]],["classunicode"]]],[11,"empty","","Create a new class with no ranges.",71,[[],["classunicode"]]],[11,"push","","Add a new range to this set.",71,[[["classunicoderange"],["self"]]]],[11,"iter","","Return an iterator over all ranges in this class.",71,[[["self"]],["classunicodeiter"]]],[11,"ranges","","Return the underlying ranges as a slice.",71,[[["self"]]]],[11,"case_fold_simple","","Expand this character class such that it contains all case…",71,[[["self"]]]],[11,"try_case_fold_simple","","Expand this character class such that it contains all case…",71,[[["self"]],[["casefolderror"],["result",["casefolderror"]]]]],[11,"negate","","Negate this character class.",71,[[["self"]]]],[11,"union","","Union this character class with the given character class,…",71,[[["classunicode"],["self"]]]],[11,"intersect","","Intersect this character class with the given character…",71,[[["classunicode"],["self"]]]],[11,"difference","","Subtract the given character class from this character…",71,[[["classunicode"],["self"]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given character…",71,[[["classunicode"],["self"]]]],[11,"new","","Create a new Unicode scalar value range for a character…",72,[[["char"]],["classunicoderange"]]],[11,"start","","Return the start of this range.",72,[[["self"]],["char"]]],[11,"end","","Return the end of this range.",72,[[["self"]],["char"]]],[11,"new","","Create a new class from a sequence of ranges.",73,[[["i"]],["classbytes"]]],[11,"empty","","Create a new class with no ranges.",73,[[],["classbytes"]]],[11,"push","","Add a new range to this set.",73,[[["classbytesrange"],["self"]]]],[11,"iter","","Return an iterator over all ranges in this class.",73,[[["self"]],["classbytesiter"]]],[11,"ranges","","Return the underlying ranges as a slice.",73,[[["self"]]]],[11,"case_fold_simple","","Expand this character class such that it contains all case…",73,[[["self"]]]],[11,"negate","","Negate this byte class.",73,[[["self"]]]],[11,"union","","Union this byte class with the given byte class, in place.",73,[[["self"],["classbytes"]]]],[11,"intersect","","Intersect this byte class with the given byte class, in…",73,[[["self"],["classbytes"]]]],[11,"difference","","Subtract the given byte class from this byte class, in…",73,[[["self"],["classbytes"]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given byte…",73,[[["self"],["classbytes"]]]],[11,"is_all_ascii","","Returns true if and only if this character class will…",73,[[["self"]],["bool"]]],[11,"new","","Create a new byte range for a character class.",74,[[["u8"]],["classbytesrange"]]],[11,"start","","Return the start of this range.",74,[[["self"]],["u8"]]],[11,"end","","Return the end of this range.",74,[[["self"]],["u8"]]],[11,"is_negated","","Returns true if and only if this word boundary assertion…",58,[[["self"]],["bool"]]],[11,"is_match_empty","","Returns true if and only if this repetition operator makes…",52,[[["self"]],["bool"]]],[11,"new","regex_syntax","Create a new parser builder with a default configuration.",75,[[],["parserbuilder"]]],[11,"build","","Build a parser from this configuration with the given…",75,[[["self"]],["parser"]]],[11,"nest_limit","","Set the nesting limit for this parser.",75,[[["self"],["u32"]],["parserbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"allow_invalid_utf8","","When enabled, the parser will permit the construction of a…",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"case_insensitive","","Enable or disable the case insensitive flag by default.",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"multi_line","","Enable or disable the multi-line matching flag by default.",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"dot_matches_new_line","","Enable or disable the \"dot matches any character\" flag by…",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"swap_greed","","Enable or disable the \"swap greed\" flag by default.",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"new","","Create a new parser with a default configuration.",76,[[],["parser"]]],[11,"parse","","Parse the regular expression into a high level…",76,[[["str"],["self"]],[["hir"],["result",["hir"]]]]],[0,"utf8","","Converts ranges of Unicode scalar values to equivalent…",null,null],[3,"Utf8Range","regex_syntax::utf8","A single inclusive range of UTF-8 bytes.",null,null],[12,"start","","Start of byte range (inclusive).",77,null],[12,"end","","End of byte range (inclusive).",77,null],[3,"Utf8Sequences","","An iterator over ranges of matching UTF-8 byte sequences.",null,null],[4,"Utf8Sequence","","Utf8Sequence represents a sequence of byte ranges.",null,null],[13,"One","","One byte range.",78,null],[13,"Two","","Two successive byte ranges.",78,null],[13,"Three","","Three successive byte ranges.",78,null],[13,"Four","","Four successive byte ranges.",78,null],[11,"as_slice","","Returns the underlying sequence of byte ranges as a slice.",78,[[["self"]]]],[11,"len","","Returns the number of byte ranges in this sequence.",78,[[["self"]],["usize"]]],[11,"matches","","Returns true if and only if a prefix of `bytes` matches…",78,[[["self"]],["bool"]]],[11,"matches","","Returns true if and only if the given byte is in this range.",77,[[["self"],["u8"]],["bool"]]],[11,"new","","Create a new iterator over UTF-8 byte ranges for the…",79,[[["char"]],["self"]]],[6,"Result","regex_syntax","A type alias for dealing with errors returned by this crate.",null,null],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_string","","",80,[[["self"]],["string"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","regex_syntax::ast","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"to_string","","",50,[[["self"]],["string"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"to_string","","",27,[[["self"]],["string"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","regex_syntax::ast::parse","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","regex_syntax::ast::print","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_string","","",81,[[["self"]],["string"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"to_string","","",69,[[["self"]],["string"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"to_string","","",70,[[["self"]],["string"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"into_iter","","",82,[[],["i"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"into_iter","","",83,[[],["i"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"to_string","","",53,[[["self"]],["string"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir::literal","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir::print","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir::translate","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","regex_syntax::utf8","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"into_iter","","",79,[[],["i"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"drop","regex_syntax::ast","",27,[[["self"]]]],[11,"drop","","",37,[[["self"]]]],[11,"drop","regex_syntax::hir","",70,[[["self"]]]],[11,"as_ref","regex_syntax::hir::literal","",64,[[["self"]]]],[11,"from","regex_syntax","",0,[[["error"]],["error"]]],[11,"from","","",0,[[["error"]],["error"]]],[11,"next","regex_syntax::hir","",82,[[["self"]],[["classunicoderange"],["option",["classunicoderange"]]]]],[11,"next","","",83,[[["self"]],[["option",["classbytesrange"]],["classbytesrange"]]]],[11,"next","regex_syntax::utf8","",79,[[["self"]],["option"]]],[11,"clone","regex_syntax::ast::parse","",46,[[["self"]],["parserbuilder"]]],[11,"clone","","",47,[[["self"]],["parser"]]],[11,"clone","regex_syntax::ast","",50,[[["self"]],["error"]]],[11,"clone","","",23,[[["self"]],["errorkind"]]],[11,"clone","","",1,[[["self"]],["span"]]],[11,"clone","","",2,[[["self"]],["position"]]],[11,"clone","","",3,[[["self"]],["withcomments"]]],[11,"clone","","",4,[[["self"]],["comment"]]],[11,"clone","","",27,[[["self"]],["ast"]]],[11,"clone","","",5,[[["self"]],["alternation"]]],[11,"clone","","",6,[[["self"]],["concat"]]],[11,"clone","","",7,[[["self"]],["literal"]]],[11,"clone","","",28,[[["self"]],["literalkind"]]],[11,"clone","","",29,[[["self"]],["specialliteralkind"]]],[11,"clone","","",30,[[["self"]],["hexliteralkind"]]],[11,"clone","","",31,[[["self"]],["class"]]],[11,"clone","","",8,[[["self"]],["classperl"]]],[11,"clone","","",32,[[["self"]],["classperlkind"]]],[11,"clone","","",9,[[["self"]],["classascii"]]],[11,"clone","","",33,[[["self"]],["classasciikind"]]],[11,"clone","","",10,[[["self"]],["classunicode"]]],[11,"clone","","",34,[[["self"]],["classunicodekind"]]],[11,"clone","","",36,[[["self"]],["classunicodeopkind"]]],[11,"clone","","",11,[[["self"]],["classbracketed"]]],[11,"clone","","",37,[[["self"]],["classset"]]],[11,"clone","","",38,[[["self"]],["classsetitem"]]],[11,"clone","","",12,[[["self"]],["classsetrange"]]],[11,"clone","","",13,[[["self"]],["classsetunion"]]],[11,"clone","","",14,[[["self"]],["classsetbinaryop"]]],[11,"clone","","",39,[[["self"]],["classsetbinaryopkind"]]],[11,"clone","","",15,[[["self"]],["assertion"]]],[11,"clone","","",40,[[["self"]],["assertionkind"]]],[11,"clone","","",16,[[["self"]],["repetition"]]],[11,"clone","","",17,[[["self"]],["repetitionop"]]],[11,"clone","","",41,[[["self"]],["repetitionkind"]]],[11,"clone","","",42,[[["self"]],["repetitionrange"]]],[11,"clone","","",18,[[["self"]],["group"]]],[11,"clone","","",43,[[["self"]],["groupkind"]]],[11,"clone","","",19,[[["self"]],["capturename"]]],[11,"clone","","",20,[[["self"]],["setflags"]]],[11,"clone","","",21,[[["self"]],["flags"]]],[11,"clone","","",22,[[["self"]],["flagsitem"]]],[11,"clone","","",44,[[["self"]],["flagsitemkind"]]],[11,"clone","","",45,[[["self"]],["flag"]]],[11,"clone","regex_syntax","",0,[[["self"]],["error"]]],[11,"clone","regex_syntax::hir::literal","",63,[[["self"]],["literals"]]],[11,"clone","","",64,[[["self"]],["literal"]]],[11,"clone","regex_syntax::hir::translate","",66,[[["self"]],["translatorbuilder"]]],[11,"clone","","",67,[[["self"]],["translator"]]],[11,"clone","regex_syntax::hir","",69,[[["self"]],["error"]]],[11,"clone","","",53,[[["self"]],["errorkind"]]],[11,"clone","","",70,[[["self"]],["hir"]]],[11,"clone","","",54,[[["self"]],["hirkind"]]],[11,"clone","","",55,[[["self"]],["literal"]]],[11,"clone","","",56,[[["self"]],["class"]]],[11,"clone","","",71,[[["self"]],["classunicode"]]],[11,"clone","","",72,[[["self"]],["classunicoderange"]]],[11,"clone","","",73,[[["self"]],["classbytes"]]],[11,"clone","","",74,[[["self"]],["classbytesrange"]]],[11,"clone","","",57,[[["self"]],["anchor"]]],[11,"clone","","",58,[[["self"]],["wordboundary"]]],[11,"clone","","",51,[[["self"]],["group"]]],[11,"clone","","",59,[[["self"]],["groupkind"]]],[11,"clone","","",52,[[["self"]],["repetition"]]],[11,"clone","","",61,[[["self"]],["repetitionkind"]]],[11,"clone","","",62,[[["self"]],["repetitionrange"]]],[11,"clone","regex_syntax","",75,[[["self"]],["parserbuilder"]]],[11,"clone","","",76,[[["self"]],["parser"]]],[11,"clone","regex_syntax::utf8","",78,[[["self"]],["utf8sequence"]]],[11,"clone","","",77,[[["self"]],["utf8range"]]],[11,"default","regex_syntax::ast::parse","",46,[[],["parserbuilder"]]],[11,"default","regex_syntax::hir::translate","",66,[[],["translatorbuilder"]]],[11,"default","regex_syntax::hir","",72,[[],["classunicoderange"]]],[11,"default","","",74,[[],["classbytesrange"]]],[11,"default","regex_syntax","",75,[[],["parserbuilder"]]],[11,"cmp","regex_syntax::ast","",1,[[["span"],["self"]],["ordering"]]],[11,"cmp","","",2,[[["self"],["position"]],["ordering"]]],[11,"cmp","regex_syntax::hir::literal","",64,[[["literal"],["self"]],["ordering"]]],[11,"cmp","regex_syntax::hir","",72,[[["classunicoderange"],["self"]],["ordering"]]],[11,"cmp","","",74,[[["self"],["classbytesrange"]],["ordering"]]],[11,"cmp","regex_syntax::utf8","",78,[[["utf8sequence"],["self"]],["ordering"]]],[11,"cmp","","",77,[[["self"],["utf8range"]],["ordering"]]],[11,"eq","regex_syntax::ast","",50,[[["error"],["self"]],["bool"]]],[11,"ne","","",50,[[["error"],["self"]],["bool"]]],[11,"eq","","",23,[[["errorkind"],["self"]],["bool"]]],[11,"ne","","",23,[[["errorkind"],["self"]],["bool"]]],[11,"eq","","",1,[[["span"],["self"]],["bool"]]],[11,"ne","","",1,[[["span"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["position"]],["bool"]]],[11,"ne","","",2,[[["self"],["position"]],["bool"]]],[11,"eq","","",3,[[["withcomments"],["self"]],["bool"]]],[11,"ne","","",3,[[["withcomments"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["comment"]],["bool"]]],[11,"ne","","",4,[[["self"],["comment"]],["bool"]]],[11,"eq","","",27,[[["ast"],["self"]],["bool"]]],[11,"ne","","",27,[[["ast"],["self"]],["bool"]]],[11,"eq","","",5,[[["alternation"],["self"]],["bool"]]],[11,"ne","","",5,[[["alternation"],["self"]],["bool"]]],[11,"eq","","",6,[[["self"],["concat"]],["bool"]]],[11,"ne","","",6,[[["self"],["concat"]],["bool"]]],[11,"eq","","",7,[[["literal"],["self"]],["bool"]]],[11,"ne","","",7,[[["literal"],["self"]],["bool"]]],[11,"eq","","",28,[[["self"],["literalkind"]],["bool"]]],[11,"ne","","",28,[[["self"],["literalkind"]],["bool"]]],[11,"eq","","",29,[[["self"],["specialliteralkind"]],["bool"]]],[11,"eq","","",30,[[["hexliteralkind"],["self"]],["bool"]]],[11,"eq","","",31,[[["class"],["self"]],["bool"]]],[11,"ne","","",31,[[["class"],["self"]],["bool"]]],[11,"eq","","",8,[[["self"],["classperl"]],["bool"]]],[11,"ne","","",8,[[["self"],["classperl"]],["bool"]]],[11,"eq","","",32,[[["self"],["classperlkind"]],["bool"]]],[11,"eq","","",9,[[["self"],["classascii"]],["bool"]]],[11,"ne","","",9,[[["self"],["classascii"]],["bool"]]],[11,"eq","","",33,[[["self"],["classasciikind"]],["bool"]]],[11,"eq","","",10,[[["self"],["classunicode"]],["bool"]]],[11,"ne","","",10,[[["self"],["classunicode"]],["bool"]]],[11,"eq","","",34,[[["classunicodekind"],["self"]],["bool"]]],[11,"ne","","",34,[[["classunicodekind"],["self"]],["bool"]]],[11,"eq","","",36,[[["self"],["classunicodeopkind"]],["bool"]]],[11,"eq","","",11,[[["classbracketed"],["self"]],["bool"]]],[11,"ne","","",11,[[["classbracketed"],["self"]],["bool"]]],[11,"eq","","",37,[[["self"],["classset"]],["bool"]]],[11,"ne","","",37,[[["self"],["classset"]],["bool"]]],[11,"eq","","",38,[[["self"],["classsetitem"]],["bool"]]],[11,"ne","","",38,[[["self"],["classsetitem"]],["bool"]]],[11,"eq","","",12,[[["classsetrange"],["self"]],["bool"]]],[11,"ne","","",12,[[["classsetrange"],["self"]],["bool"]]],[11,"eq","","",13,[[["classsetunion"],["self"]],["bool"]]],[11,"ne","","",13,[[["classsetunion"],["self"]],["bool"]]],[11,"eq","","",14,[[["classsetbinaryop"],["self"]],["bool"]]],[11,"ne","","",14,[[["classsetbinaryop"],["self"]],["bool"]]],[11,"eq","","",39,[[["self"],["classsetbinaryopkind"]],["bool"]]],[11,"eq","","",15,[[["assertion"],["self"]],["bool"]]],[11,"ne","","",15,[[["assertion"],["self"]],["bool"]]],[11,"eq","","",40,[[["assertionkind"],["self"]],["bool"]]],[11,"eq","","",16,[[["repetition"],["self"]],["bool"]]],[11,"ne","","",16,[[["repetition"],["self"]],["bool"]]],[11,"eq","","",17,[[["repetitionop"],["self"]],["bool"]]],[11,"ne","","",17,[[["repetitionop"],["self"]],["bool"]]],[11,"eq","","",41,[[["repetitionkind"],["self"]],["bool"]]],[11,"ne","","",41,[[["repetitionkind"],["self"]],["bool"]]],[11,"eq","","",42,[[["repetitionrange"],["self"]],["bool"]]],[11,"ne","","",42,[[["repetitionrange"],["self"]],["bool"]]],[11,"eq","","",18,[[["group"],["self"]],["bool"]]],[11,"ne","","",18,[[["group"],["self"]],["bool"]]],[11,"eq","","",43,[[["self"],["groupkind"]],["bool"]]],[11,"ne","","",43,[[["self"],["groupkind"]],["bool"]]],[11,"eq","","",19,[[["self"],["capturename"]],["bool"]]],[11,"ne","","",19,[[["self"],["capturename"]],["bool"]]],[11,"eq","","",20,[[["self"],["setflags"]],["bool"]]],[11,"ne","","",20,[[["self"],["setflags"]],["bool"]]],[11,"eq","","",21,[[["flags"],["self"]],["bool"]]],[11,"ne","","",21,[[["flags"],["self"]],["bool"]]],[11,"eq","","",22,[[["flagsitem"],["self"]],["bool"]]],[11,"ne","","",22,[[["flagsitem"],["self"]],["bool"]]],[11,"eq","","",44,[[["self"],["flagsitemkind"]],["bool"]]],[11,"ne","","",44,[[["self"],["flagsitemkind"]],["bool"]]],[11,"eq","","",45,[[["self"],["flag"]],["bool"]]],[11,"eq","regex_syntax","",0,[[["error"],["self"]],["bool"]]],[11,"ne","","",0,[[["error"],["self"]],["bool"]]],[11,"eq","regex_syntax::hir::literal","",63,[[["literals"],["self"]],["bool"]]],[11,"ne","","",63,[[["literals"],["self"]],["bool"]]],[11,"eq","","",64,[[["literal"],["self"]],["bool"]]],[11,"eq","regex_syntax::hir","",69,[[["error"],["self"]],["bool"]]],[11,"ne","","",69,[[["error"],["self"]],["bool"]]],[11,"eq","","",53,[[["errorkind"],["self"]],["bool"]]],[11,"eq","","",70,[[["self"],["hir"]],["bool"]]],[11,"ne","","",70,[[["self"],["hir"]],["bool"]]],[11,"eq","","",54,[[["hirkind"],["self"]],["bool"]]],[11,"ne","","",54,[[["hirkind"],["self"]],["bool"]]],[11,"eq","","",55,[[["self"],["literal"]],["bool"]]],[11,"ne","","",55,[[["self"],["literal"]],["bool"]]],[11,"eq","","",56,[[["class"],["self"]],["bool"]]],[11,"ne","","",56,[[["class"],["self"]],["bool"]]],[11,"eq","","",71,[[["classunicode"],["self"]],["bool"]]],[11,"ne","","",71,[[["classunicode"],["self"]],["bool"]]],[11,"eq","","",72,[[["classunicoderange"],["self"]],["bool"]]],[11,"ne","","",72,[[["classunicoderange"],["self"]],["bool"]]],[11,"eq","","",73,[[["self"],["classbytes"]],["bool"]]],[11,"ne","","",73,[[["self"],["classbytes"]],["bool"]]],[11,"eq","","",74,[[["self"],["classbytesrange"]],["bool"]]],[11,"ne","","",74,[[["self"],["classbytesrange"]],["bool"]]],[11,"eq","","",57,[[["anchor"],["self"]],["bool"]]],[11,"eq","","",58,[[["self"],["wordboundary"]],["bool"]]],[11,"eq","","",51,[[["group"],["self"]],["bool"]]],[11,"ne","","",51,[[["group"],["self"]],["bool"]]],[11,"eq","","",59,[[["groupkind"],["self"]],["bool"]]],[11,"ne","","",59,[[["groupkind"],["self"]],["bool"]]],[11,"eq","","",52,[[["self"],["repetition"]],["bool"]]],[11,"ne","","",52,[[["self"],["repetition"]],["bool"]]],[11,"eq","","",61,[[["repetitionkind"],["self"]],["bool"]]],[11,"ne","","",61,[[["repetitionkind"],["self"]],["bool"]]],[11,"eq","","",62,[[["self"],["repetitionrange"]],["bool"]]],[11,"ne","","",62,[[["self"],["repetitionrange"]],["bool"]]],[11,"eq","regex_syntax::utf8","",78,[[["utf8sequence"],["self"]],["bool"]]],[11,"ne","","",78,[[["utf8sequence"],["self"]],["bool"]]],[11,"eq","","",77,[[["self"],["utf8range"]],["bool"]]],[11,"ne","","",77,[[["self"],["utf8range"]],["bool"]]],[11,"partial_cmp","regex_syntax::ast","",1,[[["span"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",2,[[["self"],["position"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","regex_syntax::hir::literal","",64,[[["literal"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","regex_syntax::hir","",72,[[["classunicoderange"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",72,[[["classunicoderange"],["self"]],["bool"]]],[11,"le","","",72,[[["classunicoderange"],["self"]],["bool"]]],[11,"gt","","",72,[[["classunicoderange"],["self"]],["bool"]]],[11,"ge","","",72,[[["classunicoderange"],["self"]],["bool"]]],[11,"partial_cmp","","",74,[[["self"],["classbytesrange"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",74,[[["self"],["classbytesrange"]],["bool"]]],[11,"le","","",74,[[["self"],["classbytesrange"]],["bool"]]],[11,"gt","","",74,[[["self"],["classbytesrange"]],["bool"]]],[11,"ge","","",74,[[["self"],["classbytesrange"]],["bool"]]],[11,"partial_cmp","regex_syntax::utf8","",78,[[["utf8sequence"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",78,[[["utf8sequence"],["self"]],["bool"]]],[11,"le","","",78,[[["utf8sequence"],["self"]],["bool"]]],[11,"gt","","",78,[[["utf8sequence"],["self"]],["bool"]]],[11,"ge","","",78,[[["utf8sequence"],["self"]],["bool"]]],[11,"partial_cmp","","",77,[[["self"],["utf8range"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",77,[[["self"],["utf8range"]],["bool"]]],[11,"le","","",77,[[["self"],["utf8range"]],["bool"]]],[11,"gt","","",77,[[["self"],["utf8range"]],["bool"]]],[11,"ge","","",77,[[["self"],["utf8range"]],["bool"]]],[11,"deref","regex_syntax::hir::literal","",64,[[["self"]],["vec"]]],[11,"deref_mut","","",64,[[["self"]],["vec"]]],[11,"fmt","regex_syntax::ast::parse","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::ast::print","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::ast","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir::literal","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir::print","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir::translate","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::utf8","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::ast","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax","",80,[[["formatter"],["self"]],["result"]]],[11,"description","regex_syntax::ast","",50,[[["self"]],["str"]]],[11,"description","regex_syntax","",0,[[["self"]],["str"]]],[11,"description","regex_syntax::hir","",69,[[["self"]],["str"]]],[11,"start","regex_syntax::ast","This method is called before beginning traversal of the AST.",49,[[["self"]]]],[11,"visit_pre","","This method is called on an `Ast` before descending into…",49,[[["ast"],["self"]],["result"]]],[11,"visit_post","","This method is called on an `Ast` after descending all of…",49,[[["ast"],["self"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an…",49,[[["self"]],["result"]]],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before…",49,[[["self"],["classsetitem"]],["result"]]],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after…",49,[[["self"],["classsetitem"]],["result"]]],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before…",49,[[["classsetbinaryop"],["self"]],["result"]]],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after…",49,[[["classsetbinaryop"],["self"]],["result"]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand…",49,[[["classsetbinaryop"],["self"]],["result"]]],[11,"start","regex_syntax::hir","This method is called before beginning traversal of the HIR.",68,[[["self"]]]],[11,"visit_pre","","This method is called on an `Hir` before descending into…",68,[[["self"],["hir"]],["result"]]],[11,"visit_post","","This method is called on an `Hir` after descending all of…",68,[[["self"],["hir"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",68,[[["self"]],["result"]]]],"p":[[4,"Error"],[3,"Span"],[3,"Position"],[3,"WithComments"],[3,"Comment"],[3,"Alternation"],[3,"Concat"],[3,"Literal"],[3,"ClassPerl"],[3,"ClassAscii"],[3,"ClassUnicode"],[3,"ClassBracketed"],[3,"ClassSetRange"],[3,"ClassSetUnion"],[3,"ClassSetBinaryOp"],[3,"Assertion"],[3,"Repetition"],[3,"RepetitionOp"],[3,"Group"],[3,"CaptureName"],[3,"SetFlags"],[3,"Flags"],[3,"FlagsItem"],[4,"ErrorKind"],[13,"FlagDuplicate"],[13,"FlagRepeatedNegation"],[13,"GroupNameDuplicate"],[4,"Ast"],[4,"LiteralKind"],[4,"SpecialLiteralKind"],[4,"HexLiteralKind"],[4,"Class"],[4,"ClassPerlKind"],[4,"ClassAsciiKind"],[4,"ClassUnicodeKind"],[13,"NamedValue"],[4,"ClassUnicodeOpKind"],[4,"ClassSet"],[4,"ClassSetItem"],[4,"ClassSetBinaryOpKind"],[4,"AssertionKind"],[4,"RepetitionKind"],[4,"RepetitionRange"],[4,"GroupKind"],[4,"FlagsItemKind"],[4,"Flag"],[3,"ParserBuilder"],[3,"Parser"],[3,"Printer"],[8,"Visitor"],[3,"Error"],[3,"Group"],[3,"Repetition"],[4,"ErrorKind"],[4,"HirKind"],[4,"Literal"],[4,"Class"],[4,"Anchor"],[4,"WordBoundary"],[4,"GroupKind"],[13,"CaptureName"],[4,"RepetitionKind"],[4,"RepetitionRange"],[3,"Literals"],[3,"Literal"],[3,"Printer"],[3,"TranslatorBuilder"],[3,"Translator"],[8,"Visitor"],[3,"Error"],[3,"Hir"],[3,"ClassUnicode"],[3,"ClassUnicodeRange"],[3,"ClassBytes"],[3,"ClassBytesRange"],[3,"ParserBuilder"],[3,"Parser"],[3,"Utf8Range"],[4,"Utf8Sequence"],[3,"Utf8Sequences"],[3,"UnicodeWordError"],[3,"CaseFoldError"],[3,"ClassUnicodeIter"],[3,"ClassBytesIter"]]};
searchIndex["rustversion"] = {"doc":"This crate provides macros for conditional compilation…","i":[[23,"stable","rustversion","",null,null],[23,"beta","","",null,null],[23,"nightly","","",null,null],[23,"since","","",null,null],[23,"before","","",null,null],[23,"not","","",null,null],[23,"any","","",null,null],[23,"all","","",null,null],[23,"attr","","",null,null]],"p":[]};
searchIndex["serde"] = {"doc":"Serde","i":[[0,"de","serde","Generic data structure deserialization framework.",null,null],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",null,null],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any…",null,null],[13,"Bool","","The input contained a boolean value that was not expected.",0,null],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32`…",0,null],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or…",0,null],[13,"Float","","The input contained a floating point `f32` or `f64` that…",0,null],[13,"Char","","The input contained a `char` that was not expected.",0,null],[13,"Str","","The input contained a `&str` or `String` that was not…",0,null],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not…",0,null],[13,"Unit","","The input contained a unit `()` that was not expected.",0,null],[13,"Option","","The input contained an `Option<T>` that was not expected.",0,null],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",0,null],[13,"Seq","","The input contained a sequence that was not expected.",0,null],[13,"Map","","The input contained a map that was not expected.",0,null],[13,"Enum","","The input contained an enum that was not expected.",0,null],[13,"UnitVariant","","The input contained a unit variant that was not expected.",0,null],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",0,null],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",0,null],[13,"StructVariant","","The input contained a struct variant that was not expected.",0,null],[13,"Other","","A message stating what uncategorized thing the input…",0,null],[0,"value","","Building blocks for deserializing basic values using the…",null,null],[3,"Error","serde::de::value","A minimal representation of all possible errors that can…",null,null],[3,"UnitDeserializer","","A deserializer holding a `()`.",null,null],[3,"BoolDeserializer","","A deserializer holding a `bool`.",null,null],[3,"I8Deserializer","","A deserializer holding an `i8`.",null,null],[3,"I16Deserializer","","A deserializer holding an `i16`.",null,null],[3,"I32Deserializer","","A deserializer holding an `i32`.",null,null],[3,"I64Deserializer","","A deserializer holding an `i64`.",null,null],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",null,null],[3,"U8Deserializer","","A deserializer holding a `u8`.",null,null],[3,"U16Deserializer","","A deserializer holding a `u16`.",null,null],[3,"U64Deserializer","","A deserializer holding a `u64`.",null,null],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",null,null],[3,"F32Deserializer","","A deserializer holding an `f32`.",null,null],[3,"F64Deserializer","","A deserializer holding an `f64`.",null,null],[3,"CharDeserializer","","A deserializer holding a `char`.",null,null],[3,"I128Deserializer","","A deserializer holding an `i128`.",null,null],[3,"U128Deserializer","","A deserializer holding a `u128`.",null,null],[3,"U32Deserializer","","A deserializer holding a `u32`.",null,null],[3,"StrDeserializer","","A deserializer holding a `&str`.",null,null],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to…",null,null],[3,"StringDeserializer","","A deserializer holding a `String`.",null,null],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",null,null],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to…",null,null],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",null,null],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",null,null],[3,"MapDeserializer","","A deserializer that iterates over a map.",null,null],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",null,null],[11,"new","","Create a new borrowed deserializer from the given string.",1,[[["str"]],["borrowedstrdeserializer"]]],[11,"new","","Create a new borrowed deserializer from the given byte…",2,[[],["borrowedbytesdeserializer"]]],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",3,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",3,[[],["result"]]],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",4,[[["a"]],["self"]]],[11,"new","","Construct a new `MapDeserializer<I, E>`.",5,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",5,[[],["result"]]],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",6,[[["a"]],["self"]]],[8,"Error","serde::de","The `Error` trait allows `Deserialize` implementations to…",null,null],[10,"custom","","Raised when there is general error when deserializing a…",7,[[["t"]],["self"]]],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from…",7,[[["expected"],["unexpected"]],["self"]]],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right…",7,[[["expected"],["unexpected"]],["self"]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input…",7,[[["expected"],["usize"]],["self"]]],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant…",7,[[["str"]],["self"]]],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field…",7,[[["str"]],["self"]]],[11,"missing_field","","Raised when a `Deserialize` struct type expected to…",7,[[["str"]],["self"]]],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than…",7,[[["str"]],["self"]]],[8,"Expected","","`Expected` represents an explanation of what data a…",null,null],[10,"fmt","","Format an explanation of what data was being expected.…",8,[[["formatter"],["self"]],["result"]]],[8,"Deserialize","","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"DeserializeOwned","","A data structure that can be deserialized without…",null,null],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the…",null,null],[16,"Value","","The type produced by using this seed.",10,null],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize`…",10,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",11,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Visitor","","This trait represents a visitor that walks through a…",null,null],[16,"Value","","The value produced by this visitor.",12,null],[10,"expecting","","Format a message stating what data this Visitor expects to…",12,[[["formatter"],["self"]],["result"]]],[11,"visit_bool","","The input contains a boolean.",12,[[["bool"]],["result"]]],[11,"visit_i8","","The input contains an `i8`.",12,[[["i8"]],["result"]]],[11,"visit_i16","","The input contains an `i16`.",12,[[["i16"]],["result"]]],[11,"visit_i32","","The input contains an `i32`.",12,[[["i32"]],["result"]]],[11,"visit_i64","","The input contains an `i64`.",12,[[["i64"]],["result"]]],[11,"visit_i128","","The input contains a `i128`.",12,[[["i128"]],["result"]]],[11,"visit_u8","","The input contains a `u8`.",12,[[["u8"]],["result"]]],[11,"visit_u16","","The input contains a `u16`.",12,[[["u16"]],["result"]]],[11,"visit_u32","","The input contains a `u32`.",12,[[["u32"]],["result"]]],[11,"visit_u64","","The input contains a `u64`.",12,[[["u64"]],["result"]]],[11,"visit_u128","","The input contains a `u128`.",12,[[["u128"]],["result"]]],[11,"visit_f32","","The input contains an `f32`.",12,[[["f32"]],["result"]]],[11,"visit_f64","","The input contains an `f64`.",12,[[["f64"]],["result"]]],[11,"visit_char","","The input contains a `char`.",12,[[["char"]],["result"]]],[11,"visit_str","","The input contains a string. The lifetime of the string is…",12,[[["str"]],["result"]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as…",12,[[["str"]],["result"]]],[11,"visit_string","","The input contains a string and ownership of the string is…",12,[[["string"]],["result"]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte…",12,[[],["result"]]],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as…",12,[[],["result"]]],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte…",12,[[["vec",["u8"]],["u8"]],["result"]]],[11,"visit_none","","The input contains an optional that is absent.",12,[[],["result"]]],[11,"visit_some","","The input contains an optional that is present.",12,[[["d"]],["result"]]],[11,"visit_unit","","The input contains a unit `()`.",12,[[],["result"]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",12,[[["d"]],["result"]]],[11,"visit_seq","","The input contains a sequence of elements.",12,[[["a"]],["result"]]],[11,"visit_map","","The input contains a key-value map.",12,[[["a"]],["result"]]],[11,"visit_enum","","The input contains an enum.",12,[[["a"]],["result"]]],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",13,null],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"],["t"]],[["result",["option"]],["option"]]]],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"]],[["option"],["result",["option"]]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence,…",13,[[["self"]],[["option",["usize"]],["usize"]]]],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",14,null],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"],["k"]],[["result",["option"]],["option"]]]],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"],["v"]],["result"]]],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"],["k"],["v"]],[["result",["option"]],["option"]]]],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"]],[["result",["option"]],["option"]]]],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"]],["result"]]],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"]],[["option"],["result",["option"]]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if…",14,[[["self"]],[["option",["usize"]],["usize"]]]],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",15,null],[16,"Variant","","The `Visitor` that will be used to deserialize the content…",15,null],[10,"variant_seed","","`variant` is called to identify which variant to…",15,[[["v"]],["result"]]],[11,"variant","","`variant` is called to identify which variant to…",15,[[],["result"]]],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",16,null],[10,"unit_variant","","Called when deserializing a variant with no values.",16,[[],["result"]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",16,[[["t"]],["result"]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",16,[[],["result"]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",16,[[["usize"],["v"]],["result"]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",16,[[["v"]],["result"]]],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from…",null,null],[16,"Deserializer","","The type of the deserializer being converted into.",17,null],[10,"into_deserializer","","Convert this value into a deserializer.",17,[[]]],[0,"ser","serde","Generic data structure serialization framework.",null,null],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not…",null,null],[8,"Error","","Trait used by `Serialize` implementations to generically…",null,null],[10,"custom","","Used when a [`Serialize`] implementation encounters any…",18,[[["t"]],["self"]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["s"],["self"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",20,null],[16,"Error","","The error type when some error occurs during serialization.",20,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,null],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result"]]],[10,"serialize_none","","Serialize a [`None`] value.",20,[[],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["str"],["u32"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["str"],["u32"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["option",["usize"]],["usize"]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["option",["usize"]],["usize"]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",21,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",21,null],[10,"serialize_element","","Serialize a sequence element.",21,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a sequence.",21,[[],["result"]]],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",22,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",22,null],[10,"serialize_element","","Serialize a tuple element.",22,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple.",22,[[],["result"]]],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",23,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",23,null],[10,"serialize_field","","Serialize a tuple struct field.",23,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple struct.",23,[[],["result"]]],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",24,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",24,null],[10,"serialize_field","","Serialize a tuple variant field.",24,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple variant.",24,[[],["result"]]],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",25,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",25,null],[10,"serialize_key","","Serialize a map key.",25,[[["self"],["t"]],["result"]]],[10,"serialize_value","","Serialize a map value.",25,[[["self"],["t"]],["result"]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",25,[[["k"],["self"],["v"]],["result"]]],[10,"end","","Finish serializing a map.",25,[[],["result"]]],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",26,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",26,null],[10,"serialize_field","","Serialize a struct field.",26,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct field has been skipped.",26,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct.",26,[[],["result"]]],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",27,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",27,null],[10,"serialize_field","","Serialize a struct variant field.",27,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",27,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct variant.",27,[[],["result"]]],[8,"Deserialize","serde","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",11,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["s"],["self"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",20,null],[16,"Error","","The error type when some error occurs during serialization.",20,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,null],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result"]]],[10,"serialize_none","","Serialize a [`None`] value.",20,[[],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["str"],["u32"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["str"],["u32"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["option",["usize"]],["usize"]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["option",["usize"]],["usize"]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of…",null,null],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is…",null,null],[11,"fmt","serde::de","",28,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","serde::de::value","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","serde::ser","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"deserialize","serde::de","",28,[[["d"]],[["result",["ignoredany"]],["ignoredany"]]]],[11,"deserialize_bool","serde::de::value","",30,[[["v"]],["result"]]],[11,"deserialize_i8","","",30,[[["v"]],["result"]]],[11,"deserialize_i16","","",30,[[["v"]],["result"]]],[11,"deserialize_i32","","",30,[[["v"]],["result"]]],[11,"deserialize_i64","","",30,[[["v"]],["result"]]],[11,"deserialize_i128","","",30,[[["v"]],["result"]]],[11,"deserialize_u8","","",30,[[["v"]],["result"]]],[11,"deserialize_u16","","",30,[[["v"]],["result"]]],[11,"deserialize_u32","","",30,[[["v"]],["result"]]],[11,"deserialize_u64","","",30,[[["v"]],["result"]]],[11,"deserialize_u128","","",30,[[["v"]],["result"]]],[11,"deserialize_f32","","",30,[[["v"]],["result"]]],[11,"deserialize_f64","","",30,[[["v"]],["result"]]],[11,"deserialize_char","","",30,[[["v"]],["result"]]],[11,"deserialize_str","","",30,[[["v"]],["result"]]],[11,"deserialize_string","","",30,[[["v"]],["result"]]],[11,"deserialize_bytes","","",30,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",30,[[["v"]],["result"]]],[11,"deserialize_unit","","",30,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",30,[[["v"]],["result"]]],[11,"deserialize_tuple","","",30,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",30,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",30,[[["v"]],["result"]]],[11,"deserialize_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",30,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",30,[[["v"]],["result"]]],[11,"deserialize_any","","",30,[[["v"]],["result"]]],[11,"deserialize_option","","",30,[[["v"]],["result"]]],[11,"deserialize_bool","","",31,[[["v"]],["result"]]],[11,"deserialize_i8","","",31,[[["v"]],["result"]]],[11,"deserialize_i16","","",31,[[["v"]],["result"]]],[11,"deserialize_i32","","",31,[[["v"]],["result"]]],[11,"deserialize_i64","","",31,[[["v"]],["result"]]],[11,"deserialize_i128","","",31,[[["v"]],["result"]]],[11,"deserialize_u8","","",31,[[["v"]],["result"]]],[11,"deserialize_u16","","",31,[[["v"]],["result"]]],[11,"deserialize_u32","","",31,[[["v"]],["result"]]],[11,"deserialize_u64","","",31,[[["v"]],["result"]]],[11,"deserialize_u128","","",31,[[["v"]],["result"]]],[11,"deserialize_f32","","",31,[[["v"]],["result"]]],[11,"deserialize_f64","","",31,[[["v"]],["result"]]],[11,"deserialize_char","","",31,[[["v"]],["result"]]],[11,"deserialize_str","","",31,[[["v"]],["result"]]],[11,"deserialize_string","","",31,[[["v"]],["result"]]],[11,"deserialize_bytes","","",31,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",31,[[["v"]],["result"]]],[11,"deserialize_option","","",31,[[["v"]],["result"]]],[11,"deserialize_unit","","",31,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",31,[[["v"]],["result"]]],[11,"deserialize_tuple","","",31,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",31,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",31,[[["v"]],["result"]]],[11,"deserialize_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",31,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",31,[[["v"]],["result"]]],[11,"deserialize_any","","",31,[[["v"]],["result"]]],[11,"deserialize_bool","","",32,[[["v"]],["result"]]],[11,"deserialize_i8","","",32,[[["v"]],["result"]]],[11,"deserialize_i16","","",32,[[["v"]],["result"]]],[11,"deserialize_i32","","",32,[[["v"]],["result"]]],[11,"deserialize_i64","","",32,[[["v"]],["result"]]],[11,"deserialize_i128","","",32,[[["v"]],["result"]]],[11,"deserialize_u8","","",32,[[["v"]],["result"]]],[11,"deserialize_u16","","",32,[[["v"]],["result"]]],[11,"deserialize_u32","","",32,[[["v"]],["result"]]],[11,"deserialize_u64","","",32,[[["v"]],["result"]]],[11,"deserialize_u128","","",32,[[["v"]],["result"]]],[11,"deserialize_f32","","",32,[[["v"]],["result"]]],[11,"deserialize_f64","","",32,[[["v"]],["result"]]],[11,"deserialize_char","","",32,[[["v"]],["result"]]],[11,"deserialize_str","","",32,[[["v"]],["result"]]],[11,"deserialize_string","","",32,[[["v"]],["result"]]],[11,"deserialize_bytes","","",32,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",32,[[["v"]],["result"]]],[11,"deserialize_option","","",32,[[["v"]],["result"]]],[11,"deserialize_unit","","",32,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",32,[[["v"]],["result"]]],[11,"deserialize_tuple","","",32,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",32,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",32,[[["v"]],["result"]]],[11,"deserialize_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",32,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",32,[[["v"]],["result"]]],[11,"deserialize_any","","",32,[[["v"]],["result"]]],[11,"deserialize_bool","","",33,[[["v"]],["result"]]],[11,"deserialize_i8","","",33,[[["v"]],["result"]]],[11,"deserialize_i16","","",33,[[["v"]],["result"]]],[11,"deserialize_i32","","",33,[[["v"]],["result"]]],[11,"deserialize_i64","","",33,[[["v"]],["result"]]],[11,"deserialize_i128","","",33,[[["v"]],["result"]]],[11,"deserialize_u8","","",33,[[["v"]],["result"]]],[11,"deserialize_u16","","",33,[[["v"]],["result"]]],[11,"deserialize_u32","","",33,[[["v"]],["result"]]],[11,"deserialize_u64","","",33,[[["v"]],["result"]]],[11,"deserialize_u128","","",33,[[["v"]],["result"]]],[11,"deserialize_f32","","",33,[[["v"]],["result"]]],[11,"deserialize_f64","","",33,[[["v"]],["result"]]],[11,"deserialize_char","","",33,[[["v"]],["result"]]],[11,"deserialize_str","","",33,[[["v"]],["result"]]],[11,"deserialize_string","","",33,[[["v"]],["result"]]],[11,"deserialize_bytes","","",33,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",33,[[["v"]],["result"]]],[11,"deserialize_option","","",33,[[["v"]],["result"]]],[11,"deserialize_unit","","",33,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",33,[[["v"]],["result"]]],[11,"deserialize_tuple","","",33,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",33,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",33,[[["v"]],["result"]]],[11,"deserialize_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",33,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",33,[[["v"]],["result"]]],[11,"deserialize_any","","",33,[[["v"]],["result"]]],[11,"deserialize_bool","","",34,[[["v"]],["result"]]],[11,"deserialize_i8","","",34,[[["v"]],["result"]]],[11,"deserialize_i16","","",34,[[["v"]],["result"]]],[11,"deserialize_i32","","",34,[[["v"]],["result"]]],[11,"deserialize_i64","","",34,[[["v"]],["result"]]],[11,"deserialize_i128","","",34,[[["v"]],["result"]]],[11,"deserialize_u8","","",34,[[["v"]],["result"]]],[11,"deserialize_u16","","",34,[[["v"]],["result"]]],[11,"deserialize_u32","","",34,[[["v"]],["result"]]],[11,"deserialize_u64","","",34,[[["v"]],["result"]]],[11,"deserialize_u128","","",34,[[["v"]],["result"]]],[11,"deserialize_f32","","",34,[[["v"]],["result"]]],[11,"deserialize_f64","","",34,[[["v"]],["result"]]],[11,"deserialize_char","","",34,[[["v"]],["result"]]],[11,"deserialize_str","","",34,[[["v"]],["result"]]],[11,"deserialize_string","","",34,[[["v"]],["result"]]],[11,"deserialize_bytes","","",34,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",34,[[["v"]],["result"]]],[11,"deserialize_option","","",34,[[["v"]],["result"]]],[11,"deserialize_unit","","",34,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",34,[[["v"]],["result"]]],[11,"deserialize_tuple","","",34,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",34,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",34,[[["v"]],["result"]]],[11,"deserialize_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",34,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",34,[[["v"]],["result"]]],[11,"deserialize_any","","",34,[[["v"]],["result"]]],[11,"deserialize_bool","","",35,[[["v"]],["result"]]],[11,"deserialize_i8","","",35,[[["v"]],["result"]]],[11,"deserialize_i16","","",35,[[["v"]],["result"]]],[11,"deserialize_i32","","",35,[[["v"]],["result"]]],[11,"deserialize_i64","","",35,[[["v"]],["result"]]],[11,"deserialize_i128","","",35,[[["v"]],["result"]]],[11,"deserialize_u8","","",35,[[["v"]],["result"]]],[11,"deserialize_u16","","",35,[[["v"]],["result"]]],[11,"deserialize_u32","","",35,[[["v"]],["result"]]],[11,"deserialize_u64","","",35,[[["v"]],["result"]]],[11,"deserialize_u128","","",35,[[["v"]],["result"]]],[11,"deserialize_f32","","",35,[[["v"]],["result"]]],[11,"deserialize_f64","","",35,[[["v"]],["result"]]],[11,"deserialize_char","","",35,[[["v"]],["result"]]],[11,"deserialize_str","","",35,[[["v"]],["result"]]],[11,"deserialize_string","","",35,[[["v"]],["result"]]],[11,"deserialize_bytes","","",35,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",35,[[["v"]],["result"]]],[11,"deserialize_option","","",35,[[["v"]],["result"]]],[11,"deserialize_unit","","",35,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",35,[[["v"]],["result"]]],[11,"deserialize_tuple","","",35,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",35,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",35,[[["v"]],["result"]]],[11,"deserialize_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",35,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",35,[[["v"]],["result"]]],[11,"deserialize_any","","",35,[[["v"]],["result"]]],[11,"deserialize_bool","","",36,[[["v"]],["result"]]],[11,"deserialize_i8","","",36,[[["v"]],["result"]]],[11,"deserialize_i16","","",36,[[["v"]],["result"]]],[11,"deserialize_i32","","",36,[[["v"]],["result"]]],[11,"deserialize_i64","","",36,[[["v"]],["result"]]],[11,"deserialize_i128","","",36,[[["v"]],["result"]]],[11,"deserialize_u8","","",36,[[["v"]],["result"]]],[11,"deserialize_u16","","",36,[[["v"]],["result"]]],[11,"deserialize_u32","","",36,[[["v"]],["result"]]],[11,"deserialize_u64","","",36,[[["v"]],["result"]]],[11,"deserialize_u128","","",36,[[["v"]],["result"]]],[11,"deserialize_f32","","",36,[[["v"]],["result"]]],[11,"deserialize_f64","","",36,[[["v"]],["result"]]],[11,"deserialize_char","","",36,[[["v"]],["result"]]],[11,"deserialize_str","","",36,[[["v"]],["result"]]],[11,"deserialize_string","","",36,[[["v"]],["result"]]],[11,"deserialize_bytes","","",36,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",36,[[["v"]],["result"]]],[11,"deserialize_option","","",36,[[["v"]],["result"]]],[11,"deserialize_unit","","",36,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",36,[[["v"]],["result"]]],[11,"deserialize_tuple","","",36,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",36,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",36,[[["v"]],["result"]]],[11,"deserialize_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",36,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",36,[[["v"]],["result"]]],[11,"deserialize_any","","",36,[[["v"]],["result"]]],[11,"deserialize_bool","","",37,[[["v"]],["result"]]],[11,"deserialize_i8","","",37,[[["v"]],["result"]]],[11,"deserialize_i16","","",37,[[["v"]],["result"]]],[11,"deserialize_i32","","",37,[[["v"]],["result"]]],[11,"deserialize_i64","","",37,[[["v"]],["result"]]],[11,"deserialize_i128","","",37,[[["v"]],["result"]]],[11,"deserialize_u8","","",37,[[["v"]],["result"]]],[11,"deserialize_u16","","",37,[[["v"]],["result"]]],[11,"deserialize_u32","","",37,[[["v"]],["result"]]],[11,"deserialize_u64","","",37,[[["v"]],["result"]]],[11,"deserialize_u128","","",37,[[["v"]],["result"]]],[11,"deserialize_f32","","",37,[[["v"]],["result"]]],[11,"deserialize_f64","","",37,[[["v"]],["result"]]],[11,"deserialize_char","","",37,[[["v"]],["result"]]],[11,"deserialize_str","","",37,[[["v"]],["result"]]],[11,"deserialize_string","","",37,[[["v"]],["result"]]],[11,"deserialize_bytes","","",37,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",37,[[["v"]],["result"]]],[11,"deserialize_option","","",37,[[["v"]],["result"]]],[11,"deserialize_unit","","",37,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",37,[[["v"]],["result"]]],[11,"deserialize_tuple","","",37,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",37,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",37,[[["v"]],["result"]]],[11,"deserialize_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",37,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",37,[[["v"]],["result"]]],[11,"deserialize_any","","",37,[[["v"]],["result"]]],[11,"deserialize_bool","","",38,[[["v"]],["result"]]],[11,"deserialize_i8","","",38,[[["v"]],["result"]]],[11,"deserialize_i16","","",38,[[["v"]],["result"]]],[11,"deserialize_i32","","",38,[[["v"]],["result"]]],[11,"deserialize_i64","","",38,[[["v"]],["result"]]],[11,"deserialize_i128","","",38,[[["v"]],["result"]]],[11,"deserialize_u8","","",38,[[["v"]],["result"]]],[11,"deserialize_u16","","",38,[[["v"]],["result"]]],[11,"deserialize_u32","","",38,[[["v"]],["result"]]],[11,"deserialize_u64","","",38,[[["v"]],["result"]]],[11,"deserialize_u128","","",38,[[["v"]],["result"]]],[11,"deserialize_f32","","",38,[[["v"]],["result"]]],[11,"deserialize_f64","","",38,[[["v"]],["result"]]],[11,"deserialize_char","","",38,[[["v"]],["result"]]],[11,"deserialize_str","","",38,[[["v"]],["result"]]],[11,"deserialize_string","","",38,[[["v"]],["result"]]],[11,"deserialize_bytes","","",38,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",38,[[["v"]],["result"]]],[11,"deserialize_option","","",38,[[["v"]],["result"]]],[11,"deserialize_unit","","",38,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",38,[[["v"]],["result"]]],[11,"deserialize_tuple","","",38,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",38,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",38,[[["v"]],["result"]]],[11,"deserialize_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",38,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",38,[[["v"]],["result"]]],[11,"deserialize_any","","",38,[[["v"]],["result"]]],[11,"deserialize_bool","","",39,[[["v"]],["result"]]],[11,"deserialize_i8","","",39,[[["v"]],["result"]]],[11,"deserialize_i16","","",39,[[["v"]],["result"]]],[11,"deserialize_i32","","",39,[[["v"]],["result"]]],[11,"deserialize_i64","","",39,[[["v"]],["result"]]],[11,"deserialize_i128","","",39,[[["v"]],["result"]]],[11,"deserialize_u8","","",39,[[["v"]],["result"]]],[11,"deserialize_u16","","",39,[[["v"]],["result"]]],[11,"deserialize_u32","","",39,[[["v"]],["result"]]],[11,"deserialize_u64","","",39,[[["v"]],["result"]]],[11,"deserialize_u128","","",39,[[["v"]],["result"]]],[11,"deserialize_f32","","",39,[[["v"]],["result"]]],[11,"deserialize_f64","","",39,[[["v"]],["result"]]],[11,"deserialize_char","","",39,[[["v"]],["result"]]],[11,"deserialize_str","","",39,[[["v"]],["result"]]],[11,"deserialize_string","","",39,[[["v"]],["result"]]],[11,"deserialize_bytes","","",39,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",39,[[["v"]],["result"]]],[11,"deserialize_option","","",39,[[["v"]],["result"]]],[11,"deserialize_unit","","",39,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",39,[[["v"]],["result"]]],[11,"deserialize_tuple","","",39,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",39,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",39,[[["v"]],["result"]]],[11,"deserialize_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",39,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",39,[[["v"]],["result"]]],[11,"deserialize_any","","",39,[[["v"]],["result"]]],[11,"deserialize_bool","","",40,[[["v"]],["result"]]],[11,"deserialize_i8","","",40,[[["v"]],["result"]]],[11,"deserialize_i16","","",40,[[["v"]],["result"]]],[11,"deserialize_i32","","",40,[[["v"]],["result"]]],[11,"deserialize_i64","","",40,[[["v"]],["result"]]],[11,"deserialize_i128","","",40,[[["v"]],["result"]]],[11,"deserialize_u8","","",40,[[["v"]],["result"]]],[11,"deserialize_u16","","",40,[[["v"]],["result"]]],[11,"deserialize_u32","","",40,[[["v"]],["result"]]],[11,"deserialize_u64","","",40,[[["v"]],["result"]]],[11,"deserialize_u128","","",40,[[["v"]],["result"]]],[11,"deserialize_f32","","",40,[[["v"]],["result"]]],[11,"deserialize_f64","","",40,[[["v"]],["result"]]],[11,"deserialize_char","","",40,[[["v"]],["result"]]],[11,"deserialize_str","","",40,[[["v"]],["result"]]],[11,"deserialize_string","","",40,[[["v"]],["result"]]],[11,"deserialize_bytes","","",40,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",40,[[["v"]],["result"]]],[11,"deserialize_option","","",40,[[["v"]],["result"]]],[11,"deserialize_unit","","",40,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",40,[[["v"]],["result"]]],[11,"deserialize_tuple","","",40,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",40,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",40,[[["v"]],["result"]]],[11,"deserialize_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",40,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",40,[[["v"]],["result"]]],[11,"deserialize_any","","",40,[[["v"]],["result"]]],[11,"deserialize_bool","","",41,[[["v"]],["result"]]],[11,"deserialize_i8","","",41,[[["v"]],["result"]]],[11,"deserialize_i16","","",41,[[["v"]],["result"]]],[11,"deserialize_i32","","",41,[[["v"]],["result"]]],[11,"deserialize_i64","","",41,[[["v"]],["result"]]],[11,"deserialize_i128","","",41,[[["v"]],["result"]]],[11,"deserialize_u8","","",41,[[["v"]],["result"]]],[11,"deserialize_u16","","",41,[[["v"]],["result"]]],[11,"deserialize_u32","","",41,[[["v"]],["result"]]],[11,"deserialize_u64","","",41,[[["v"]],["result"]]],[11,"deserialize_u128","","",41,[[["v"]],["result"]]],[11,"deserialize_f32","","",41,[[["v"]],["result"]]],[11,"deserialize_f64","","",41,[[["v"]],["result"]]],[11,"deserialize_char","","",41,[[["v"]],["result"]]],[11,"deserialize_str","","",41,[[["v"]],["result"]]],[11,"deserialize_string","","",41,[[["v"]],["result"]]],[11,"deserialize_bytes","","",41,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",41,[[["v"]],["result"]]],[11,"deserialize_option","","",41,[[["v"]],["result"]]],[11,"deserialize_unit","","",41,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",41,[[["v"]],["result"]]],[11,"deserialize_tuple","","",41,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",41,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",41,[[["v"]],["result"]]],[11,"deserialize_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",41,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",41,[[["v"]],["result"]]],[11,"deserialize_any","","",41,[[["v"]],["result"]]],[11,"deserialize_bool","","",42,[[["v"]],["result"]]],[11,"deserialize_i8","","",42,[[["v"]],["result"]]],[11,"deserialize_i16","","",42,[[["v"]],["result"]]],[11,"deserialize_i32","","",42,[[["v"]],["result"]]],[11,"deserialize_i64","","",42,[[["v"]],["result"]]],[11,"deserialize_i128","","",42,[[["v"]],["result"]]],[11,"deserialize_u8","","",42,[[["v"]],["result"]]],[11,"deserialize_u16","","",42,[[["v"]],["result"]]],[11,"deserialize_u32","","",42,[[["v"]],["result"]]],[11,"deserialize_u64","","",42,[[["v"]],["result"]]],[11,"deserialize_u128","","",42,[[["v"]],["result"]]],[11,"deserialize_f32","","",42,[[["v"]],["result"]]],[11,"deserialize_f64","","",42,[[["v"]],["result"]]],[11,"deserialize_char","","",42,[[["v"]],["result"]]],[11,"deserialize_str","","",42,[[["v"]],["result"]]],[11,"deserialize_string","","",42,[[["v"]],["result"]]],[11,"deserialize_bytes","","",42,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",42,[[["v"]],["result"]]],[11,"deserialize_option","","",42,[[["v"]],["result"]]],[11,"deserialize_unit","","",42,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",42,[[["v"]],["result"]]],[11,"deserialize_tuple","","",42,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",42,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",42,[[["v"]],["result"]]],[11,"deserialize_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",42,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",42,[[["v"]],["result"]]],[11,"deserialize_any","","",42,[[["v"]],["result"]]],[11,"deserialize_bool","","",43,[[["v"]],["result"]]],[11,"deserialize_i8","","",43,[[["v"]],["result"]]],[11,"deserialize_i16","","",43,[[["v"]],["result"]]],[11,"deserialize_i32","","",43,[[["v"]],["result"]]],[11,"deserialize_i64","","",43,[[["v"]],["result"]]],[11,"deserialize_i128","","",43,[[["v"]],["result"]]],[11,"deserialize_u8","","",43,[[["v"]],["result"]]],[11,"deserialize_u16","","",43,[[["v"]],["result"]]],[11,"deserialize_u32","","",43,[[["v"]],["result"]]],[11,"deserialize_u64","","",43,[[["v"]],["result"]]],[11,"deserialize_u128","","",43,[[["v"]],["result"]]],[11,"deserialize_f32","","",43,[[["v"]],["result"]]],[11,"deserialize_f64","","",43,[[["v"]],["result"]]],[11,"deserialize_char","","",43,[[["v"]],["result"]]],[11,"deserialize_str","","",43,[[["v"]],["result"]]],[11,"deserialize_string","","",43,[[["v"]],["result"]]],[11,"deserialize_bytes","","",43,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",43,[[["v"]],["result"]]],[11,"deserialize_option","","",43,[[["v"]],["result"]]],[11,"deserialize_unit","","",43,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",43,[[["v"]],["result"]]],[11,"deserialize_tuple","","",43,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",43,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",43,[[["v"]],["result"]]],[11,"deserialize_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",43,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",43,[[["v"]],["result"]]],[11,"deserialize_any","","",43,[[["v"]],["result"]]],[11,"deserialize_bool","","",44,[[["v"]],["result"]]],[11,"deserialize_i8","","",44,[[["v"]],["result"]]],[11,"deserialize_i16","","",44,[[["v"]],["result"]]],[11,"deserialize_i32","","",44,[[["v"]],["result"]]],[11,"deserialize_i64","","",44,[[["v"]],["result"]]],[11,"deserialize_i128","","",44,[[["v"]],["result"]]],[11,"deserialize_u8","","",44,[[["v"]],["result"]]],[11,"deserialize_u16","","",44,[[["v"]],["result"]]],[11,"deserialize_u32","","",44,[[["v"]],["result"]]],[11,"deserialize_u64","","",44,[[["v"]],["result"]]],[11,"deserialize_u128","","",44,[[["v"]],["result"]]],[11,"deserialize_f32","","",44,[[["v"]],["result"]]],[11,"deserialize_f64","","",44,[[["v"]],["result"]]],[11,"deserialize_char","","",44,[[["v"]],["result"]]],[11,"deserialize_str","","",44,[[["v"]],["result"]]],[11,"deserialize_string","","",44,[[["v"]],["result"]]],[11,"deserialize_bytes","","",44,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",44,[[["v"]],["result"]]],[11,"deserialize_option","","",44,[[["v"]],["result"]]],[11,"deserialize_unit","","",44,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",44,[[["v"]],["result"]]],[11,"deserialize_tuple","","",44,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",44,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",44,[[["v"]],["result"]]],[11,"deserialize_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",44,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",44,[[["v"]],["result"]]],[11,"deserialize_any","","",44,[[["v"]],["result"]]],[11,"deserialize_bool","","",45,[[["v"]],["result"]]],[11,"deserialize_i8","","",45,[[["v"]],["result"]]],[11,"deserialize_i16","","",45,[[["v"]],["result"]]],[11,"deserialize_i32","","",45,[[["v"]],["result"]]],[11,"deserialize_i64","","",45,[[["v"]],["result"]]],[11,"deserialize_i128","","",45,[[["v"]],["result"]]],[11,"deserialize_u8","","",45,[[["v"]],["result"]]],[11,"deserialize_u16","","",45,[[["v"]],["result"]]],[11,"deserialize_u32","","",45,[[["v"]],["result"]]],[11,"deserialize_u64","","",45,[[["v"]],["result"]]],[11,"deserialize_u128","","",45,[[["v"]],["result"]]],[11,"deserialize_f32","","",45,[[["v"]],["result"]]],[11,"deserialize_f64","","",45,[[["v"]],["result"]]],[11,"deserialize_char","","",45,[[["v"]],["result"]]],[11,"deserialize_str","","",45,[[["v"]],["result"]]],[11,"deserialize_string","","",45,[[["v"]],["result"]]],[11,"deserialize_bytes","","",45,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",45,[[["v"]],["result"]]],[11,"deserialize_option","","",45,[[["v"]],["result"]]],[11,"deserialize_unit","","",45,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",45,[[["v"]],["result"]]],[11,"deserialize_tuple","","",45,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",45,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",45,[[["v"]],["result"]]],[11,"deserialize_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",45,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",45,[[["v"]],["result"]]],[11,"deserialize_any","","",45,[[["v"]],["result"]]],[11,"deserialize_bool","","",46,[[["v"]],["result"]]],[11,"deserialize_i8","","",46,[[["v"]],["result"]]],[11,"deserialize_i16","","",46,[[["v"]],["result"]]],[11,"deserialize_i32","","",46,[[["v"]],["result"]]],[11,"deserialize_i64","","",46,[[["v"]],["result"]]],[11,"deserialize_i128","","",46,[[["v"]],["result"]]],[11,"deserialize_u8","","",46,[[["v"]],["result"]]],[11,"deserialize_u16","","",46,[[["v"]],["result"]]],[11,"deserialize_u32","","",46,[[["v"]],["result"]]],[11,"deserialize_u64","","",46,[[["v"]],["result"]]],[11,"deserialize_u128","","",46,[[["v"]],["result"]]],[11,"deserialize_f32","","",46,[[["v"]],["result"]]],[11,"deserialize_f64","","",46,[[["v"]],["result"]]],[11,"deserialize_char","","",46,[[["v"]],["result"]]],[11,"deserialize_str","","",46,[[["v"]],["result"]]],[11,"deserialize_string","","",46,[[["v"]],["result"]]],[11,"deserialize_bytes","","",46,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",46,[[["v"]],["result"]]],[11,"deserialize_option","","",46,[[["v"]],["result"]]],[11,"deserialize_unit","","",46,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",46,[[["v"]],["result"]]],[11,"deserialize_tuple","","",46,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",46,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",46,[[["v"]],["result"]]],[11,"deserialize_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",46,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",46,[[["v"]],["result"]]],[11,"deserialize_any","","",46,[[["v"]],["result"]]],[11,"deserialize_enum","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_any","","",47,[[["v"]],["result"]]],[11,"deserialize_enum","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",47,[[["v"]],["result"]]],[11,"deserialize_i8","","",47,[[["v"]],["result"]]],[11,"deserialize_i16","","",47,[[["v"]],["result"]]],[11,"deserialize_i32","","",47,[[["v"]],["result"]]],[11,"deserialize_i64","","",47,[[["v"]],["result"]]],[11,"deserialize_i128","","",47,[[["v"]],["result"]]],[11,"deserialize_u8","","",47,[[["v"]],["result"]]],[11,"deserialize_u16","","",47,[[["v"]],["result"]]],[11,"deserialize_u32","","",47,[[["v"]],["result"]]],[11,"deserialize_u64","","",47,[[["v"]],["result"]]],[11,"deserialize_u128","","",47,[[["v"]],["result"]]],[11,"deserialize_f32","","",47,[[["v"]],["result"]]],[11,"deserialize_f64","","",47,[[["v"]],["result"]]],[11,"deserialize_char","","",47,[[["v"]],["result"]]],[11,"deserialize_str","","",47,[[["v"]],["result"]]],[11,"deserialize_string","","",47,[[["v"]],["result"]]],[11,"deserialize_bytes","","",47,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",47,[[["v"]],["result"]]],[11,"deserialize_option","","",47,[[["v"]],["result"]]],[11,"deserialize_unit","","",47,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",47,[[["v"]],["result"]]],[11,"deserialize_tuple","","",47,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",47,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",47,[[["v"]],["result"]]],[11,"deserialize_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",47,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",47,[[["v"]],["result"]]],[11,"deserialize_any","","",1,[[["v"]],["result"]]],[11,"deserialize_enum","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",1,[[["v"]],["result"]]],[11,"deserialize_i8","","",1,[[["v"]],["result"]]],[11,"deserialize_i16","","",1,[[["v"]],["result"]]],[11,"deserialize_i32","","",1,[[["v"]],["result"]]],[11,"deserialize_i64","","",1,[[["v"]],["result"]]],[11,"deserialize_i128","","",1,[[["v"]],["result"]]],[11,"deserialize_u8","","",1,[[["v"]],["result"]]],[11,"deserialize_u16","","",1,[[["v"]],["result"]]],[11,"deserialize_u32","","",1,[[["v"]],["result"]]],[11,"deserialize_u64","","",1,[[["v"]],["result"]]],[11,"deserialize_u128","","",1,[[["v"]],["result"]]],[11,"deserialize_f32","","",1,[[["v"]],["result"]]],[11,"deserialize_f64","","",1,[[["v"]],["result"]]],[11,"deserialize_char","","",1,[[["v"]],["result"]]],[11,"deserialize_str","","",1,[[["v"]],["result"]]],[11,"deserialize_string","","",1,[[["v"]],["result"]]],[11,"deserialize_bytes","","",1,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",1,[[["v"]],["result"]]],[11,"deserialize_option","","",1,[[["v"]],["result"]]],[11,"deserialize_unit","","",1,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",1,[[["v"]],["result"]]],[11,"deserialize_tuple","","",1,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",1,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",1,[[["v"]],["result"]]],[11,"deserialize_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",1,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",1,[[["v"]],["result"]]],[11,"deserialize_any","","",48,[[["v"]],["result"]]],[11,"deserialize_enum","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",48,[[["v"]],["result"]]],[11,"deserialize_i8","","",48,[[["v"]],["result"]]],[11,"deserialize_i16","","",48,[[["v"]],["result"]]],[11,"deserialize_i32","","",48,[[["v"]],["result"]]],[11,"deserialize_i64","","",48,[[["v"]],["result"]]],[11,"deserialize_i128","","",48,[[["v"]],["result"]]],[11,"deserialize_u8","","",48,[[["v"]],["result"]]],[11,"deserialize_u16","","",48,[[["v"]],["result"]]],[11,"deserialize_u32","","",48,[[["v"]],["result"]]],[11,"deserialize_u64","","",48,[[["v"]],["result"]]],[11,"deserialize_u128","","",48,[[["v"]],["result"]]],[11,"deserialize_f32","","",48,[[["v"]],["result"]]],[11,"deserialize_f64","","",48,[[["v"]],["result"]]],[11,"deserialize_char","","",48,[[["v"]],["result"]]],[11,"deserialize_str","","",48,[[["v"]],["result"]]],[11,"deserialize_string","","",48,[[["v"]],["result"]]],[11,"deserialize_bytes","","",48,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",48,[[["v"]],["result"]]],[11,"deserialize_option","","",48,[[["v"]],["result"]]],[11,"deserialize_unit","","",48,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",48,[[["v"]],["result"]]],[11,"deserialize_tuple","","",48,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",48,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",48,[[["v"]],["result"]]],[11,"deserialize_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",48,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",48,[[["v"]],["result"]]],[11,"deserialize_any","","",49,[[["v"]],["result"]]],[11,"deserialize_enum","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",49,[[["v"]],["result"]]],[11,"deserialize_i8","","",49,[[["v"]],["result"]]],[11,"deserialize_i16","","",49,[[["v"]],["result"]]],[11,"deserialize_i32","","",49,[[["v"]],["result"]]],[11,"deserialize_i64","","",49,[[["v"]],["result"]]],[11,"deserialize_i128","","",49,[[["v"]],["result"]]],[11,"deserialize_u8","","",49,[[["v"]],["result"]]],[11,"deserialize_u16","","",49,[[["v"]],["result"]]],[11,"deserialize_u32","","",49,[[["v"]],["result"]]],[11,"deserialize_u64","","",49,[[["v"]],["result"]]],[11,"deserialize_u128","","",49,[[["v"]],["result"]]],[11,"deserialize_f32","","",49,[[["v"]],["result"]]],[11,"deserialize_f64","","",49,[[["v"]],["result"]]],[11,"deserialize_char","","",49,[[["v"]],["result"]]],[11,"deserialize_str","","",49,[[["v"]],["result"]]],[11,"deserialize_string","","",49,[[["v"]],["result"]]],[11,"deserialize_bytes","","",49,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",49,[[["v"]],["result"]]],[11,"deserialize_option","","",49,[[["v"]],["result"]]],[11,"deserialize_unit","","",49,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",49,[[["v"]],["result"]]],[11,"deserialize_tuple","","",49,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",49,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",49,[[["v"]],["result"]]],[11,"deserialize_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",49,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",49,[[["v"]],["result"]]],[11,"deserialize_any","","",2,[[["v"]],["result"]]],[11,"deserialize_bool","","",2,[[["v"]],["result"]]],[11,"deserialize_i8","","",2,[[["v"]],["result"]]],[11,"deserialize_i16","","",2,[[["v"]],["result"]]],[11,"deserialize_i32","","",2,[[["v"]],["result"]]],[11,"deserialize_i64","","",2,[[["v"]],["result"]]],[11,"deserialize_i128","","",2,[[["v"]],["result"]]],[11,"deserialize_u8","","",2,[[["v"]],["result"]]],[11,"deserialize_u16","","",2,[[["v"]],["result"]]],[11,"deserialize_u32","","",2,[[["v"]],["result"]]],[11,"deserialize_u64","","",2,[[["v"]],["result"]]],[11,"deserialize_u128","","",2,[[["v"]],["result"]]],[11,"deserialize_f32","","",2,[[["v"]],["result"]]],[11,"deserialize_f64","","",2,[[["v"]],["result"]]],[11,"deserialize_char","","",2,[[["v"]],["result"]]],[11,"deserialize_str","","",2,[[["v"]],["result"]]],[11,"deserialize_string","","",2,[[["v"]],["result"]]],[11,"deserialize_bytes","","",2,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",2,[[["v"]],["result"]]],[11,"deserialize_option","","",2,[[["v"]],["result"]]],[11,"deserialize_unit","","",2,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",2,[[["v"]],["result"]]],[11,"deserialize_tuple","","",2,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",2,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",2,[[["v"]],["result"]]],[11,"deserialize_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",2,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",2,[[["v"]],["result"]]],[11,"deserialize_enum","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_any","","",3,[[["v"]],["result"]]],[11,"deserialize_bool","","",3,[[["v"]],["result"]]],[11,"deserialize_i8","","",3,[[["v"]],["result"]]],[11,"deserialize_i16","","",3,[[["v"]],["result"]]],[11,"deserialize_i32","","",3,[[["v"]],["result"]]],[11,"deserialize_i64","","",3,[[["v"]],["result"]]],[11,"deserialize_i128","","",3,[[["v"]],["result"]]],[11,"deserialize_u8","","",3,[[["v"]],["result"]]],[11,"deserialize_u16","","",3,[[["v"]],["result"]]],[11,"deserialize_u32","","",3,[[["v"]],["result"]]],[11,"deserialize_u64","","",3,[[["v"]],["result"]]],[11,"deserialize_u128","","",3,[[["v"]],["result"]]],[11,"deserialize_f32","","",3,[[["v"]],["result"]]],[11,"deserialize_f64","","",3,[[["v"]],["result"]]],[11,"deserialize_char","","",3,[[["v"]],["result"]]],[11,"deserialize_str","","",3,[[["v"]],["result"]]],[11,"deserialize_string","","",3,[[["v"]],["result"]]],[11,"deserialize_bytes","","",3,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",3,[[["v"]],["result"]]],[11,"deserialize_option","","",3,[[["v"]],["result"]]],[11,"deserialize_unit","","",3,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",3,[[["v"]],["result"]]],[11,"deserialize_tuple","","",3,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",3,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",3,[[["v"]],["result"]]],[11,"deserialize_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",3,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",3,[[["v"]],["result"]]],[11,"deserialize_any","","",4,[[["v"]],["result"]]],[11,"deserialize_bool","","",4,[[["v"]],["result"]]],[11,"deserialize_i8","","",4,[[["v"]],["result"]]],[11,"deserialize_i16","","",4,[[["v"]],["result"]]],[11,"deserialize_i32","","",4,[[["v"]],["result"]]],[11,"deserialize_i64","","",4,[[["v"]],["result"]]],[11,"deserialize_i128","","",4,[[["v"]],["result"]]],[11,"deserialize_u8","","",4,[[["v"]],["result"]]],[11,"deserialize_u16","","",4,[[["v"]],["result"]]],[11,"deserialize_u32","","",4,[[["v"]],["result"]]],[11,"deserialize_u64","","",4,[[["v"]],["result"]]],[11,"deserialize_u128","","",4,[[["v"]],["result"]]],[11,"deserialize_f32","","",4,[[["v"]],["result"]]],[11,"deserialize_f64","","",4,[[["v"]],["result"]]],[11,"deserialize_char","","",4,[[["v"]],["result"]]],[11,"deserialize_str","","",4,[[["v"]],["result"]]],[11,"deserialize_string","","",4,[[["v"]],["result"]]],[11,"deserialize_bytes","","",4,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",4,[[["v"]],["result"]]],[11,"deserialize_option","","",4,[[["v"]],["result"]]],[11,"deserialize_unit","","",4,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",4,[[["v"]],["result"]]],[11,"deserialize_tuple","","",4,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",4,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",4,[[["v"]],["result"]]],[11,"deserialize_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",4,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",4,[[["v"]],["result"]]],[11,"deserialize_any","","",5,[[["v"]],["result"]]],[11,"deserialize_seq","","",5,[[["v"]],["result"]]],[11,"deserialize_tuple","","",5,[[["usize"],["v"]],["result"]]],[11,"deserialize_bool","","",5,[[["v"]],["result"]]],[11,"deserialize_i8","","",5,[[["v"]],["result"]]],[11,"deserialize_i16","","",5,[[["v"]],["result"]]],[11,"deserialize_i32","","",5,[[["v"]],["result"]]],[11,"deserialize_i64","","",5,[[["v"]],["result"]]],[11,"deserialize_i128","","",5,[[["v"]],["result"]]],[11,"deserialize_u8","","",5,[[["v"]],["result"]]],[11,"deserialize_u16","","",5,[[["v"]],["result"]]],[11,"deserialize_u32","","",5,[[["v"]],["result"]]],[11,"deserialize_u64","","",5,[[["v"]],["result"]]],[11,"deserialize_u128","","",5,[[["v"]],["result"]]],[11,"deserialize_f32","","",5,[[["v"]],["result"]]],[11,"deserialize_f64","","",5,[[["v"]],["result"]]],[11,"deserialize_char","","",5,[[["v"]],["result"]]],[11,"deserialize_str","","",5,[[["v"]],["result"]]],[11,"deserialize_string","","",5,[[["v"]],["result"]]],[11,"deserialize_bytes","","",5,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",5,[[["v"]],["result"]]],[11,"deserialize_option","","",5,[[["v"]],["result"]]],[11,"deserialize_unit","","",5,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",5,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",5,[[["v"]],["result"]]],[11,"deserialize_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",5,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",5,[[["v"]],["result"]]],[11,"deserialize_any","","",6,[[["v"]],["result"]]],[11,"deserialize_enum","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",6,[[["v"]],["result"]]],[11,"deserialize_i8","","",6,[[["v"]],["result"]]],[11,"deserialize_i16","","",6,[[["v"]],["result"]]],[11,"deserialize_i32","","",6,[[["v"]],["result"]]],[11,"deserialize_i64","","",6,[[["v"]],["result"]]],[11,"deserialize_i128","","",6,[[["v"]],["result"]]],[11,"deserialize_u8","","",6,[[["v"]],["result"]]],[11,"deserialize_u16","","",6,[[["v"]],["result"]]],[11,"deserialize_u32","","",6,[[["v"]],["result"]]],[11,"deserialize_u64","","",6,[[["v"]],["result"]]],[11,"deserialize_u128","","",6,[[["v"]],["result"]]],[11,"deserialize_f32","","",6,[[["v"]],["result"]]],[11,"deserialize_f64","","",6,[[["v"]],["result"]]],[11,"deserialize_char","","",6,[[["v"]],["result"]]],[11,"deserialize_str","","",6,[[["v"]],["result"]]],[11,"deserialize_string","","",6,[[["v"]],["result"]]],[11,"deserialize_bytes","","",6,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",6,[[["v"]],["result"]]],[11,"deserialize_option","","",6,[[["v"]],["result"]]],[11,"deserialize_unit","","",6,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",6,[[["v"]],["result"]]],[11,"deserialize_tuple","","",6,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",6,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",6,[[["v"]],["result"]]],[11,"deserialize_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",6,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",6,[[["v"]],["result"]]],[11,"expecting","serde::de","",28,[[["formatter"],["self"]],["result"]]],[11,"visit_bool","","",28,[[["bool"]],["result"]]],[11,"visit_i64","","",28,[[["i64"]],["result"]]],[11,"visit_u64","","",28,[[["u64"]],["result"]]],[11,"visit_f64","","",28,[[["f64"]],["result"]]],[11,"visit_str","","",28,[[["str"]],["result"]]],[11,"visit_none","","",28,[[],["result"]]],[11,"visit_some","","",28,[[["d"]],["result"]]],[11,"visit_newtype_struct","","",28,[[["d"]],["result"]]],[11,"visit_unit","","",28,[[],["result"]]],[11,"visit_seq","","",28,[[["a"]],["result"]]],[11,"visit_map","","",28,[[["a"]],["result"]]],[11,"visit_bytes","","",28,[[],["result"]]],[11,"visit_enum","","",28,[[["a"]],["result"]]],[11,"next_element_seed","serde::de::value","",3,[[["self"],["v"]],[["result",["option"]],["option"]]]],[11,"size_hint","","",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"next_element_seed","","",5,[[["self"],["t"]],[["result",["option"]],["option"]]]],[11,"size_hint","","",5,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"next_key_seed","","",5,[[["self"],["t"]],[["option"],["result",["option"]]]]],[11,"next_value_seed","","",5,[[["self"],["t"]],["result"]]],[11,"next_entry_seed","","",5,[[["tv"],["self"],["tk"]],[["result",["option"]],["option"]]]],[11,"size_hint","","",5,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"variant_seed","","",46,[[["t"]],["result"]]],[11,"variant_seed","","",47,[[["t"]],["result"]]],[11,"variant_seed","","",1,[[["t"]],["result"]]],[11,"variant_seed","","",48,[[["t"]],["result"]]],[11,"variant_seed","","",49,[[["t"]],["result"]]],[11,"variant_seed","","",6,[[["t"]],["result"]]],[11,"serialize_element","serde::ser","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_element","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_key","","",50,[[["self"],["t"]],["result"]]],[11,"serialize_value","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"custom","serde::de::value","",29,[[["t"]],["self"]]],[11,"custom","","",29,[[["t"]],["self"]]],[11,"clone","","",29,[[["self"]],["error"]]],[11,"clone","","",30,[[["self"]],["self"]]],[11,"clone","","",31,[[["self"]],["self"]]],[11,"clone","","",32,[[["self"]],["self"]]],[11,"clone","","",33,[[["self"]],["self"]]],[11,"clone","","",34,[[["self"]],["self"]]],[11,"clone","","",35,[[["self"]],["self"]]],[11,"clone","","",36,[[["self"]],["self"]]],[11,"clone","","",37,[[["self"]],["self"]]],[11,"clone","","",38,[[["self"]],["self"]]],[11,"clone","","",39,[[["self"]],["self"]]],[11,"clone","","",40,[[["self"]],["self"]]],[11,"clone","","",41,[[["self"]],["self"]]],[11,"clone","","",42,[[["self"]],["self"]]],[11,"clone","","",43,[[["self"]],["self"]]],[11,"clone","","",44,[[["self"]],["self"]]],[11,"clone","","",45,[[["self"]],["self"]]],[11,"clone","","",46,[[["self"]],["self"]]],[11,"clone","","",47,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","","",48,[[["self"]],["self"]]],[11,"clone","","",49,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["seqdeserializer"]]],[11,"clone","","",4,[[["self"]],["seqaccessdeserializer"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["mapaccessdeserializer"]]],[11,"clone","serde::de","",28,[[["self"]],["ignoredany"]]],[11,"clone","","",0,[[["self"]],["unexpected"]]],[11,"default","","",28,[[],["ignoredany"]]],[11,"eq","serde::de::value","",29,[[["error"],["self"]],["bool"]]],[11,"ne","","",29,[[["error"],["self"]],["bool"]]],[11,"eq","serde::de","",0,[[["unexpected"],["self"]],["bool"]]],[11,"ne","","",0,[[["unexpected"],["self"]],["bool"]]],[11,"fmt","serde::de::value","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde::de","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde::de::value","",29,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","serde::de","",0,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"description","serde::de::value","",29,[[["self"]],["str"]]]],"p":[[4,"Unexpected"],[3,"BorrowedStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"IgnoredAny"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"Impossible"]]};
searchIndex["strsim"] = {"doc":"This library implements string similarity metrics.","i":[[4,"StrSimError","strsim","",null,null],[13,"DifferentLengthArgs","","",0,null],[5,"hamming","","Calculates the number of positions in the two strings…",null,[[["str"]],["hammingresult"]]],[5,"jaro","","Calculates the Jaro similarity between two strings. The…",null,[[["str"]],["f64"]]],[5,"jaro_winkler","","Like Jaro but gives a boost to strings that have a common…",null,[[["str"]],["f64"]]],[5,"levenshtein","","Calculates the minimum number of insertions, deletions,…",null,[[["str"]],["usize"]]],[5,"normalized_levenshtein","","Calculates a normalized score of the Levenshtein algorithm…",null,[[["str"]],["f64"]]],[5,"osa_distance","","Like Levenshtein but allows for adjacent transpositions.…",null,[[["str"]],["usize"]]],[5,"damerau_levenshtein","","Like optimal string alignment, but substrings can be…",null,[[["str"]],["usize"]]],[5,"normalized_damerau_levenshtein","","Calculates a normalized score of the Damerau–Levenshtein…",null,[[["str"]],["f64"]]],[6,"HammingResult","","",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["strsimerror"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[4,"StrSimError"]]};
searchIndex["structopt"] = {"doc":"This crate defines the `StructOpt` trait and its custom…","i":[[8,"StructOpt","structopt","A struct that is converted from command line arguments.",null,null],[10,"clap","","Returns the corresponding `clap::App`.",0,[[],["app"]]],[10,"from_clap","","Creates the struct from `clap::ArgMatches`. It cannot fail…",0,[[["argmatches"]],["self"]]],[11,"from_args","","Gets the struct from the command line arguments. Print the…",0,[[],["self"]]],[11,"from_iter","","Gets the struct from any iterator such as a `Vec` of your…",0,[[["i"]],["self"]]],[11,"from_iter_safe","","Gets the struct from any iterator such as a `Vec` of your…",0,[[["i"]],[["error"],["result",["error"]]]]]],"p":[[8,"StructOpt"]]};
searchIndex["structopt_derive"] = {"doc":"This crate is custom derive for `StructOpt`. It should not…","i":[[24,"StructOpt","structopt_derive","Generates the `StructOpt` impl.",null,null]],"p":[]};
searchIndex["syn"] = {"doc":"Syn is a parsing library for parsing a stream of Rust…","i":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",null,null],[12,"pound_token","","",0,null],[12,"style","","",0,null],[12,"bracket_token","","",0,null],[12,"path","","",0,null],[12,"tokens","","",0,null],[3,"MetaList","","A structured list within an attribute, like `derive(Copy,…",null,null],[12,"path","","",1,null],[12,"paren_token","","",1,null],[12,"nested","","",1,null],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature =…",null,null],[12,"path","","",2,null],[12,"eq_token","","",2,null],[12,"lit","","",2,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",3,null],[12,"vis","","Visibility of the field.",3,null],[12,"ident","","Name of the field, if any.",3,null],[12,"colon_token","","",3,null],[12,"ty","","Type of the field.",3,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point…",null,null],[12,"brace_token","","",4,null],[12,"named","","",4,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as…",null,null],[12,"paren_token","","",5,null],[12,"unnamed","","",5,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",6,null],[12,"ident","","Name of the variant.",6,null],[12,"fields","","Content stored in the variant.",6,null],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,null],[3,"VisCrate","","A crate-level visibility: `crate`.",null,null],[12,"crate_token","","",7,null],[3,"VisPublic","","A public visibility level: `pub`.",null,null],[12,"pub_token","","",8,null],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or…",null,null],[12,"pub_token","","",9,null],[12,"paren_token","","",9,null],[12,"in_token","","",9,null],[12,"path","","",9,null],[3,"Arm","","One arm of a `match` expression: `0...10 => { return true;…",null,null],[12,"attrs","","",10,null],[12,"pat","","",10,null],[12,"guard","","",10,null],[12,"fat_arrow_token","","",10,null],[12,"body","","",10,null],[12,"comma","","",10,null],[3,"FieldValue","","A field-value pair in a struct literal.",null,null],[12,"attrs","","Attributes tagged on the field.",11,null],[12,"member","","Name or index of the field.",11,null],[12,"colon_token","","The colon in `Struct { x: x }`. If written in shorthand…",11,null],[12,"expr","","Value of the field.",11,null],[3,"Label","","A lifetime labeling a `for`, `while`, or `loop`.",null,null],[12,"name","","",12,null],[12,"colon_token","","",12,null],[3,"MethodTurbofish","","The `::<>` explicit type parameters passed to a method…",null,null],[12,"colon2_token","","",13,null],[12,"lt_token","","",13,null],[12,"args","","",13,null],[12,"gt_token","","",13,null],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",null,null],[12,"attrs","","",14,null],[12,"bracket_token","","",14,null],[12,"elems","","",14,null],[3,"ExprAssign","","An assignment expression: `a = compute()`.",null,null],[12,"attrs","","",15,null],[12,"left","","",15,null],[12,"eq_token","","",15,null],[12,"right","","",15,null],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",null,null],[12,"attrs","","",16,null],[12,"left","","",16,null],[12,"op","","",16,null],[12,"right","","",16,null],[3,"ExprAsync","","An async block: `async { ... }`.",null,null],[12,"attrs","","",17,null],[12,"async_token","","",17,null],[12,"capture","","",17,null],[12,"block","","",17,null],[3,"ExprAwait","","An await expression: `fut.await`.",null,null],[12,"attrs","","",18,null],[12,"base","","",18,null],[12,"dot_token","","",18,null],[12,"await_token","","",18,null],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",null,null],[12,"attrs","","",19,null],[12,"left","","",19,null],[12,"op","","",19,null],[12,"right","","",19,null],[3,"ExprBlock","","A blocked scope: `{ ... }`.",null,null],[12,"attrs","","",20,null],[12,"label","","",20,null],[12,"block","","",20,null],[3,"ExprBox","","A box expression: `box f`.",null,null],[12,"attrs","","",21,null],[12,"box_token","","",21,null],[12,"expr","","",21,null],[3,"ExprBreak","","A `break`, with an optional label to break and an optional…",null,null],[12,"attrs","","",22,null],[12,"break_token","","",22,null],[12,"label","","",22,null],[12,"expr","","",22,null],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",null,null],[12,"attrs","","",23,null],[12,"func","","",23,null],[12,"paren_token","","",23,null],[12,"args","","",23,null],[3,"ExprCast","","A cast expression: `foo as f64`.",null,null],[12,"attrs","","",24,null],[12,"expr","","",24,null],[12,"as_token","","",24,null],[12,"ty","","",24,null],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",null,null],[12,"attrs","","",25,null],[12,"asyncness","","",25,null],[12,"movability","","",25,null],[12,"capture","","",25,null],[12,"or1_token","","",25,null],[12,"inputs","","",25,null],[12,"or2_token","","",25,null],[12,"output","","",25,null],[12,"body","","",25,null],[3,"ExprContinue","","A `continue`, with an optional label.",null,null],[12,"attrs","","",26,null],[12,"continue_token","","",26,null],[12,"label","","",26,null],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple…",null,null],[12,"attrs","","",27,null],[12,"base","","",27,null],[12,"dot_token","","",27,null],[12,"member","","",27,null],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",null,null],[12,"attrs","","",28,null],[12,"label","","",28,null],[12,"for_token","","",28,null],[12,"pat","","",28,null],[12,"in_token","","",28,null],[12,"expr","","",28,null],[12,"body","","",28,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[12,"attrs","","",29,null],[12,"group_token","","",29,null],[12,"expr","","",29,null],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr…",null,null],[12,"attrs","","",30,null],[12,"if_token","","",30,null],[12,"cond","","",30,null],[12,"then_branch","","",30,null],[12,"else_branch","","",30,null],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",null,null],[12,"attrs","","",31,null],[12,"expr","","",31,null],[12,"bracket_token","","",31,null],[12,"index","","",31,null],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",null,null],[12,"attrs","","",32,null],[12,"let_token","","",32,null],[12,"pat","","",32,null],[12,"eq_token","","",32,null],[12,"expr","","",32,null],[3,"ExprLit","","A literal in place of an expression: `1`, `\"foo\"`.",null,null],[12,"attrs","","",33,null],[12,"lit","","",33,null],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",null,null],[12,"attrs","","",34,null],[12,"label","","",34,null],[12,"loop_token","","",34,null],[12,"body","","",34,null],[3,"ExprMacro","","A macro invocation expression: `format!(\"{}\", q)`.",null,null],[12,"attrs","","",35,null],[12,"mac","","",35,null],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {}…",null,null],[12,"attrs","","",36,null],[12,"match_token","","",36,null],[12,"expr","","",36,null],[12,"brace_token","","",36,null],[12,"arms","","",36,null],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",null,null],[12,"attrs","","",37,null],[12,"receiver","","",37,null],[12,"dot_token","","",37,null],[12,"method","","",37,null],[12,"turbofish","","",37,null],[12,"paren_token","","",37,null],[12,"args","","",37,null],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",null,null],[12,"attrs","","",38,null],[12,"paren_token","","",38,null],[12,"expr","","",38,null],[3,"ExprPath","","A path like `std::mem::replace` possibly containing…",null,null],[12,"attrs","","",39,null],[12,"qself","","",39,null],[12,"path","","",39,null],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",null,null],[12,"attrs","","",40,null],[12,"from","","",40,null],[12,"limits","","",40,null],[12,"to","","",40,null],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",null,null],[12,"attrs","","",41,null],[12,"and_token","","",41,null],[12,"raw","","",41,null],[12,"mutability","","",41,null],[12,"expr","","",41,null],[3,"ExprRepeat","","An array literal constructed from one repeated element:…",null,null],[12,"attrs","","",42,null],[12,"bracket_token","","",42,null],[12,"expr","","",42,null],[12,"semi_token","","",42,null],[12,"len","","",42,null],[3,"ExprReturn","","A `return`, with an optional value to be returned.",null,null],[12,"attrs","","",43,null],[12,"return_token","","",43,null],[12,"expr","","",43,null],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",null,null],[12,"attrs","","",44,null],[12,"path","","",44,null],[12,"brace_token","","",44,null],[12,"fields","","",44,null],[12,"dot2_token","","",44,null],[12,"rest","","",44,null],[3,"ExprTry","","A try-expression: `expr?`.",null,null],[12,"attrs","","",45,null],[12,"expr","","",45,null],[12,"question_token","","",45,null],[3,"ExprTryBlock","","A try block: `try { ... }`.",null,null],[12,"attrs","","",46,null],[12,"try_token","","",46,null],[12,"block","","",46,null],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",null,null],[12,"attrs","","",47,null],[12,"paren_token","","",47,null],[12,"elems","","",47,null],[3,"ExprType","","A type ascription expression: `foo: f64`.",null,null],[12,"attrs","","",48,null],[12,"expr","","",48,null],[12,"colon_token","","",48,null],[12,"ty","","",48,null],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",null,null],[12,"attrs","","",49,null],[12,"op","","",49,null],[12,"expr","","",49,null],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",null,null],[12,"attrs","","",50,null],[12,"unsafe_token","","",50,null],[12,"block","","",50,null],[3,"ExprWhile","","A while loop: `while expr { ... }`.",null,null],[12,"attrs","","",51,null],[12,"label","","",51,null],[12,"while_token","","",51,null],[12,"cond","","",51,null],[12,"body","","",51,null],[3,"ExprYield","","A yield expression: `yield expr`.",null,null],[12,"attrs","","",52,null],[12,"yield_token","","",52,null],[12,"expr","","",52,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",53,null],[12,"span","","",53,null],[3,"BoundLifetimes","","A set of bound lifetimes: `for<'a, 'b, 'c>`.",null,null],[12,"for_token","","",54,null],[12,"lt_token","","",54,null],[12,"lifetimes","","",54,null],[12,"gt_token","","",54,null],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",null,null],[12,"attrs","","",55,null],[12,"const_token","","",55,null],[12,"ident","","",55,null],[12,"colon_token","","",55,null],[12,"ty","","",55,null],[12,"eq_token","","",55,null],[12,"default","","",55,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration of…",null,null],[12,"lt_token","","",56,null],[12,"params","","",56,null],[12,"gt_token","","",56,null],[12,"where_clause","","",56,null],[3,"LifetimeDef","","A lifetime definition: `'a: 'b + 'c + 'd`.",null,null],[12,"attrs","","",57,null],[12,"lifetime","","",57,null],[12,"colon_token","","",57,null],[12,"bounds","","",57,null],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",null,null],[12,"lhs_ty","","",58,null],[12,"eq_token","","",58,null],[12,"rhs_ty","","",58,null],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",null,null],[12,"lifetime","","",59,null],[12,"colon_token","","",59,null],[12,"bounds","","",59,null],[3,"PredicateType","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",null,null],[12,"lifetimes","","Any lifetimes from a `for` binding",60,null],[12,"bounded_ty","","The type being bounded",60,null],[12,"colon_token","","",60,null],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",60,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",61,null],[12,"modifier","","",61,null],[12,"lifetimes","","The `for<'a>` in `for<'a> Foo<&'a T>`",61,null],[12,"path","","The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",61,null],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",null,null],[12,"attrs","","",62,null],[12,"ident","","",62,null],[12,"colon_token","","",62,null],[12,"bounds","","",62,null],[12,"eq_token","","",62,null],[12,"default","","",62,null],[3,"WhereClause","","A `where` clause in a definition: `where T:…",null,null],[12,"where_token","","",63,null],[12,"predicates","","",63,null],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",null,null],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"ForeignItemFn","","A foreign function in an `extern` block.",null,null],[12,"attrs","","",64,null],[12,"vis","","",64,null],[12,"sig","","",64,null],[12,"semi_token","","",64,null],[3,"ForeignItemMacro","","A macro invocation within an extern block.",null,null],[12,"attrs","","",65,null],[12,"mac","","",65,null],[12,"semi_token","","",65,null],[3,"ForeignItemStatic","","A foreign static item in an `extern` block: `static ext:…",null,null],[12,"attrs","","",66,null],[12,"vis","","",66,null],[12,"static_token","","",66,null],[12,"mutability","","",66,null],[12,"ident","","",66,null],[12,"colon_token","","",66,null],[12,"ty","","",66,null],[12,"semi_token","","",66,null],[3,"ForeignItemType","","A foreign type in an `extern` block: `type void`.",null,null],[12,"attrs","","",67,null],[12,"vis","","",67,null],[12,"type_token","","",67,null],[12,"ident","","",67,null],[12,"semi_token","","",67,null],[3,"ImplItemConst","","An associated constant within an impl block.",null,null],[12,"attrs","","",68,null],[12,"vis","","",68,null],[12,"defaultness","","",68,null],[12,"const_token","","",68,null],[12,"ident","","",68,null],[12,"colon_token","","",68,null],[12,"ty","","",68,null],[12,"eq_token","","",68,null],[12,"expr","","",68,null],[12,"semi_token","","",68,null],[3,"ImplItemMacro","","A macro invocation within an impl block.",null,null],[12,"attrs","","",69,null],[12,"mac","","",69,null],[12,"semi_token","","",69,null],[3,"ImplItemMethod","","A method within an impl block.",null,null],[12,"attrs","","",70,null],[12,"vis","","",70,null],[12,"defaultness","","",70,null],[12,"sig","","",70,null],[12,"block","","",70,null],[3,"ImplItemType","","An associated type within an impl block.",null,null],[12,"attrs","","",71,null],[12,"vis","","",71,null],[12,"defaultness","","",71,null],[12,"type_token","","",71,null],[12,"ident","","",71,null],[12,"generics","","",71,null],[12,"eq_token","","",71,null],[12,"ty","","",71,null],[12,"semi_token","","",71,null],[3,"ItemConst","","A constant item: `const MAX: u16 = 65535`.",null,null],[12,"attrs","","",72,null],[12,"vis","","",72,null],[12,"const_token","","",72,null],[12,"ident","","",72,null],[12,"colon_token","","",72,null],[12,"ty","","",72,null],[12,"eq_token","","",72,null],[12,"expr","","",72,null],[12,"semi_token","","",72,null],[3,"ItemEnum","","An enum definition: `enum Foo<A, B> { A(A), B(B) }`.",null,null],[12,"attrs","","",73,null],[12,"vis","","",73,null],[12,"enum_token","","",73,null],[12,"ident","","",73,null],[12,"generics","","",73,null],[12,"brace_token","","",73,null],[12,"variants","","",73,null],[3,"ItemExternCrate","","An `extern crate` item: `extern crate serde`.",null,null],[12,"attrs","","",74,null],[12,"vis","","",74,null],[12,"extern_token","","",74,null],[12,"crate_token","","",74,null],[12,"ident","","",74,null],[12,"rename","","",74,null],[12,"semi_token","","",74,null],[3,"ItemFn","","A free-standing function: `fn process(n: usize) ->…",null,null],[12,"attrs","","",75,null],[12,"vis","","",75,null],[12,"sig","","",75,null],[12,"block","","",75,null],[3,"ItemForeignMod","","A block of foreign items: `extern \"C\" { ... }`.",null,null],[12,"attrs","","",76,null],[12,"abi","","",76,null],[12,"brace_token","","",76,null],[12,"items","","",76,null],[3,"ItemImpl","","An impl block providing trait or associated items:…",null,null],[12,"attrs","","",77,null],[12,"defaultness","","",77,null],[12,"unsafety","","",77,null],[12,"impl_token","","",77,null],[12,"generics","","",77,null],[12,"trait_","","Trait this impl implements.",77,null],[12,"self_ty","","The Self type of the impl.",77,null],[12,"brace_token","","",77,null],[12,"items","","",77,null],[3,"ItemMacro","","A macro invocation, which includes `macro_rules!`…",null,null],[12,"attrs","","",78,null],[12,"ident","","The `example` in `macro_rules! example { ... }`.",78,null],[12,"mac","","",78,null],[12,"semi_token","","",78,null],[3,"ItemMacro2","","A 2.0-style declarative macro introduced by the `macro`…",null,null],[12,"attrs","","",79,null],[12,"vis","","",79,null],[12,"macro_token","","",79,null],[12,"ident","","",79,null],[12,"rules","","",79,null],[3,"ItemMod","","A module or module declaration: `mod m` or `mod m { ... }`.",null,null],[12,"attrs","","",80,null],[12,"vis","","",80,null],[12,"mod_token","","",80,null],[12,"ident","","",80,null],[12,"content","","",80,null],[12,"semi","","",80,null],[3,"ItemStatic","","A static item: `static BIKE: Shed = Shed(42)`.",null,null],[12,"attrs","","",81,null],[12,"vis","","",81,null],[12,"static_token","","",81,null],[12,"mutability","","",81,null],[12,"ident","","",81,null],[12,"colon_token","","",81,null],[12,"ty","","",81,null],[12,"eq_token","","",81,null],[12,"expr","","",81,null],[12,"semi_token","","",81,null],[3,"ItemStruct","","A struct definition: `struct Foo<A> { x: A }`.",null,null],[12,"attrs","","",82,null],[12,"vis","","",82,null],[12,"struct_token","","",82,null],[12,"ident","","",82,null],[12,"generics","","",82,null],[12,"fields","","",82,null],[12,"semi_token","","",82,null],[3,"ItemTrait","","A trait definition: `pub trait Iterator { ... }`.",null,null],[12,"attrs","","",83,null],[12,"vis","","",83,null],[12,"unsafety","","",83,null],[12,"auto_token","","",83,null],[12,"trait_token","","",83,null],[12,"ident","","",83,null],[12,"generics","","",83,null],[12,"colon_token","","",83,null],[12,"supertraits","","",83,null],[12,"brace_token","","",83,null],[12,"items","","",83,null],[3,"ItemTraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",null,null],[12,"attrs","","",84,null],[12,"vis","","",84,null],[12,"trait_token","","",84,null],[12,"ident","","",84,null],[12,"generics","","",84,null],[12,"eq_token","","",84,null],[12,"bounds","","",84,null],[12,"semi_token","","",84,null],[3,"ItemType","","A type alias: `type Result<T> = std::result::Result<T,…",null,null],[12,"attrs","","",85,null],[12,"vis","","",85,null],[12,"type_token","","",85,null],[12,"ident","","",85,null],[12,"generics","","",85,null],[12,"eq_token","","",85,null],[12,"ty","","",85,null],[12,"semi_token","","",85,null],[3,"ItemUnion","","A union definition: `union Foo<A, B> { x: A, y: B }`.",null,null],[12,"attrs","","",86,null],[12,"vis","","",86,null],[12,"union_token","","",86,null],[12,"ident","","",86,null],[12,"generics","","",86,null],[12,"fields","","",86,null],[3,"ItemUse","","A use declaration: `use std::collections::HashMap`.",null,null],[12,"attrs","","",87,null],[12,"vis","","",87,null],[12,"use_token","","",87,null],[12,"leading_colon","","",87,null],[12,"tree","","",87,null],[12,"semi_token","","",87,null],[3,"Receiver","","The `self` argument of an associated method, whether taken…",null,null],[12,"attrs","","",88,null],[12,"reference","","",88,null],[12,"mutability","","",88,null],[12,"self_token","","",88,null],[3,"Signature","","A function signature in a trait or implementation: `unsafe…",null,null],[12,"constness","","",89,null],[12,"asyncness","","",89,null],[12,"unsafety","","",89,null],[12,"abi","","",89,null],[12,"fn_token","","",89,null],[12,"ident","","",89,null],[12,"generics","","",89,null],[12,"paren_token","","",89,null],[12,"inputs","","",89,null],[12,"variadic","","",89,null],[12,"output","","",89,null],[3,"TraitItemConst","","An associated constant within the definition of a trait.",null,null],[12,"attrs","","",90,null],[12,"const_token","","",90,null],[12,"ident","","",90,null],[12,"colon_token","","",90,null],[12,"ty","","",90,null],[12,"default","","",90,null],[12,"semi_token","","",90,null],[3,"TraitItemMacro","","A macro invocation within the definition of a trait.",null,null],[12,"attrs","","",91,null],[12,"mac","","",91,null],[12,"semi_token","","",91,null],[3,"TraitItemMethod","","A trait method within the definition of a trait.",null,null],[12,"attrs","","",92,null],[12,"sig","","",92,null],[12,"default","","",92,null],[12,"semi_token","","",92,null],[3,"TraitItemType","","An associated type within the definition of a trait.",null,null],[12,"attrs","","",93,null],[12,"type_token","","",93,null],[12,"ident","","",93,null],[12,"generics","","",93,null],[12,"colon_token","","",93,null],[12,"bounds","","",93,null],[12,"default","","",93,null],[12,"semi_token","","",93,null],[3,"UseGlob","","A glob import in a `use` item: `*`.",null,null],[12,"star_token","","",94,null],[3,"UseGroup","","A braced group of imports in a `use` item: `{A, B, C}`.",null,null],[12,"brace_token","","",95,null],[12,"items","","",95,null],[3,"UseName","","An identifier imported by a `use` item: `HashMap`.",null,null],[12,"ident","","",96,null],[3,"UsePath","","A path prefix of imports in a `use` item: `std::...`.",null,null],[12,"ident","","",97,null],[12,"colon2_token","","",97,null],[12,"tree","","",97,null],[3,"UseRename","","An renamed identifier imported by a `use` item: `HashMap…",null,null],[12,"ident","","",98,null],[12,"as_token","","",98,null],[12,"rename","","",98,null],[3,"File","","A complete file of Rust source code.",null,null],[12,"shebang","","",99,null],[12,"attrs","","",99,null],[12,"items","","",99,null],[3,"Lifetime","","A Rust lifetime: `'a`.",null,null],[12,"apostrophe","","",100,null],[12,"ident","","",100,null],[3,"LitBool","","A boolean literal: `true` or `false`.",null,null],[12,"value","","",101,null],[12,"span","","",101,null],[3,"LitByte","","A byte literal: `b'f'`.",null,null],[3,"LitByteStr","","A byte string literal: `b\"foo\"`.",null,null],[3,"LitChar","","A character literal: `'a'`.",null,null],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",null,null],[3,"LitInt","","An integer literal: `1` or `1u16`.",null,null],[3,"LitStr","","A UTF-8 string literal: `\"foo\"`.",null,null],[3,"Macro","","A macro invocation: `println!(\"{}\", mac)`.",null,null],[12,"path","","",102,null],[12,"bang_token","","",102,null],[12,"delimiter","","",102,null],[12,"tokens","","",102,null],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",null,null],[12,"enum_token","","",103,null],[12,"brace_token","","",103,null],[12,"variants","","",103,null],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",null,null],[12,"struct_token","","",104,null],[12,"fields","","",104,null],[12,"semi_token","","",104,null],[3,"DataUnion","","An untagged union input to a `proc_macro_derive` macro.",null,null],[12,"union_token","","",105,null],[12,"fields","","",105,null],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",106,null],[12,"vis","","Visibility of the struct or enum.",106,null],[12,"ident","","Name of the struct or enum.",106,null],[12,"generics","","Generics required to complete the definition.",106,null],[12,"data","","Data within the struct or enum.",106,null],[3,"Block","","A braced block containing Rust statements.",null,null],[12,"brace_token","","",107,null],[12,"stmts","","Statements in a block",107,null],[3,"Local","","A local `let` binding: `let x: u64 = s.parse()?`.",null,null],[12,"attrs","","",108,null],[12,"let_token","","",108,null],[12,"pat","","",108,null],[12,"init","","",108,null],[12,"semi_token","","",108,null],[3,"Abi","","The binary interface of a function: `extern \"C\"`.",null,null],[12,"extern_token","","",109,null],[12,"name","","",109,null],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize)…",null,null],[12,"attrs","","",110,null],[12,"name","","",110,null],[12,"ty","","",110,null],[3,"TypeArray","","A fixed size array type: `[T; n]`.",null,null],[12,"bracket_token","","",111,null],[12,"elem","","",111,null],[12,"semi_token","","",111,null],[12,"len","","",111,null],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",null,null],[12,"lifetimes","","",112,null],[12,"unsafety","","",112,null],[12,"abi","","",112,null],[12,"fn_token","","",112,null],[12,"paren_token","","",112,null],[12,"inputs","","",112,null],[12,"variadic","","",112,null],[12,"output","","",112,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",113,null],[12,"elem","","",113,null],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",null,null],[12,"impl_token","","",114,null],[12,"bounds","","",114,null],[3,"TypeInfer","","Indication that a type should be inferred by the compiler:…",null,null],[12,"underscore_token","","",115,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",116,null],[3,"TypeNever","","The never type: `!`.",null,null],[12,"bang_token","","",117,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",118,null],[12,"elem","","",118,null],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with…",null,null],[12,"qself","","",119,null],[12,"path","","",119,null],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",null,null],[12,"star_token","","",120,null],[12,"const_token","","",120,null],[12,"mutability","","",120,null],[12,"elem","","",120,null],[3,"TypeReference","","A reference type: `&'a T` or `&'a mut T`.",null,null],[12,"and_token","","",121,null],[12,"lifetime","","",121,null],[12,"mutability","","",121,null],[12,"elem","","",121,null],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",null,null],[12,"bracket_token","","",122,null],[12,"elem","","",122,null],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",null,null],[12,"dyn_token","","",123,null],[12,"bounds","","",123,null],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",null,null],[12,"paren_token","","",124,null],[12,"elems","","",124,null],[3,"Variadic","","The variadic argument of a foreign function.",null,null],[12,"attrs","","",125,null],[12,"dots","","",125,null],[3,"FieldPat","","A single field in a struct pattern.",null,null],[12,"attrs","","",126,null],[12,"member","","",126,null],[12,"colon_token","","",126,null],[12,"pat","","",126,null],[3,"PatBox","","A box pattern: `box v`.",null,null],[12,"attrs","","",127,null],[12,"box_token","","",127,null],[12,"pat","","",127,null],[3,"PatIdent","","A pattern that binds a new variable: `ref mut binding @…",null,null],[12,"attrs","","",128,null],[12,"by_ref","","",128,null],[12,"mutability","","",128,null],[12,"ident","","",128,null],[12,"subpat","","",128,null],[3,"PatLit","","A literal pattern: `0`.",null,null],[12,"attrs","","",129,null],[12,"expr","","",129,null],[3,"PatMacro","","A macro in pattern position.",null,null],[12,"attrs","","",130,null],[12,"mac","","",130,null],[3,"PatOr","","A pattern that matches any one of a set of cases.",null,null],[12,"attrs","","",131,null],[12,"leading_vert","","",131,null],[12,"cases","","",131,null],[3,"PatPath","","A path pattern like `Color::Red`, optionally qualified…",null,null],[12,"attrs","","",132,null],[12,"qself","","",132,null],[12,"path","","",132,null],[3,"PatRange","","A range pattern: `1..=2`.",null,null],[12,"attrs","","",133,null],[12,"lo","","",133,null],[12,"limits","","",133,null],[12,"hi","","",133,null],[3,"PatReference","","A reference pattern: `&mut var`.",null,null],[12,"attrs","","",134,null],[12,"and_token","","",134,null],[12,"mutability","","",134,null],[12,"pat","","",134,null],[3,"PatRest","","The dots in a tuple or slice pattern: `[0, 1, ..]`",null,null],[12,"attrs","","",135,null],[12,"dot2_token","","",135,null],[3,"PatSlice","","A dynamically sized slice pattern: `[a, b, ref i @ .., y,…",null,null],[12,"attrs","","",136,null],[12,"bracket_token","","",136,null],[12,"elems","","",136,null],[3,"PatStruct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",null,null],[12,"attrs","","",137,null],[12,"path","","",137,null],[12,"brace_token","","",137,null],[12,"fields","","",137,null],[12,"dot2_token","","",137,null],[3,"PatTuple","","A tuple pattern: `(a, b)`.",null,null],[12,"attrs","","",138,null],[12,"paren_token","","",138,null],[12,"elems","","",138,null],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",null,null],[12,"attrs","","",139,null],[12,"path","","",139,null],[12,"pat","","",139,null],[3,"PatType","","A type ascription pattern: `foo: f64`.",null,null],[12,"attrs","","",140,null],[12,"pat","","",140,null],[12,"colon_token","","",140,null],[12,"ty","","",140,null],[3,"PatWild","","A pattern that matches any value: `_`.",null,null],[12,"attrs","","",141,null],[12,"underscore_token","","",141,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>`…",null,null],[12,"colon2_token","","",142,null],[12,"lt_token","","",142,null],[12,"args","","",142,null],[12,"gt_token","","",142,null],[3,"Binding","","A binding (equality constraint) on an associated type:…",null,null],[12,"ident","","",143,null],[12,"eq_token","","",143,null],[12,"ty","","",143,null],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",null,null],[12,"ident","","",144,null],[12,"colon_token","","",144,null],[12,"bounds","","",144,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in…",null,null],[12,"paren_token","","",145,null],[12,"inputs","","`(A, B)`",145,null],[12,"output","","`C`",145,null],[3,"Path","","A path at which a named item is exported:…",null,null],[12,"leading_colon","","",146,null],[12,"segments","","",146,null],[3,"PathSegment","","A segment of a path together with any path arguments on…",null,null],[12,"ident","","",147,null],[12,"arguments","","",147,null],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T…",null,null],[12,"lt_token","","",148,null],[12,"ty","","",148,null],[12,"position","","",148,null],[12,"as_token","","",148,null],[12,"gt_token","","",148,null],[3,"Error","","Error returned when a Syn parser cannot parse the input…",null,null],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and…",null,null],[13,"Outer","","",149,null],[13,"Inner","","",149,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Path","","",150,null],[13,"List","","A structured list within an attribute, like `derive(Copy,…",150,null],[13,"NameValue","","A name-value pair within an attribute, like `feature =…",150,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the `Copy` in…",151,null],[13,"Lit","","A Rust literal, like the `\"new_name\"` in…",151,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as `Point…",152,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as…",152,null],[13,"Unit","","Unit struct or unit variant such as `None`.",152,null],[4,"Visibility","","The visibility level of an item: inherited or `pub` or…",null,null],[13,"Public","","A public visibility level: `pub`.",153,null],[13,"Crate","","A crate-level visibility: `crate`.",153,null],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or…",153,null],[13,"Inherited","","An inherited visibility, which usually means private.",153,null],[4,"GenericMethodArgument","","An individual generic argument to a method, like `T`.",null,null],[13,"Type","","A type argument.",154,null],[13,"Const","","A const expression. Must be inside of a block.",154,null],[4,"RangeLimits","","Limit types of a range, inclusive or exclusive.",null,null],[13,"HalfOpen","","Inclusive at the beginning, exclusive at the end.",155,null],[13,"Closed","","Inclusive at the beginning and end.",155,null],[4,"Expr","","A Rust expression.",null,null],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",156,null],[13,"Assign","","An assignment expression: `a = compute()`.",156,null],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",156,null],[13,"Async","","An async block: `async { ... }`.",156,null],[13,"Await","","An await expression: `fut.await`.",156,null],[13,"Binary","","A binary operation: `a + b`, `a * b`.",156,null],[13,"Block","","A blocked scope: `{ ... }`.",156,null],[13,"Box","","A box expression: `box f`.",156,null],[13,"Break","","A `break`, with an optional label to break and an optional…",156,null],[13,"Call","","A function call expression: `invoke(a, b)`.",156,null],[13,"Cast","","A cast expression: `foo as f64`.",156,null],[13,"Closure","","A closure expression: `|a, b| a + b`.",156,null],[13,"Continue","","A `continue`, with an optional label.",156,null],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple…",156,null],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",156,null],[13,"Group","","An expression contained within invisible delimiters.",156,null],[13,"If","","An `if` expression with an optional `else` block: `if expr…",156,null],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",156,null],[13,"Let","","A `let` guard: `let Some(x) = opt`.",156,null],[13,"Lit","","A literal in place of an expression: `1`, `\"foo\"`.",156,null],[13,"Loop","","Conditionless loop: `loop { ... }`.",156,null],[13,"Macro","","A macro invocation expression: `format!(\"{}\", q)`.",156,null],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {}…",156,null],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",156,null],[13,"Paren","","A parenthesized expression: `(a + b)`.",156,null],[13,"Path","","A path like `std::mem::replace` possibly containing…",156,null],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",156,null],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",156,null],[13,"Repeat","","An array literal constructed from one repeated element:…",156,null],[13,"Return","","A `return`, with an optional value to be returned.",156,null],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",156,null],[13,"Try","","A try-expression: `expr?`.",156,null],[13,"TryBlock","","A try block: `try { ... }`.",156,null],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",156,null],[13,"Type","","A type ascription expression: `foo: f64`.",156,null],[13,"Unary","","A unary operation: `!x`, `*x`.",156,null],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",156,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",156,null],[13,"While","","A while loop: `while expr { ... }`.",156,null],[13,"Yield","","A yield expression: `yield expr`.",156,null],[4,"Member","","A struct or tuple struct field accessed in a struct…",null,null],[13,"Named","","A named field like `self.x`.",157,null],[13,"Unnamed","","An unnamed field like `self.0`.",157,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T:…",null,null],[13,"Type","","A generic type parameter: `T: Into<String>`.",158,null],[13,"Lifetime","","A lifetime definition: `'a: 'b + 'c + 'd`.",158,null],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",158,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the…",null,null],[13,"None","","",159,null],[13,"Maybe","","",159,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",160,null],[13,"Lifetime","","",160,null],[4,"WherePredicate","","A single predicate in a `where` clause: `T:…",null,null],[13,"Type","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",161,null],[13,"Lifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",161,null],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",161,null],[4,"FnArg","","An argument in a function signature: the `n: usize` in `fn…",null,null],[13,"Receiver","","The `self` argument of an associated method, whether taken…",162,null],[13,"Typed","","A function argument accepted by pattern and type.",162,null],[4,"ForeignItem","","An item within an `extern` block.",null,null],[13,"Fn","","A foreign function in an `extern` block.",163,null],[13,"Static","","A foreign static item in an `extern` block: `static ext:…",163,null],[13,"Type","","A foreign type in an `extern` block: `type void`.",163,null],[13,"Macro","","A macro invocation within an extern block.",163,null],[13,"Verbatim","","Tokens in an `extern` block not interpreted by Syn.",163,null],[4,"ImplItem","","An item within an impl block.",null,null],[13,"Const","","An associated constant within an impl block.",164,null],[13,"Method","","A method within an impl block.",164,null],[13,"Type","","An associated type within an impl block.",164,null],[13,"Macro","","A macro invocation within an impl block.",164,null],[13,"Verbatim","","Tokens within an impl block not interpreted by Syn.",164,null],[4,"Item","","Things that can appear directly inside of a module or scope.",null,null],[13,"Const","","A constant item: `const MAX: u16 = 65535`.",165,null],[13,"Enum","","An enum definition: `enum Foo<A, B> { A(A), B(B) }`.",165,null],[13,"ExternCrate","","An `extern crate` item: `extern crate serde`.",165,null],[13,"Fn","","A free-standing function: `fn process(n: usize) ->…",165,null],[13,"ForeignMod","","A block of foreign items: `extern \"C\" { ... }`.",165,null],[13,"Impl","","An impl block providing trait or associated items:…",165,null],[13,"Macro","","A macro invocation, which includes `macro_rules!`…",165,null],[13,"Macro2","","A 2.0-style declarative macro introduced by the `macro`…",165,null],[13,"Mod","","A module or module declaration: `mod m` or `mod m { ... }`.",165,null],[13,"Static","","A static item: `static BIKE: Shed = Shed(42)`.",165,null],[13,"Struct","","A struct definition: `struct Foo<A> { x: A }`.",165,null],[13,"Trait","","A trait definition: `pub trait Iterator { ... }`.",165,null],[13,"TraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",165,null],[13,"Type","","A type alias: `type Result<T> = std::result::Result<T,…",165,null],[13,"Union","","A union definition: `union Foo<A, B> { x: A, y: B }`.",165,null],[13,"Use","","A use declaration: `use std::collections::HashMap`.",165,null],[13,"Verbatim","","Tokens forming an item not interpreted by Syn.",165,null],[4,"TraitItem","","An item declaration within the definition of a trait.",null,null],[13,"Const","","An associated constant within the definition of a trait.",166,null],[13,"Method","","A trait method within the definition of a trait.",166,null],[13,"Type","","An associated type within the definition of a trait.",166,null],[13,"Macro","","A macro invocation within the definition of a trait.",166,null],[13,"Verbatim","","Tokens within the definition of a trait not interpreted by…",166,null],[4,"UseTree","","A suffix of an import tree in a `use` item: `Type as…",null,null],[13,"Path","","A path prefix of imports in a `use` item: `std::...`.",167,null],[13,"Name","","An identifier imported by a `use` item: `HashMap`.",167,null],[13,"Rename","","An renamed identifier imported by a `use` item: `HashMap…",167,null],[13,"Glob","","A glob import in a `use` item: `*`.",167,null],[13,"Group","","A braced group of imports in a `use` item: `{A, B, C}`.",167,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: `\"foo\"`.",168,null],[13,"ByteStr","","A byte string literal: `b\"foo\"`.",168,null],[13,"Byte","","A byte literal: `b'f'`.",168,null],[13,"Char","","A character literal: `'a'`.",168,null],[13,"Int","","An integer literal: `1` or `1u16`.",168,null],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",168,null],[13,"Bool","","A boolean literal: `true` or `false`.",168,null],[13,"Verbatim","","A raw token literal not interpreted by Syn.",168,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a…",null,null],[13,"Cooked","","An ordinary string like `\"data\"`.",169,null],[13,"Raw","","A raw string like `r##\"data\"##`.",169,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or…",null,null],[13,"Paren","","",170,null],[13,"Brace","","",170,null],[13,"Bracket","","",170,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",171,null],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",171,null],[13,"Union","","An untagged union input to a `proc_macro_derive` macro.",171,null],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",null,null],[13,"Add","","The `+` operator (addition)",172,null],[13,"Sub","","The `-` operator (subtraction)",172,null],[13,"Mul","","The `*` operator (multiplication)",172,null],[13,"Div","","The `/` operator (division)",172,null],[13,"Rem","","The `%` operator (modulus)",172,null],[13,"And","","The `&&` operator (logical and)",172,null],[13,"Or","","The `||` operator (logical or)",172,null],[13,"BitXor","","The `^` operator (bitwise xor)",172,null],[13,"BitAnd","","The `&` operator (bitwise and)",172,null],[13,"BitOr","","The `|` operator (bitwise or)",172,null],[13,"Shl","","The `<<` operator (shift left)",172,null],[13,"Shr","","The `>>` operator (shift right)",172,null],[13,"Eq","","The `==` operator (equality)",172,null],[13,"Lt","","The `<` operator (less than)",172,null],[13,"Le","","The `<=` operator (less than or equal to)",172,null],[13,"Ne","","The `!=` operator (not equal to)",172,null],[13,"Ge","","The `>=` operator (greater than or equal to)",172,null],[13,"Gt","","The `>` operator (greater than)",172,null],[13,"AddEq","","The `+=` operator",172,null],[13,"SubEq","","The `-=` operator",172,null],[13,"MulEq","","The `*=` operator",172,null],[13,"DivEq","","The `/=` operator",172,null],[13,"RemEq","","The `%=` operator",172,null],[13,"BitXorEq","","The `^=` operator",172,null],[13,"BitAndEq","","The `&=` operator",172,null],[13,"BitOrEq","","The `|=` operator",172,null],[13,"ShlEq","","The `<<=` operator",172,null],[13,"ShrEq","","The `>>=` operator",172,null],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",null,null],[13,"Deref","","The `*` operator for dereferencing",173,null],[13,"Not","","The `!` operator for logical inversion",173,null],[13,"Neg","","The `-` operator for negation",173,null],[4,"Stmt","","A statement, usually ending in a semicolon.",null,null],[13,"Local","","A local (let) binding.",174,null],[13,"Item","","An item definition.",174,null],[13,"Expr","","Expr without trailing semicolon.",174,null],[13,"Semi","","Expression with trailing semicolon.",174,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",175,null],[13,"Type","","A particular type is returned.",175,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Array","","A fixed size array type: `[T; n]`.",176,null],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",176,null],[13,"Group","","A type contained within invisible delimiters.",176,null],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",176,null],[13,"Infer","","Indication that a type should be inferred by the compiler:…",176,null],[13,"Macro","","A macro in the type position.",176,null],[13,"Never","","The never type: `!`.",176,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",176,null],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with…",176,null],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",176,null],[13,"Reference","","A reference type: `&'a T` or `&'a mut T`.",176,null],[13,"Slice","","A dynamically sized slice type: `[T]`.",176,null],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",176,null],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",176,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",176,null],[4,"Pat","","A pattern in a local binding, function signature, match…",null,null],[13,"Box","","A box pattern: `box v`.",177,null],[13,"Ident","","A pattern that binds a new variable: `ref mut binding @…",177,null],[13,"Lit","","A literal pattern: `0`.",177,null],[13,"Macro","","A macro in pattern position.",177,null],[13,"Or","","A pattern that matches any one of a set of cases.",177,null],[13,"Path","","A path pattern like `Color::Red`, optionally qualified…",177,null],[13,"Range","","A range pattern: `1..=2`.",177,null],[13,"Reference","","A reference pattern: `&mut var`.",177,null],[13,"Rest","","The dots in a tuple or slice pattern: `[0, 1, ..]`",177,null],[13,"Slice","","A dynamically sized slice pattern: `[a, b, ref i @ .., y,…",177,null],[13,"Struct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",177,null],[13,"Tuple","","A tuple pattern: `(a, b)`.",177,null],[13,"TupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",177,null],[13,"Type","","A type ascription pattern: `foo: f64`.",177,null],[13,"Verbatim","","Tokens in pattern position not interpreted by Syn.",177,null],[13,"Wild","","A pattern that matches any value: `_`.",177,null],[4,"GenericArgument","","An individual generic argument, like `'a`, `T`, or `Item =…",null,null],[13,"Lifetime","","A lifetime argument.",178,null],[13,"Type","","A type argument.",178,null],[13,"Binding","","A binding (equality constraint) on an associated type: the…",178,null],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",178,null],[13,"Const","","A const expression. Must be inside of a block.",178,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path…",null,null],[13,"None","","",179,null],[13,"AngleBracketed","","The `<'a, T>` in `std::slice::iter<'a, T>`.",179,null],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",179,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree…",null,[[["tokenstream"]],[["result"],["parse"]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",null,[[["tokenstream"]],[["result"],["parse"]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",null,[[["str"]],[["result"],["parse"]]]],[5,"parse_file","","Parse the content of a file of Rust code.",null,[[["str"]],[["file"],["result",["file"]]]]],[0,"token","","Tokens representing Rust punctuation, keywords, and…",null,null],[3,"Underscore","syn::token","`_`",null,null],[12,"spans","","",180,null],[3,"Abstract","","`abstract`",null,null],[12,"span","","",181,null],[3,"As","","`as`",null,null],[12,"span","","",182,null],[3,"Async","","`async`",null,null],[12,"span","","",183,null],[3,"Auto","","`auto`",null,null],[12,"span","","",184,null],[3,"Await","","`await`",null,null],[12,"span","","",185,null],[3,"Become","","`become`",null,null],[12,"span","","",186,null],[3,"Box","","`box`",null,null],[12,"span","","",187,null],[3,"Break","","`break`",null,null],[12,"span","","",188,null],[3,"Const","","`const`",null,null],[12,"span","","",189,null],[3,"Continue","","`continue`",null,null],[12,"span","","",190,null],[3,"Crate","","`crate`",null,null],[12,"span","","",191,null],[3,"Default","","`default`",null,null],[12,"span","","",192,null],[3,"Do","","`do`",null,null],[12,"span","","",193,null],[3,"Dyn","","`dyn`",null,null],[12,"span","","",194,null],[3,"Else","","`else`",null,null],[12,"span","","",195,null],[3,"Enum","","`enum`",null,null],[12,"span","","",196,null],[3,"Extern","","`extern`",null,null],[12,"span","","",197,null],[3,"Final","","`final`",null,null],[12,"span","","",198,null],[3,"Fn","","`fn`",null,null],[12,"span","","",199,null],[3,"For","","`for`",null,null],[12,"span","","",200,null],[3,"If","","`if`",null,null],[12,"span","","",201,null],[3,"Impl","","`impl`",null,null],[12,"span","","",202,null],[3,"In","","`in`",null,null],[12,"span","","",203,null],[3,"Let","","`let`",null,null],[12,"span","","",204,null],[3,"Loop","","`loop`",null,null],[12,"span","","",205,null],[3,"Macro","","`macro`",null,null],[12,"span","","",206,null],[3,"Match","","`match`",null,null],[12,"span","","",207,null],[3,"Mod","","`mod`",null,null],[12,"span","","",208,null],[3,"Move","","`move`",null,null],[12,"span","","",209,null],[3,"Mut","","`mut`",null,null],[12,"span","","",210,null],[3,"Override","","`override`",null,null],[12,"span","","",211,null],[3,"Priv","","`priv`",null,null],[12,"span","","",212,null],[3,"Pub","","`pub`",null,null],[12,"span","","",213,null],[3,"Ref","","`ref`",null,null],[12,"span","","",214,null],[3,"Return","","`return`",null,null],[12,"span","","",215,null],[3,"SelfType","","`Self`",null,null],[12,"span","","",216,null],[3,"SelfValue","","`self`",null,null],[12,"span","","",217,null],[3,"Static","","`static`",null,null],[12,"span","","",218,null],[3,"Struct","","`struct`",null,null],[12,"span","","",219,null],[3,"Super","","`super`",null,null],[12,"span","","",220,null],[3,"Trait","","`trait`",null,null],[12,"span","","",221,null],[3,"Try","","`try`",null,null],[12,"span","","",222,null],[3,"Type","","`type`",null,null],[12,"span","","",223,null],[3,"Typeof","","`typeof`",null,null],[12,"span","","",224,null],[3,"Union","","`union`",null,null],[12,"span","","",225,null],[3,"Unsafe","","`unsafe`",null,null],[12,"span","","",226,null],[3,"Unsized","","`unsized`",null,null],[12,"span","","",227,null],[3,"Use","","`use`",null,null],[12,"span","","",228,null],[3,"Virtual","","`virtual`",null,null],[12,"span","","",229,null],[3,"Where","","`where`",null,null],[12,"span","","",230,null],[3,"While","","`while`",null,null],[12,"span","","",231,null],[3,"Yield","","`yield`",null,null],[12,"span","","",232,null],[3,"Add","","`+`",null,null],[12,"spans","","",233,null],[3,"AddEq","","`+=`",null,null],[12,"spans","","",234,null],[3,"And","","`&`",null,null],[12,"spans","","",235,null],[3,"AndAnd","","`&&`",null,null],[12,"spans","","",236,null],[3,"AndEq","","`&=`",null,null],[12,"spans","","",237,null],[3,"At","","`@`",null,null],[12,"spans","","",238,null],[3,"Bang","","`!`",null,null],[12,"spans","","",239,null],[3,"Caret","","`^`",null,null],[12,"spans","","",240,null],[3,"CaretEq","","`^=`",null,null],[12,"spans","","",241,null],[3,"Colon","","`:`",null,null],[12,"spans","","",242,null],[3,"Colon2","","`::`",null,null],[12,"spans","","",243,null],[3,"Comma","","`,`",null,null],[12,"spans","","",244,null],[3,"Div","","`/`",null,null],[12,"spans","","",245,null],[3,"DivEq","","`/=`",null,null],[12,"spans","","",246,null],[3,"Dollar","","`$`",null,null],[12,"spans","","",247,null],[3,"Dot","","`.`",null,null],[12,"spans","","",248,null],[3,"Dot2","","`..`",null,null],[12,"spans","","",249,null],[3,"Dot3","","`...`",null,null],[12,"spans","","",250,null],[3,"DotDotEq","","`..=`",null,null],[12,"spans","","",251,null],[3,"Eq","","`=`",null,null],[12,"spans","","",252,null],[3,"EqEq","","`==`",null,null],[12,"spans","","",253,null],[3,"Ge","","`>=`",null,null],[12,"spans","","",254,null],[3,"Gt","","`>`",null,null],[12,"spans","","",255,null],[3,"Le","","`<=`",null,null],[12,"spans","","",256,null],[3,"Lt","","`<`",null,null],[12,"spans","","",257,null],[3,"MulEq","","`*=`",null,null],[12,"spans","","",258,null],[3,"Ne","","`!=`",null,null],[12,"spans","","",259,null],[3,"Or","","`|`",null,null],[12,"spans","","",260,null],[3,"OrEq","","`|=`",null,null],[12,"spans","","",261,null],[3,"OrOr","","`||`",null,null],[12,"spans","","",262,null],[3,"Pound","","`#`",null,null],[12,"spans","","",263,null],[3,"Question","","`?`",null,null],[12,"spans","","",264,null],[3,"RArrow","","`->`",null,null],[12,"spans","","",265,null],[3,"LArrow","","`<-`",null,null],[12,"spans","","",266,null],[3,"Rem","","`%`",null,null],[12,"spans","","",267,null],[3,"RemEq","","`%=`",null,null],[12,"spans","","",268,null],[3,"FatArrow","","`=>`",null,null],[12,"spans","","",269,null],[3,"Semi","","`;`",null,null],[12,"spans","","",270,null],[3,"Shl","","`<<`",null,null],[12,"spans","","",271,null],[3,"ShlEq","","`<<=`",null,null],[12,"spans","","",272,null],[3,"Shr","","`>>`",null,null],[12,"spans","","",273,null],[3,"ShrEq","","`>>=`",null,null],[12,"spans","","",274,null],[3,"Star","","`*`",null,null],[12,"spans","","",275,null],[3,"Sub","","`-`",null,null],[12,"spans","","",276,null],[3,"SubEq","","`-=`",null,null],[12,"spans","","",277,null],[3,"Tilde","","`~`",null,null],[12,"spans","","",278,null],[3,"Brace","","`{...}`",null,null],[12,"span","","",279,null],[3,"Bracket","","`[...]`",null,null],[12,"span","","",280,null],[3,"Paren","","`(...)`",null,null],[12,"span","","",281,null],[3,"Group","","None-delimited group",null,null],[12,"span","","",282,null],[8,"Token","","Marker trait for types that represent single tokens.",null,null],[11,"surround","","",279,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",280,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",281,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",282,[[["tokenstream"],["self"],["f"]]]],[11,"parse_meta","syn","Parses the content of the attribute, consisting of the…",0,[[["self"]],[["meta"],["result",["meta"]]]]],[11,"parse_args","","Parse the arguments to the attribute as a syntax tree.",0,[[["self"]],[["result"],["parse"]]]],[11,"parse_args_with","","Parse the arguments to the attribute using the given parser.",0,[[["parser"],["self"]],["result"]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",0,[[["parsestream"]],[["result",["vec"]],["vec"]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",0,[[["parsestream"]],[["result",["vec"]],["vec"]]]],[11,"path","","Returns the identifier that begins this structured meta…",150,[[["self"]],["path"]]],[11,"parse_named","","Parses a named (braced struct) field.",3,[[["parsestream"]],["result"]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",3,[[["parsestream"]],["result"]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this…",152,[[["self"]],[["iter",["field"]],["field"]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items…",152,[[["self"]],[["itermut",["field"]],["field"]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type…",56,[[["self"]],["typeparams"]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type…",56,[[["self"]],["typeparamsmut"]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime…",56,[[["self"]],["lifetimes"]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the…",56,[[["self"]],["lifetimesmut"]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant…",56,[[["self"]],["constparams"]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the…",56,[[["self"]],["constparamsmut"]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one…",56,[[["self"]],["whereclause"]]],[11,"split_for_impl","","Split a type's generics into the pieces required for…",56,[[["self"]]]],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like…",283,[[["self"]],["turbofish"]]],[11,"new","","",57,[[["lifetime"]],["self"]]],[11,"lifetime","","",88,[[["self"]],[["option",["lifetime"]],["lifetime"]]]],[11,"new","","Panics",100,[[["str"],["span"]],["self"]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",168,[[["literal"]],["self"]]],[11,"new","","",284,[[["str"],["span"]],["self"]]],[11,"value","","",284,[[["self"]],["string"]]],[11,"parse","","Parse a syntax tree node from the content of this string…",284,[[["self"]],[["result"],["parse"]]]],[11,"parse_with","","Invoke parser on the content of this string literal.",284,[[["parser"],["self"]],["result"]]],[11,"span","","",284,[[["self"]],["span"]]],[11,"set_span","","",284,[[["self"],["span"]]]],[11,"suffix","","",284,[[["self"]],["str"]]],[11,"new","","",285,[[["span"]],["self"]]],[11,"value","","",285,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"span","","",285,[[["self"]],["span"]]],[11,"set_span","","",285,[[["self"],["span"]]]],[11,"new","","",286,[[["span"],["u8"]],["self"]]],[11,"value","","",286,[[["self"]],["u8"]]],[11,"span","","",286,[[["self"]],["span"]]],[11,"set_span","","",286,[[["self"],["span"]]]],[11,"new","","",287,[[["char"],["span"]],["self"]]],[11,"value","","",287,[[["self"]],["char"]]],[11,"span","","",287,[[["self"]],["span"]]],[11,"set_span","","",287,[[["self"],["span"]]]],[11,"new","","",288,[[["str"],["span"]],["self"]]],[11,"base10_digits","","",288,[[["self"]],["str"]]],[11,"base10_parse","","Parses the literal into a selected number type.",288,[[["self"]],["result"]]],[11,"suffix","","",288,[[["self"]],["str"]]],[11,"span","","",288,[[["self"]],["span"]]],[11,"set_span","","",288,[[["self"],["span"]]]],[11,"new","","",289,[[["str"],["span"]],["self"]]],[11,"base10_digits","","",289,[[["self"]],["str"]]],[11,"base10_parse","","",289,[[["self"]],["result"]]],[11,"suffix","","",289,[[["self"]],["str"]]],[11,"span","","",289,[[["self"]],["span"]]],[11,"set_span","","",289,[[["self"],["span"]]]],[11,"parse_body","","Parse the tokens within the macro invocation's delimiters…",102,[[["self"]],[["result"],["parse"]]]],[11,"parse_body_with","","Parse the tokens within the macro invocation's delimiters…",102,[[["parser"],["self"]],["result"]]],[11,"parse_within","","Parse the body of a block as zero or more statements,…",107,[[["parsestream"]],[["result",["vec"]],["vec",["stmt"]]]]],[11,"without_plus","","In some positions, types may not contain the `+`…",176,[[["parsestream"]],["result"]]],[11,"without_plus","","",175,[[["parsestream"]],["result"]]],[11,"parse","","",175,[[["parsestream"],["bool"]],["result"]]],[11,"without_plus","","",123,[[["parsestream"]],["result"]]],[11,"parse","","",123,[[["parsestream"],["bool"]],["result"]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its…",146,[[["parsestream"]],["result"]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to the…",146,[[["i"],["self"]],["bool"]]],[11,"get_ident","","If this path consists of a single ident, returns the ident.",146,[[["self"]],[["option",["ident"]],["ident"]]]],[11,"is_empty","","",179,[[["self"]],["bool"]]],[0,"buffer","","A stably addressed token buffer supporting efficient…",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times,…",null,null],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",null,null],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the…",290,[[["tokenstream"]],["tokenbuffer"]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the…",290,[[["tokenstream"]],["tokenbuffer"]]],[11,"begin","","Creates a cursor referencing the first token in the buffer…",290,[[["self"]],["cursor"]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",291,[[],["self"]]],[11,"eof","","Checks whether the cursor is currently pointing at the end…",291,[[],["bool"]]],[11,"group","","If the cursor is pointing at a `Group` with the given…",291,[[["delimiter"]],["option"]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along…",291,[[],["option"]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along…",291,[[],["option"]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along…",291,[[],["option"]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it…",291,[[],["option"]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into…",291,[[],["tokenstream"]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it…",291,[[],["option"]]],[11,"span","","Returns the `Span` of the current token, or…",291,[[],["span"]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",null,null],[8,"IdentExt","syn::ext","Additional methods for `Ident` not provided by proc-macro2…",null,null],[10,"parse_any","","Parses any identifier including keywords.",292,[[["parsestream"]],["result"]]],[18,"peek_any","","Peeks any identifier including keywords. Usage:…",292,null],[10,"unraw","","Strips the raw marker `r#`, if any, from the beginning of…",292,[[["self"]],["ident"]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by…",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T`…",null,null],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut…",null,null],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",null,null],[3,"IntoIter","","An iterator over owned values of type `T`.",null,null],[3,"Iter","","An iterator over borrowed values of type `&T`.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",null,null],[4,"Pair","","A single syntax tree node of type `T` followed by its…",null,null],[13,"Punctuated","","",293,null],[13,"End","","",293,null],[11,"new","","Creates an empty punctuated sequence.",294,[[],["punctuated"]]],[11,"is_empty","","Determines whether this punctuated sequence is empty,…",294,[[["self"]],["bool"]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated…",294,[[["self"]],["usize"]]],[11,"first","","Borrows the first element in this sequence.",294,[[["self"]],[["option"],["t"]]]],[11,"last","","Borrows the last element in this sequence.",294,[[["self"]],[["option"],["t"]]]],[11,"last_mut","","Mutably borrows the last element in this sequence.",294,[[["self"]],[["t"],["option"]]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of…",294,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree…",294,[[["self"]],["itermut"]]],[11,"pairs","","Returns an iterator over the contents of this sequence as…",294,[[["self"]],["pairs"]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as…",294,[[["self"]],["pairsmut"]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as…",294,[[],["intopairs"]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated…",294,[[["self"],["t"]]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this…",294,[[["self"],["p"]]]],[11,"pop","","Removes the last punctuated pair from this sequence, or…",294,[[["self"]],[["option",["pair"]],["pair"]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a…",294,[[["self"]],["bool"]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it…",294,[[["self"]],["bool"]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated…",294,[[["self"],["t"]]]],[11,"insert","","Inserts an element at position `index`.",294,[[["self"],["usize"],["t"]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",294,[[["parsestream"]],["result"]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given…",294,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by…",294,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given…",294,[[["parsestream"]],["result"]]],[11,"into_value","","Extracts the syntax tree node from this punctuated pair,…",293,[[],["t"]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",293,[[["self"]],["t"]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated…",293,[[["self"]],["t"]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless…",293,[[["self"]],[["option"],["p"]]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an…",293,[[["t"],["option"]],["self"]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree…",293,[[]]],[0,"spanned","syn","A trait that can provide the `Span` of the complete…",null,null],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete…",null,null],[10,"span","","Returns a `Span` covering the complete contents of this…",295,[[["self"]],["span"]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",null,null],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input…",null,null],[3,"Lookahead1","","Support for checking the next token in a stream to decide…",null,null],[3,"ParseBuffer","","Cursor position within a buffered token stream.",null,null],[3,"StepCursor","","Cursor state associated with speculative parsing.",null,null],[3,"Nothing","","An empty syntax tree node that consumes no tokens when…",null,null],[0,"discouraged","","Extensions to the parsing API with niche applicability.",null,null],[8,"Speculative","syn::parse::discouraged","Extensions to the `ParseStream` API to support speculative…",null,null],[10,"advance_to","","Advance this parse stream to the position of a forked…",296,[[["self"]]]],[6,"Result","syn::parse","The result of a Syn parser.",null,null],[6,"ParseStream","","Input to a Syn parser function.",null,null],[8,"Peek","","Types that can be parsed by looking at just one token.",null,null],[8,"Parse","","Parsing interface implemented by all types that can be…",null,null],[10,"parse","","",297,[[["parsestream"]],["result"]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax…",null,null],[16,"Output","","",298,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",298,[[["tokenstream"]],["result"]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree…",298,[[["tokenstream"]],["result"]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",298,[[["str"]],["result"]]],[11,"error","","Triggers an error at the current position of the parse…",299,[[["display"]],["error"]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the…",300,[[["self"]],[["result"],["parse"]]]],[11,"call","","Calls the given parser function to parse a syntax tree…",300,[[["self"]],["result"]]],[11,"peek","","Looks at the next token in the parse stream to determine…",300,[[["self"],["peek"]],["bool"]]],[11,"peek2","","Looks at the second-next token in the parse stream.",300,[[["self"],["peek"]],["bool"]]],[11,"peek3","","Looks at the third-next token in the parse stream.",300,[[["self"],["peek"]],["bool"]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",300,[[["self"]],[["punctuated"],["result",["punctuated"]]]]],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",300,[[["self"]],["bool"]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this…",300,[[["self"]],["lookahead1"]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either…",300,[[["self"]],["self"]]],[11,"error","","Triggers an error at the current position of the parse…",300,[[["self"],["display"]],["error"]]],[11,"step","","Speculatively parses tokens from this parse stream,…",300,[[["self"],["f"]],["result"]]],[11,"cursor","","Provides low-level access to the token representation…",300,[[["self"]],["cursor"]]],[11,"new","syn","Usually the [`ParseStream::error`] method will be used…",301,[[["display"],["span"]],["self"]]],[11,"new_spanned","","Creates an error with the specified message spanning the…",301,[[["totokens"],["display"]],["self"]]],[11,"span","","The source location of the error.",301,[[["self"]],["span"]]],[11,"to_compile_error","","Render the error as an invocation of [`compile_error!`].",301,[[["self"]],["tokenstream"]]],[11,"combine","","Add another error message to self such that when…",301,[[["error"],["self"]]]],[6,"AttributeArgs","","Conventional argument type associated with an invocation…",null,null],[6,"Result","","The result of a Syn parser.",null,null],[14,"parenthesized","","Parse a set of parentheses and expose their content to…",null,null],[14,"braced","","Parse a set of curly braces and expose their content to…",null,null],[14,"bracketed","","Parse a set of square brackets and expose their content to…",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type…",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the…",null,null],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a…",null,null],[14,"custom_keyword","","Define a type that supports parsing and printing a given…",null,null],[14,"custom_punctuation","","Define a type that supports parsing and printing a…",null,null],[11,"peek","","",302,[[["cursor"]],["bool"]]],[11,"display","","",302,[[],["str"]]],[11,"span","","",302,[[["self"]],["span"]]],[11,"from","","",302,[[["t"]],["t"]]],[11,"into","","",302,[[],["u"]]],[11,"to_owned","","",302,[[["self"]],["t"]]],[11,"clone_into","","",302,[[["self"],["t"]]]],[11,"to_string","","",302,[[["self"]],["string"]]],[11,"try_from","","",302,[[["u"]],["result"]]],[11,"try_into","","",302,[[],["result"]]],[11,"borrow","","",302,[[["self"]],["t"]]],[11,"borrow_mut","","",302,[[["self"]],["t"]]],[11,"type_id","","",302,[[["self"]],["typeid"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"span","","",1,[[["self"]],["span"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"span","","",2,[[["self"]],["span"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"span","","",3,[[["self"]],["span"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"span","","",5,[[["self"]],["span"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"span","","",6,[[["self"]],["span"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"span","","",7,[[["self"]],["span"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"span","","",8,[[["self"]],["span"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"span","","",9,[[["self"]],["span"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"span","","",10,[[["self"]],["span"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"span","","",11,[[["self"]],["span"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"span","","",12,[[["self"]],["span"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"span","","",13,[[["self"]],["span"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"span","","",14,[[["self"]],["span"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"span","","",15,[[["self"]],["span"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"span","","",16,[[["self"]],["span"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"span","","",17,[[["self"]],["span"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"span","","",18,[[["self"]],["span"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"span","","",19,[[["self"]],["span"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"span","","",20,[[["self"]],["span"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"span","","",21,[[["self"]],["span"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"span","","",22,[[["self"]],["span"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"span","","",23,[[["self"]],["span"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"span","","",24,[[["self"]],["span"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"span","","",25,[[["self"]],["span"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"span","","",26,[[["self"]],["span"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"span","","",27,[[["self"]],["span"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"span","","",28,[[["self"]],["span"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"span","","",29,[[["self"]],["span"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"span","","",30,[[["self"]],["span"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"span","","",31,[[["self"]],["span"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"span","","",32,[[["self"]],["span"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"span","","",33,[[["self"]],["span"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"span","","",34,[[["self"]],["span"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"span","","",35,[[["self"]],["span"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"span","","",36,[[["self"]],["span"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"span","","",37,[[["self"]],["span"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"span","","",38,[[["self"]],["span"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"span","","",39,[[["self"]],["span"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"span","","",40,[[["self"]],["span"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"span","","",41,[[["self"]],["span"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"span","","",42,[[["self"]],["span"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"span","","",43,[[["self"]],["span"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"span","","",44,[[["self"]],["span"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"span","","",45,[[["self"]],["span"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"span","","",46,[[["self"]],["span"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"span","","",47,[[["self"]],["span"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"span","","",48,[[["self"]],["span"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"span","","",49,[[["self"]],["span"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"span","","",50,[[["self"]],["span"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"span","","",51,[[["self"]],["span"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"span","","",52,[[["self"]],["span"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"span","","",53,[[["self"]],["span"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"span","","",54,[[["self"]],["span"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"span","","",55,[[["self"]],["span"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"span","","",56,[[["self"]],["span"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"span","","",57,[[["self"]],["span"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"span","","",58,[[["self"]],["span"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"span","","",59,[[["self"]],["span"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"span","","",60,[[["self"]],["span"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"span","","",61,[[["self"]],["span"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"span","","",62,[[["self"]],["span"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"span","","",63,[[["self"]],["span"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"span","","",303,[[["self"]],["span"]]],[11,"from","","",303,[[["t"]],["t"]]],[11,"into","","",303,[[],["u"]]],[11,"to_owned","","",303,[[["self"]],["t"]]],[11,"clone_into","","",303,[[["self"],["t"]]]],[11,"try_from","","",303,[[["u"]],["result"]]],[11,"try_into","","",303,[[],["result"]]],[11,"borrow","","",303,[[["self"]],["t"]]],[11,"borrow_mut","","",303,[[["self"]],["t"]]],[11,"type_id","","",303,[[["self"]],["typeid"]]],[11,"span","","",304,[[["self"]],["span"]]],[11,"from","","",304,[[["t"]],["t"]]],[11,"into","","",304,[[],["u"]]],[11,"to_owned","","",304,[[["self"]],["t"]]],[11,"clone_into","","",304,[[["self"],["t"]]]],[11,"try_from","","",304,[[["u"]],["result"]]],[11,"try_into","","",304,[[],["result"]]],[11,"borrow","","",304,[[["self"]],["t"]]],[11,"borrow_mut","","",304,[[["self"]],["t"]]],[11,"type_id","","",304,[[["self"]],["typeid"]]],[11,"span","","",283,[[["self"]],["span"]]],[11,"from","","",283,[[["t"]],["t"]]],[11,"into","","",283,[[],["u"]]],[11,"to_owned","","",283,[[["self"]],["t"]]],[11,"clone_into","","",283,[[["self"],["t"]]]],[11,"try_from","","",283,[[["u"]],["result"]]],[11,"try_into","","",283,[[],["result"]]],[11,"borrow","","",283,[[["self"]],["t"]]],[11,"borrow_mut","","",283,[[["self"]],["t"]]],[11,"type_id","","",283,[[["self"]],["typeid"]]],[11,"span","","",64,[[["self"]],["span"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"span","","",65,[[["self"]],["span"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"span","","",66,[[["self"]],["span"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"span","","",67,[[["self"]],["span"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"span","","",68,[[["self"]],["span"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"span","","",69,[[["self"]],["span"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"span","","",70,[[["self"]],["span"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"span","","",71,[[["self"]],["span"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"span","","",72,[[["self"]],["span"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"span","","",73,[[["self"]],["span"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"span","","",74,[[["self"]],["span"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"span","","",75,[[["self"]],["span"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"span","","",76,[[["self"]],["span"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"span","","",77,[[["self"]],["span"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"span","","",78,[[["self"]],["span"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"span","","",79,[[["self"]],["span"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"span","","",80,[[["self"]],["span"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"span","","",81,[[["self"]],["span"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"span","","",82,[[["self"]],["span"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"span","","",83,[[["self"]],["span"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"span","","",84,[[["self"]],["span"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"span","","",85,[[["self"]],["span"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"span","","",86,[[["self"]],["span"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"span","","",87,[[["self"]],["span"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"span","","",88,[[["self"]],["span"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"span","","",89,[[["self"]],["span"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"span","","",90,[[["self"]],["span"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"span","","",91,[[["self"]],["span"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"span","","",92,[[["self"]],["span"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,[[["self"],["t"]]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"span","","",93,[[["self"]],["span"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,[[["self"],["t"]]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"span","","",94,[[["self"]],["span"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"span","","",95,[[["self"]],["span"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,[[["self"],["t"]]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"span","","",96,[[["self"]],["span"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"span","","",97,[[["self"]],["span"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"span","","",98,[[["self"]],["span"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"span","","",99,[[["self"]],["span"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"span","","",100,[[["self"]],["span"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"to_string","","",100,[[["self"]],["string"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"span","","",101,[[["self"]],["span"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"peek","","",286,[[["cursor"]],["bool"]]],[11,"display","","",286,[[],["str"]]],[11,"span","","",286,[[["self"]],["span"]]],[11,"from","","",286,[[["t"]],["t"]]],[11,"into","","",286,[[],["u"]]],[11,"to_owned","","",286,[[["self"]],["t"]]],[11,"clone_into","","",286,[[["self"],["t"]]]],[11,"try_from","","",286,[[["u"]],["result"]]],[11,"try_into","","",286,[[],["result"]]],[11,"borrow","","",286,[[["self"]],["t"]]],[11,"borrow_mut","","",286,[[["self"]],["t"]]],[11,"type_id","","",286,[[["self"]],["typeid"]]],[11,"peek","","",285,[[["cursor"]],["bool"]]],[11,"display","","",285,[[],["str"]]],[11,"span","","",285,[[["self"]],["span"]]],[11,"from","","",285,[[["t"]],["t"]]],[11,"into","","",285,[[],["u"]]],[11,"to_owned","","",285,[[["self"]],["t"]]],[11,"clone_into","","",285,[[["self"],["t"]]]],[11,"try_from","","",285,[[["u"]],["result"]]],[11,"try_into","","",285,[[],["result"]]],[11,"borrow","","",285,[[["self"]],["t"]]],[11,"borrow_mut","","",285,[[["self"]],["t"]]],[11,"type_id","","",285,[[["self"]],["typeid"]]],[11,"peek","","",287,[[["cursor"]],["bool"]]],[11,"display","","",287,[[],["str"]]],[11,"span","","",287,[[["self"]],["span"]]],[11,"from","","",287,[[["t"]],["t"]]],[11,"into","","",287,[[],["u"]]],[11,"to_owned","","",287,[[["self"]],["t"]]],[11,"clone_into","","",287,[[["self"],["t"]]]],[11,"try_from","","",287,[[["u"]],["result"]]],[11,"try_into","","",287,[[],["result"]]],[11,"borrow","","",287,[[["self"]],["t"]]],[11,"borrow_mut","","",287,[[["self"]],["t"]]],[11,"type_id","","",287,[[["self"]],["typeid"]]],[11,"peek","","",289,[[["cursor"]],["bool"]]],[11,"display","","",289,[[],["str"]]],[11,"span","","",289,[[["self"]],["span"]]],[11,"from","","",289,[[["t"]],["t"]]],[11,"into","","",289,[[],["u"]]],[11,"to_owned","","",289,[[["self"]],["t"]]],[11,"clone_into","","",289,[[["self"],["t"]]]],[11,"to_string","","",289,[[["self"]],["string"]]],[11,"try_from","","",289,[[["u"]],["result"]]],[11,"try_into","","",289,[[],["result"]]],[11,"borrow","","",289,[[["self"]],["t"]]],[11,"borrow_mut","","",289,[[["self"]],["t"]]],[11,"type_id","","",289,[[["self"]],["typeid"]]],[11,"peek","","",288,[[["cursor"]],["bool"]]],[11,"display","","",288,[[],["str"]]],[11,"span","","",288,[[["self"]],["span"]]],[11,"from","","",288,[[["t"]],["t"]]],[11,"into","","",288,[[],["u"]]],[11,"to_owned","","",288,[[["self"]],["t"]]],[11,"clone_into","","",288,[[["self"],["t"]]]],[11,"to_string","","",288,[[["self"]],["string"]]],[11,"try_from","","",288,[[["u"]],["result"]]],[11,"try_into","","",288,[[],["result"]]],[11,"borrow","","",288,[[["self"]],["t"]]],[11,"borrow_mut","","",288,[[["self"]],["t"]]],[11,"type_id","","",288,[[["self"]],["typeid"]]],[11,"peek","","",284,[[["cursor"]],["bool"]]],[11,"display","","",284,[[],["str"]]],[11,"span","","",284,[[["self"]],["span"]]],[11,"from","","",284,[[["t"]],["t"]]],[11,"into","","",284,[[],["u"]]],[11,"to_owned","","",284,[[["self"]],["t"]]],[11,"clone_into","","",284,[[["self"],["t"]]]],[11,"try_from","","",284,[[["u"]],["result"]]],[11,"try_into","","",284,[[],["result"]]],[11,"borrow","","",284,[[["self"]],["t"]]],[11,"borrow_mut","","",284,[[["self"]],["t"]]],[11,"type_id","","",284,[[["self"]],["typeid"]]],[11,"span","","",102,[[["self"]],["span"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,[[["self"],["t"]]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"span","","",106,[[["self"]],["span"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"span","","",107,[[["self"]],["span"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,[[["self"],["t"]]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"span","","",108,[[["self"]],["span"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,[[["self"],["t"]]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"span","","",109,[[["self"]],["span"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,[[["self"],["t"]]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"span","","",110,[[["self"]],["span"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,[[["self"],["t"]]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"span","","",111,[[["self"]],["span"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,[[["self"],["t"]]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"span","","",112,[[["self"]],["span"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,[[["self"],["t"]]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"span","","",113,[[["self"]],["span"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,[[["self"],["t"]]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"span","","",114,[[["self"]],["span"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,[[["self"],["t"]]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"span","","",115,[[["self"]],["span"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,[[["self"],["t"]]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"span","","",116,[[["self"]],["span"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,[[["self"],["t"]]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"span","","",117,[[["self"]],["span"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,[[["self"],["t"]]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"span","","",118,[[["self"]],["span"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,[[["self"],["t"]]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"span","","",119,[[["self"]],["span"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,[[["self"],["t"]]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"span","","",120,[[["self"]],["span"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,[[["self"],["t"]]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"span","","",121,[[["self"]],["span"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,[[["self"],["t"]]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"span","","",122,[[["self"]],["span"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,[[["self"],["t"]]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"span","","",123,[[["self"]],["span"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,[[["self"],["t"]]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"span","","",124,[[["self"]],["span"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,[[["self"],["t"]]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"span","","",125,[[["self"]],["span"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,[[["self"],["t"]]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"span","","",126,[[["self"]],["span"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,[[["self"],["t"]]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"span","","",127,[[["self"]],["span"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,[[["self"],["t"]]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,[[["self"],["t"]]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"span","","",129,[[["self"]],["span"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,[[["self"],["t"]]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"span","","",130,[[["self"]],["span"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,[[["self"],["t"]]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"span","","",131,[[["self"]],["span"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,[[["self"],["t"]]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"span","","",132,[[["self"]],["span"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,[[["self"],["t"]]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"span","","",133,[[["self"]],["span"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,[[["self"],["t"]]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"span","","",134,[[["self"]],["span"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,[[["self"],["t"]]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"span","","",135,[[["self"]],["span"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,[[["self"],["t"]]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"span","","",136,[[["self"]],["span"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,[[["self"],["t"]]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"span","","",137,[[["self"]],["span"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,[[["self"],["t"]]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"span","","",138,[[["self"]],["span"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,[[["self"],["t"]]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"span","","",139,[[["self"]],["span"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,[[["self"],["t"]]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"span","","",140,[[["self"]],["span"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,[[["self"],["t"]]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"span","","",141,[[["self"]],["span"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,[[["self"],["t"]]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"span","","",142,[[["self"]],["span"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,[[["self"],["t"]]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"span","","",143,[[["self"]],["span"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,[[["self"],["t"]]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"span","","",144,[[["self"]],["span"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,[[["self"],["t"]]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"span","","",145,[[["self"]],["span"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,[[["self"],["t"]]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"span","","",146,[[["self"]],["span"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,[[["self"],["t"]]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"span","","",147,[[["self"]],["span"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,[[["self"],["t"]]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,[[["self"],["t"]]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"from","","",301,[[["t"]],["t"]]],[11,"into","","",301,[[],["u"]]],[11,"into_iter","","",301,[[],["i"]]],[11,"to_owned","","",301,[[["self"]],["t"]]],[11,"clone_into","","",301,[[["self"],["t"]]]],[11,"to_string","","",301,[[["self"]],["string"]]],[11,"try_from","","",301,[[["u"]],["result"]]],[11,"try_into","","",301,[[],["result"]]],[11,"borrow","","",301,[[["self"]],["t"]]],[11,"borrow_mut","","",301,[[["self"]],["t"]]],[11,"type_id","","",301,[[["self"]],["typeid"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,[[["self"],["t"]]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"span","","",150,[[["self"]],["span"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,[[["self"],["t"]]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"span","","",151,[[["self"]],["span"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,[[["self"],["t"]]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"span","","",152,[[["self"]],["span"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[],["u"]]],[11,"into_iter","","",152,[[],["i"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,[[["self"],["t"]]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"span","","",153,[[["self"]],["span"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,[[["self"],["t"]]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"span","","",154,[[["self"]],["span"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,[[["self"],["t"]]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,[[["self"],["t"]]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"span","","",156,[[["self"]],["span"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[],["u"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,[[["self"],["t"]]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"span","","",157,[[["self"]],["span"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,[[["self"],["t"]]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"span","","",158,[[["self"]],["span"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,[[["self"],["t"]]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"span","","",159,[[["self"]],["span"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,[[["self"],["t"]]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"span","","",160,[[["self"]],["span"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,[[["self"],["t"]]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"span","","",161,[[["self"]],["span"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,[[["self"],["t"]]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"span","","",162,[[["self"]],["span"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,[[["self"],["t"]]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"span","","",163,[[["self"]],["span"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,[[["self"],["t"]]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"span","","",164,[[["self"]],["span"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[],["u"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,[[["self"],["t"]]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"span","","",165,[[["self"]],["span"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,[[["self"],["t"]]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"span","","",166,[[["self"]],["span"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,[[["self"],["t"]]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"span","","",167,[[["self"]],["span"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,[[["self"],["t"]]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"span","","",168,[[["self"]],["span"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,[[["self"],["t"]]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,[[["self"],["t"]]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,[[["self"],["t"]]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,[[["self"],["t"]]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"span","","",172,[[["self"]],["span"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,[[["self"],["t"]]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"span","","",173,[[["self"]],["span"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,[[["self"],["t"]]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"span","","",174,[[["self"]],["span"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[],["u"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,[[["self"],["t"]]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"span","","",175,[[["self"]],["span"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,[[["self"],["t"]]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"span","","",176,[[["self"]],["span"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,[[["self"],["t"]]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"span","","",177,[[["self"]],["span"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,[[["self"],["t"]]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"span","","",178,[[["self"]],["span"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,[[["self"],["t"]]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"span","","",179,[[["self"]],["span"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,[[["self"],["t"]]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"peek","syn::token","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"span","","",180,[[["self"]],["span"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,[[["self"],["t"]]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"try_into","","",180,[[],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"type_id","","",180,[[["self"]],["typeid"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"span","","",181,[[["self"]],["span"]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,[[["self"],["t"]]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"try_into","","",181,[[],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"type_id","","",181,[[["self"]],["typeid"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"span","","",182,[[["self"]],["span"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[],["u"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,[[["self"],["t"]]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"try_into","","",182,[[],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"type_id","","",182,[[["self"]],["typeid"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"span","","",183,[[["self"]],["span"]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,[[["self"],["t"]]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"try_into","","",183,[[],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"type_id","","",183,[[["self"]],["typeid"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"span","","",184,[[["self"]],["span"]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[],["u"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,[[["self"],["t"]]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"try_into","","",184,[[],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"type_id","","",184,[[["self"]],["typeid"]]],[11,"peek","","",185,[[["cursor"]],["bool"]]],[11,"display","","",185,[[],["str"]]],[11,"span","","",185,[[["self"]],["span"]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[],["u"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,[[["self"],["t"]]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"try_into","","",185,[[],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"type_id","","",185,[[["self"]],["typeid"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"span","","",186,[[["self"]],["span"]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[],["u"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,[[["self"],["t"]]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"try_into","","",186,[[],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"type_id","","",186,[[["self"]],["typeid"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"span","","",187,[[["self"]],["span"]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[],["u"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,[[["self"],["t"]]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"try_into","","",187,[[],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"type_id","","",187,[[["self"]],["typeid"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"span","","",188,[[["self"]],["span"]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[],["u"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,[[["self"],["t"]]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"try_into","","",188,[[],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"type_id","","",188,[[["self"]],["typeid"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"span","","",189,[[["self"]],["span"]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,[[["self"],["t"]]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"try_into","","",189,[[],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"type_id","","",189,[[["self"]],["typeid"]]],[11,"peek","","",190,[[["cursor"]],["bool"]]],[11,"display","","",190,[[],["str"]]],[11,"span","","",190,[[["self"]],["span"]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[],["u"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,[[["self"],["t"]]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"try_into","","",190,[[],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"type_id","","",190,[[["self"]],["typeid"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[],["u"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,[[["self"],["t"]]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"try_into","","",191,[[],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"type_id","","",191,[[["self"]],["typeid"]]],[11,"peek","","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"span","","",192,[[["self"]],["span"]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"into","","",192,[[],["u"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,[[["self"],["t"]]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"try_into","","",192,[[],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"type_id","","",192,[[["self"]],["typeid"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"span","","",193,[[["self"]],["span"]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,[[["self"],["t"]]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"try_into","","",193,[[],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"type_id","","",193,[[["self"]],["typeid"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"span","","",194,[[["self"]],["span"]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"into","","",194,[[],["u"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,[[["self"],["t"]]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"try_into","","",194,[[],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"type_id","","",194,[[["self"]],["typeid"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[],["u"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,[[["self"],["t"]]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"try_into","","",195,[[],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"type_id","","",195,[[["self"]],["typeid"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"span","","",196,[[["self"]],["span"]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[],["u"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,[[["self"],["t"]]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"try_into","","",196,[[],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"type_id","","",196,[[["self"]],["typeid"]]],[11,"peek","","",197,[[["cursor"]],["bool"]]],[11,"display","","",197,[[],["str"]]],[11,"span","","",197,[[["self"]],["span"]]],[11,"from","","",197,[[["t"]],["t"]]],[11,"into","","",197,[[],["u"]]],[11,"to_owned","","",197,[[["self"]],["t"]]],[11,"clone_into","","",197,[[["self"],["t"]]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"try_into","","",197,[[],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"type_id","","",197,[[["self"]],["typeid"]]],[11,"peek","","",198,[[["cursor"]],["bool"]]],[11,"display","","",198,[[],["str"]]],[11,"span","","",198,[[["self"]],["span"]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[],["u"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,[[["self"],["t"]]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"try_into","","",198,[[],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"type_id","","",198,[[["self"]],["typeid"]]],[11,"peek","","",199,[[["cursor"]],["bool"]]],[11,"display","","",199,[[],["str"]]],[11,"span","","",199,[[["self"]],["span"]]],[11,"from","","",199,[[["t"]],["t"]]],[11,"into","","",199,[[],["u"]]],[11,"to_owned","","",199,[[["self"]],["t"]]],[11,"clone_into","","",199,[[["self"],["t"]]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"try_into","","",199,[[],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"type_id","","",199,[[["self"]],["typeid"]]],[11,"peek","","",200,[[["cursor"]],["bool"]]],[11,"display","","",200,[[],["str"]]],[11,"span","","",200,[[["self"]],["span"]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[],["u"]]],[11,"to_owned","","",200,[[["self"]],["t"]]],[11,"clone_into","","",200,[[["self"],["t"]]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"try_into","","",200,[[],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"type_id","","",200,[[["self"]],["typeid"]]],[11,"peek","","",201,[[["cursor"]],["bool"]]],[11,"display","","",201,[[],["str"]]],[11,"span","","",201,[[["self"]],["span"]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"into","","",201,[[],["u"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,[[["self"],["t"]]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"try_into","","",201,[[],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"type_id","","",201,[[["self"]],["typeid"]]],[11,"peek","","",202,[[["cursor"]],["bool"]]],[11,"display","","",202,[[],["str"]]],[11,"span","","",202,[[["self"]],["span"]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"into","","",202,[[],["u"]]],[11,"to_owned","","",202,[[["self"]],["t"]]],[11,"clone_into","","",202,[[["self"],["t"]]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"try_into","","",202,[[],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"type_id","","",202,[[["self"]],["typeid"]]],[11,"peek","","",203,[[["cursor"]],["bool"]]],[11,"display","","",203,[[],["str"]]],[11,"span","","",203,[[["self"]],["span"]]],[11,"from","","",203,[[["t"]],["t"]]],[11,"into","","",203,[[],["u"]]],[11,"to_owned","","",203,[[["self"]],["t"]]],[11,"clone_into","","",203,[[["self"],["t"]]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"try_into","","",203,[[],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"type_id","","",203,[[["self"]],["typeid"]]],[11,"peek","","",204,[[["cursor"]],["bool"]]],[11,"display","","",204,[[],["str"]]],[11,"span","","",204,[[["self"]],["span"]]],[11,"from","","",204,[[["t"]],["t"]]],[11,"into","","",204,[[],["u"]]],[11,"to_owned","","",204,[[["self"]],["t"]]],[11,"clone_into","","",204,[[["self"],["t"]]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"try_into","","",204,[[],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"type_id","","",204,[[["self"]],["typeid"]]],[11,"peek","","",205,[[["cursor"]],["bool"]]],[11,"display","","",205,[[],["str"]]],[11,"span","","",205,[[["self"]],["span"]]],[11,"from","","",205,[[["t"]],["t"]]],[11,"into","","",205,[[],["u"]]],[11,"to_owned","","",205,[[["self"]],["t"]]],[11,"clone_into","","",205,[[["self"],["t"]]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"try_into","","",205,[[],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"type_id","","",205,[[["self"]],["typeid"]]],[11,"peek","","",206,[[["cursor"]],["bool"]]],[11,"display","","",206,[[],["str"]]],[11,"span","","",206,[[["self"]],["span"]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"into","","",206,[[],["u"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,[[["self"],["t"]]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"try_into","","",206,[[],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"type_id","","",206,[[["self"]],["typeid"]]],[11,"peek","","",207,[[["cursor"]],["bool"]]],[11,"display","","",207,[[],["str"]]],[11,"span","","",207,[[["self"]],["span"]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"into","","",207,[[],["u"]]],[11,"to_owned","","",207,[[["self"]],["t"]]],[11,"clone_into","","",207,[[["self"],["t"]]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"try_into","","",207,[[],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"type_id","","",207,[[["self"]],["typeid"]]],[11,"peek","","",208,[[["cursor"]],["bool"]]],[11,"display","","",208,[[],["str"]]],[11,"span","","",208,[[["self"]],["span"]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"into","","",208,[[],["u"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,[[["self"],["t"]]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"try_into","","",208,[[],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"type_id","","",208,[[["self"]],["typeid"]]],[11,"peek","","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"span","","",209,[[["self"]],["span"]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"into","","",209,[[],["u"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,[[["self"],["t"]]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"try_into","","",209,[[],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"type_id","","",209,[[["self"]],["typeid"]]],[11,"peek","","",210,[[["cursor"]],["bool"]]],[11,"display","","",210,[[],["str"]]],[11,"span","","",210,[[["self"]],["span"]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"into","","",210,[[],["u"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,[[["self"],["t"]]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"try_into","","",210,[[],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"type_id","","",210,[[["self"]],["typeid"]]],[11,"peek","","",211,[[["cursor"]],["bool"]]],[11,"display","","",211,[[],["str"]]],[11,"span","","",211,[[["self"]],["span"]]],[11,"from","","",211,[[["t"]],["t"]]],[11,"into","","",211,[[],["u"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,[[["self"],["t"]]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"try_into","","",211,[[],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"type_id","","",211,[[["self"]],["typeid"]]],[11,"peek","","",212,[[["cursor"]],["bool"]]],[11,"display","","",212,[[],["str"]]],[11,"span","","",212,[[["self"]],["span"]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"into","","",212,[[],["u"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,[[["self"],["t"]]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"try_into","","",212,[[],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"type_id","","",212,[[["self"]],["typeid"]]],[11,"peek","","",213,[[["cursor"]],["bool"]]],[11,"display","","",213,[[],["str"]]],[11,"span","","",213,[[["self"]],["span"]]],[11,"from","","",213,[[["t"]],["t"]]],[11,"into","","",213,[[],["u"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,[[["self"],["t"]]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"try_into","","",213,[[],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"type_id","","",213,[[["self"]],["typeid"]]],[11,"peek","","",214,[[["cursor"]],["bool"]]],[11,"display","","",214,[[],["str"]]],[11,"span","","",214,[[["self"]],["span"]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"into","","",214,[[],["u"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,[[["self"],["t"]]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"try_into","","",214,[[],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"type_id","","",214,[[["self"]],["typeid"]]],[11,"peek","","",215,[[["cursor"]],["bool"]]],[11,"display","","",215,[[],["str"]]],[11,"span","","",215,[[["self"]],["span"]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"into","","",215,[[],["u"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,[[["self"],["t"]]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"try_into","","",215,[[],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"type_id","","",215,[[["self"]],["typeid"]]],[11,"peek","","",216,[[["cursor"]],["bool"]]],[11,"display","","",216,[[],["str"]]],[11,"span","","",216,[[["self"]],["span"]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"into","","",216,[[],["u"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,[[["self"],["t"]]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"try_into","","",216,[[],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"type_id","","",216,[[["self"]],["typeid"]]],[11,"peek","","",217,[[["cursor"]],["bool"]]],[11,"display","","",217,[[],["str"]]],[11,"span","","",217,[[["self"]],["span"]]],[11,"from","","",217,[[["t"]],["t"]]],[11,"into","","",217,[[],["u"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,[[["self"],["t"]]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"try_into","","",217,[[],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"type_id","","",217,[[["self"]],["typeid"]]],[11,"peek","","",218,[[["cursor"]],["bool"]]],[11,"display","","",218,[[],["str"]]],[11,"span","","",218,[[["self"]],["span"]]],[11,"from","","",218,[[["t"]],["t"]]],[11,"into","","",218,[[],["u"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,[[["self"],["t"]]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"try_into","","",218,[[],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"type_id","","",218,[[["self"]],["typeid"]]],[11,"peek","","",219,[[["cursor"]],["bool"]]],[11,"display","","",219,[[],["str"]]],[11,"span","","",219,[[["self"]],["span"]]],[11,"from","","",219,[[["t"]],["t"]]],[11,"into","","",219,[[],["u"]]],[11,"to_owned","","",219,[[["self"]],["t"]]],[11,"clone_into","","",219,[[["self"],["t"]]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"try_into","","",219,[[],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"type_id","","",219,[[["self"]],["typeid"]]],[11,"peek","","",220,[[["cursor"]],["bool"]]],[11,"display","","",220,[[],["str"]]],[11,"span","","",220,[[["self"]],["span"]]],[11,"from","","",220,[[["t"]],["t"]]],[11,"into","","",220,[[],["u"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,[[["self"],["t"]]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"try_into","","",220,[[],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"type_id","","",220,[[["self"]],["typeid"]]],[11,"peek","","",221,[[["cursor"]],["bool"]]],[11,"display","","",221,[[],["str"]]],[11,"span","","",221,[[["self"]],["span"]]],[11,"from","","",221,[[["t"]],["t"]]],[11,"into","","",221,[[],["u"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,[[["self"],["t"]]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"try_into","","",221,[[],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"type_id","","",221,[[["self"]],["typeid"]]],[11,"peek","","",222,[[["cursor"]],["bool"]]],[11,"display","","",222,[[],["str"]]],[11,"span","","",222,[[["self"]],["span"]]],[11,"from","","",222,[[["t"]],["t"]]],[11,"into","","",222,[[],["u"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,[[["self"],["t"]]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"try_into","","",222,[[],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"type_id","","",222,[[["self"]],["typeid"]]],[11,"peek","","",223,[[["cursor"]],["bool"]]],[11,"display","","",223,[[],["str"]]],[11,"span","","",223,[[["self"]],["span"]]],[11,"from","","",223,[[["t"]],["t"]]],[11,"into","","",223,[[],["u"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,[[["self"],["t"]]]],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"try_into","","",223,[[],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"type_id","","",223,[[["self"]],["typeid"]]],[11,"peek","","",224,[[["cursor"]],["bool"]]],[11,"display","","",224,[[],["str"]]],[11,"span","","",224,[[["self"]],["span"]]],[11,"from","","",224,[[["t"]],["t"]]],[11,"into","","",224,[[],["u"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,[[["self"],["t"]]]],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"try_into","","",224,[[],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"type_id","","",224,[[["self"]],["typeid"]]],[11,"peek","","",225,[[["cursor"]],["bool"]]],[11,"display","","",225,[[],["str"]]],[11,"span","","",225,[[["self"]],["span"]]],[11,"from","","",225,[[["t"]],["t"]]],[11,"into","","",225,[[],["u"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,[[["self"],["t"]]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"try_into","","",225,[[],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"type_id","","",225,[[["self"]],["typeid"]]],[11,"peek","","",226,[[["cursor"]],["bool"]]],[11,"display","","",226,[[],["str"]]],[11,"span","","",226,[[["self"]],["span"]]],[11,"from","","",226,[[["t"]],["t"]]],[11,"into","","",226,[[],["u"]]],[11,"to_owned","","",226,[[["self"]],["t"]]],[11,"clone_into","","",226,[[["self"],["t"]]]],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"try_into","","",226,[[],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"type_id","","",226,[[["self"]],["typeid"]]],[11,"peek","","",227,[[["cursor"]],["bool"]]],[11,"display","","",227,[[],["str"]]],[11,"span","","",227,[[["self"]],["span"]]],[11,"from","","",227,[[["t"]],["t"]]],[11,"into","","",227,[[],["u"]]],[11,"to_owned","","",227,[[["self"]],["t"]]],[11,"clone_into","","",227,[[["self"],["t"]]]],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"try_into","","",227,[[],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"type_id","","",227,[[["self"]],["typeid"]]],[11,"peek","","",228,[[["cursor"]],["bool"]]],[11,"display","","",228,[[],["str"]]],[11,"span","","",228,[[["self"]],["span"]]],[11,"from","","",228,[[["t"]],["t"]]],[11,"into","","",228,[[],["u"]]],[11,"to_owned","","",228,[[["self"]],["t"]]],[11,"clone_into","","",228,[[["self"],["t"]]]],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"try_into","","",228,[[],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"type_id","","",228,[[["self"]],["typeid"]]],[11,"peek","","",229,[[["cursor"]],["bool"]]],[11,"display","","",229,[[],["str"]]],[11,"span","","",229,[[["self"]],["span"]]],[11,"from","","",229,[[["t"]],["t"]]],[11,"into","","",229,[[],["u"]]],[11,"to_owned","","",229,[[["self"]],["t"]]],[11,"clone_into","","",229,[[["self"],["t"]]]],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"try_into","","",229,[[],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"type_id","","",229,[[["self"]],["typeid"]]],[11,"peek","","",230,[[["cursor"]],["bool"]]],[11,"display","","",230,[[],["str"]]],[11,"span","","",230,[[["self"]],["span"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"into","","",230,[[],["u"]]],[11,"to_owned","","",230,[[["self"]],["t"]]],[11,"clone_into","","",230,[[["self"],["t"]]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"try_into","","",230,[[],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"type_id","","",230,[[["self"]],["typeid"]]],[11,"peek","","",231,[[["cursor"]],["bool"]]],[11,"display","","",231,[[],["str"]]],[11,"span","","",231,[[["self"]],["span"]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"into","","",231,[[],["u"]]],[11,"to_owned","","",231,[[["self"]],["t"]]],[11,"clone_into","","",231,[[["self"],["t"]]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"try_into","","",231,[[],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"type_id","","",231,[[["self"]],["typeid"]]],[11,"peek","","",232,[[["cursor"]],["bool"]]],[11,"display","","",232,[[],["str"]]],[11,"span","","",232,[[["self"]],["span"]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"into","","",232,[[],["u"]]],[11,"to_owned","","",232,[[["self"]],["t"]]],[11,"clone_into","","",232,[[["self"],["t"]]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"try_into","","",232,[[],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"type_id","","",232,[[["self"]],["typeid"]]],[11,"peek","","",233,[[["cursor"]],["bool"]]],[11,"display","","",233,[[],["str"]]],[11,"span","","",233,[[["self"]],["span"]]],[11,"from","","",233,[[["t"]],["t"]]],[11,"into","","",233,[[],["u"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,[[["self"],["t"]]]],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"try_into","","",233,[[],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"type_id","","",233,[[["self"]],["typeid"]]],[11,"peek","","",234,[[["cursor"]],["bool"]]],[11,"display","","",234,[[],["str"]]],[11,"span","","",234,[[["self"]],["span"]]],[11,"from","","",234,[[["t"]],["t"]]],[11,"into","","",234,[[],["u"]]],[11,"to_owned","","",234,[[["self"]],["t"]]],[11,"clone_into","","",234,[[["self"],["t"]]]],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"try_into","","",234,[[],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"type_id","","",234,[[["self"]],["typeid"]]],[11,"peek","","",235,[[["cursor"]],["bool"]]],[11,"display","","",235,[[],["str"]]],[11,"span","","",235,[[["self"]],["span"]]],[11,"from","","",235,[[["t"]],["t"]]],[11,"into","","",235,[[],["u"]]],[11,"to_owned","","",235,[[["self"]],["t"]]],[11,"clone_into","","",235,[[["self"],["t"]]]],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"try_into","","",235,[[],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"type_id","","",235,[[["self"]],["typeid"]]],[11,"peek","","",236,[[["cursor"]],["bool"]]],[11,"display","","",236,[[],["str"]]],[11,"span","","",236,[[["self"]],["span"]]],[11,"from","","",236,[[["t"]],["t"]]],[11,"into","","",236,[[],["u"]]],[11,"to_owned","","",236,[[["self"]],["t"]]],[11,"clone_into","","",236,[[["self"],["t"]]]],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"try_into","","",236,[[],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"type_id","","",236,[[["self"]],["typeid"]]],[11,"peek","","",237,[[["cursor"]],["bool"]]],[11,"display","","",237,[[],["str"]]],[11,"span","","",237,[[["self"]],["span"]]],[11,"from","","",237,[[["t"]],["t"]]],[11,"into","","",237,[[],["u"]]],[11,"to_owned","","",237,[[["self"]],["t"]]],[11,"clone_into","","",237,[[["self"],["t"]]]],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"try_into","","",237,[[],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"type_id","","",237,[[["self"]],["typeid"]]],[11,"peek","","",238,[[["cursor"]],["bool"]]],[11,"display","","",238,[[],["str"]]],[11,"span","","",238,[[["self"]],["span"]]],[11,"from","","",238,[[["t"]],["t"]]],[11,"into","","",238,[[],["u"]]],[11,"to_owned","","",238,[[["self"]],["t"]]],[11,"clone_into","","",238,[[["self"],["t"]]]],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"try_into","","",238,[[],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"type_id","","",238,[[["self"]],["typeid"]]],[11,"peek","","",239,[[["cursor"]],["bool"]]],[11,"display","","",239,[[],["str"]]],[11,"span","","",239,[[["self"]],["span"]]],[11,"from","","",239,[[["t"]],["t"]]],[11,"into","","",239,[[],["u"]]],[11,"to_owned","","",239,[[["self"]],["t"]]],[11,"clone_into","","",239,[[["self"],["t"]]]],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"try_into","","",239,[[],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"type_id","","",239,[[["self"]],["typeid"]]],[11,"peek","","",240,[[["cursor"]],["bool"]]],[11,"display","","",240,[[],["str"]]],[11,"span","","",240,[[["self"]],["span"]]],[11,"from","","",240,[[["t"]],["t"]]],[11,"into","","",240,[[],["u"]]],[11,"to_owned","","",240,[[["self"]],["t"]]],[11,"clone_into","","",240,[[["self"],["t"]]]],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"try_into","","",240,[[],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"type_id","","",240,[[["self"]],["typeid"]]],[11,"peek","","",241,[[["cursor"]],["bool"]]],[11,"display","","",241,[[],["str"]]],[11,"span","","",241,[[["self"]],["span"]]],[11,"from","","",241,[[["t"]],["t"]]],[11,"into","","",241,[[],["u"]]],[11,"to_owned","","",241,[[["self"]],["t"]]],[11,"clone_into","","",241,[[["self"],["t"]]]],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"try_into","","",241,[[],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"type_id","","",241,[[["self"]],["typeid"]]],[11,"peek","","",242,[[["cursor"]],["bool"]]],[11,"display","","",242,[[],["str"]]],[11,"span","","",242,[[["self"]],["span"]]],[11,"from","","",242,[[["t"]],["t"]]],[11,"into","","",242,[[],["u"]]],[11,"to_owned","","",242,[[["self"]],["t"]]],[11,"clone_into","","",242,[[["self"],["t"]]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"try_into","","",242,[[],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"type_id","","",242,[[["self"]],["typeid"]]],[11,"peek","","",243,[[["cursor"]],["bool"]]],[11,"display","","",243,[[],["str"]]],[11,"span","","",243,[[["self"]],["span"]]],[11,"from","","",243,[[["t"]],["t"]]],[11,"into","","",243,[[],["u"]]],[11,"to_owned","","",243,[[["self"]],["t"]]],[11,"clone_into","","",243,[[["self"],["t"]]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"try_into","","",243,[[],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"type_id","","",243,[[["self"]],["typeid"]]],[11,"peek","","",244,[[["cursor"]],["bool"]]],[11,"display","","",244,[[],["str"]]],[11,"span","","",244,[[["self"]],["span"]]],[11,"from","","",244,[[["t"]],["t"]]],[11,"into","","",244,[[],["u"]]],[11,"to_owned","","",244,[[["self"]],["t"]]],[11,"clone_into","","",244,[[["self"],["t"]]]],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"try_into","","",244,[[],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"type_id","","",244,[[["self"]],["typeid"]]],[11,"peek","","",245,[[["cursor"]],["bool"]]],[11,"display","","",245,[[],["str"]]],[11,"span","","",245,[[["self"]],["span"]]],[11,"from","","",245,[[["t"]],["t"]]],[11,"into","","",245,[[],["u"]]],[11,"to_owned","","",245,[[["self"]],["t"]]],[11,"clone_into","","",245,[[["self"],["t"]]]],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"try_into","","",245,[[],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"type_id","","",245,[[["self"]],["typeid"]]],[11,"peek","","",246,[[["cursor"]],["bool"]]],[11,"display","","",246,[[],["str"]]],[11,"span","","",246,[[["self"]],["span"]]],[11,"from","","",246,[[["t"]],["t"]]],[11,"into","","",246,[[],["u"]]],[11,"to_owned","","",246,[[["self"]],["t"]]],[11,"clone_into","","",246,[[["self"],["t"]]]],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"try_into","","",246,[[],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"type_id","","",246,[[["self"]],["typeid"]]],[11,"peek","","",247,[[["cursor"]],["bool"]]],[11,"display","","",247,[[],["str"]]],[11,"span","","",247,[[["self"]],["span"]]],[11,"from","","",247,[[["t"]],["t"]]],[11,"into","","",247,[[],["u"]]],[11,"to_owned","","",247,[[["self"]],["t"]]],[11,"clone_into","","",247,[[["self"],["t"]]]],[11,"try_from","","",247,[[["u"]],["result"]]],[11,"try_into","","",247,[[],["result"]]],[11,"borrow","","",247,[[["self"]],["t"]]],[11,"borrow_mut","","",247,[[["self"]],["t"]]],[11,"type_id","","",247,[[["self"]],["typeid"]]],[11,"peek","","",248,[[["cursor"]],["bool"]]],[11,"display","","",248,[[],["str"]]],[11,"span","","",248,[[["self"]],["span"]]],[11,"from","","",248,[[["t"]],["t"]]],[11,"into","","",248,[[],["u"]]],[11,"to_owned","","",248,[[["self"]],["t"]]],[11,"clone_into","","",248,[[["self"],["t"]]]],[11,"try_from","","",248,[[["u"]],["result"]]],[11,"try_into","","",248,[[],["result"]]],[11,"borrow","","",248,[[["self"]],["t"]]],[11,"borrow_mut","","",248,[[["self"]],["t"]]],[11,"type_id","","",248,[[["self"]],["typeid"]]],[11,"peek","","",249,[[["cursor"]],["bool"]]],[11,"display","","",249,[[],["str"]]],[11,"span","","",249,[[["self"]],["span"]]],[11,"from","","",249,[[["t"]],["t"]]],[11,"into","","",249,[[],["u"]]],[11,"to_owned","","",249,[[["self"]],["t"]]],[11,"clone_into","","",249,[[["self"],["t"]]]],[11,"try_from","","",249,[[["u"]],["result"]]],[11,"try_into","","",249,[[],["result"]]],[11,"borrow","","",249,[[["self"]],["t"]]],[11,"borrow_mut","","",249,[[["self"]],["t"]]],[11,"type_id","","",249,[[["self"]],["typeid"]]],[11,"peek","","",250,[[["cursor"]],["bool"]]],[11,"display","","",250,[[],["str"]]],[11,"span","","",250,[[["self"]],["span"]]],[11,"from","","",250,[[["t"]],["t"]]],[11,"into","","",250,[[],["u"]]],[11,"to_owned","","",250,[[["self"]],["t"]]],[11,"clone_into","","",250,[[["self"],["t"]]]],[11,"try_from","","",250,[[["u"]],["result"]]],[11,"try_into","","",250,[[],["result"]]],[11,"borrow","","",250,[[["self"]],["t"]]],[11,"borrow_mut","","",250,[[["self"]],["t"]]],[11,"type_id","","",250,[[["self"]],["typeid"]]],[11,"peek","","",251,[[["cursor"]],["bool"]]],[11,"display","","",251,[[],["str"]]],[11,"span","","",251,[[["self"]],["span"]]],[11,"from","","",251,[[["t"]],["t"]]],[11,"into","","",251,[[],["u"]]],[11,"to_owned","","",251,[[["self"]],["t"]]],[11,"clone_into","","",251,[[["self"],["t"]]]],[11,"try_from","","",251,[[["u"]],["result"]]],[11,"try_into","","",251,[[],["result"]]],[11,"borrow","","",251,[[["self"]],["t"]]],[11,"borrow_mut","","",251,[[["self"]],["t"]]],[11,"type_id","","",251,[[["self"]],["typeid"]]],[11,"peek","","",252,[[["cursor"]],["bool"]]],[11,"display","","",252,[[],["str"]]],[11,"span","","",252,[[["self"]],["span"]]],[11,"from","","",252,[[["t"]],["t"]]],[11,"into","","",252,[[],["u"]]],[11,"to_owned","","",252,[[["self"]],["t"]]],[11,"clone_into","","",252,[[["self"],["t"]]]],[11,"try_from","","",252,[[["u"]],["result"]]],[11,"try_into","","",252,[[],["result"]]],[11,"borrow","","",252,[[["self"]],["t"]]],[11,"borrow_mut","","",252,[[["self"]],["t"]]],[11,"type_id","","",252,[[["self"]],["typeid"]]],[11,"peek","","",253,[[["cursor"]],["bool"]]],[11,"display","","",253,[[],["str"]]],[11,"span","","",253,[[["self"]],["span"]]],[11,"from","","",253,[[["t"]],["t"]]],[11,"into","","",253,[[],["u"]]],[11,"to_owned","","",253,[[["self"]],["t"]]],[11,"clone_into","","",253,[[["self"],["t"]]]],[11,"try_from","","",253,[[["u"]],["result"]]],[11,"try_into","","",253,[[],["result"]]],[11,"borrow","","",253,[[["self"]],["t"]]],[11,"borrow_mut","","",253,[[["self"]],["t"]]],[11,"type_id","","",253,[[["self"]],["typeid"]]],[11,"peek","","",254,[[["cursor"]],["bool"]]],[11,"display","","",254,[[],["str"]]],[11,"span","","",254,[[["self"]],["span"]]],[11,"from","","",254,[[["t"]],["t"]]],[11,"into","","",254,[[],["u"]]],[11,"to_owned","","",254,[[["self"]],["t"]]],[11,"clone_into","","",254,[[["self"],["t"]]]],[11,"try_from","","",254,[[["u"]],["result"]]],[11,"try_into","","",254,[[],["result"]]],[11,"borrow","","",254,[[["self"]],["t"]]],[11,"borrow_mut","","",254,[[["self"]],["t"]]],[11,"type_id","","",254,[[["self"]],["typeid"]]],[11,"peek","","",255,[[["cursor"]],["bool"]]],[11,"display","","",255,[[],["str"]]],[11,"span","","",255,[[["self"]],["span"]]],[11,"from","","",255,[[["t"]],["t"]]],[11,"into","","",255,[[],["u"]]],[11,"to_owned","","",255,[[["self"]],["t"]]],[11,"clone_into","","",255,[[["self"],["t"]]]],[11,"try_from","","",255,[[["u"]],["result"]]],[11,"try_into","","",255,[[],["result"]]],[11,"borrow","","",255,[[["self"]],["t"]]],[11,"borrow_mut","","",255,[[["self"]],["t"]]],[11,"type_id","","",255,[[["self"]],["typeid"]]],[11,"peek","","",256,[[["cursor"]],["bool"]]],[11,"display","","",256,[[],["str"]]],[11,"span","","",256,[[["self"]],["span"]]],[11,"from","","",256,[[["t"]],["t"]]],[11,"into","","",256,[[],["u"]]],[11,"to_owned","","",256,[[["self"]],["t"]]],[11,"clone_into","","",256,[[["self"],["t"]]]],[11,"try_from","","",256,[[["u"]],["result"]]],[11,"try_into","","",256,[[],["result"]]],[11,"borrow","","",256,[[["self"]],["t"]]],[11,"borrow_mut","","",256,[[["self"]],["t"]]],[11,"type_id","","",256,[[["self"]],["typeid"]]],[11,"peek","","",257,[[["cursor"]],["bool"]]],[11,"display","","",257,[[],["str"]]],[11,"span","","",257,[[["self"]],["span"]]],[11,"from","","",257,[[["t"]],["t"]]],[11,"into","","",257,[[],["u"]]],[11,"to_owned","","",257,[[["self"]],["t"]]],[11,"clone_into","","",257,[[["self"],["t"]]]],[11,"try_from","","",257,[[["u"]],["result"]]],[11,"try_into","","",257,[[],["result"]]],[11,"borrow","","",257,[[["self"]],["t"]]],[11,"borrow_mut","","",257,[[["self"]],["t"]]],[11,"type_id","","",257,[[["self"]],["typeid"]]],[11,"peek","","",258,[[["cursor"]],["bool"]]],[11,"display","","",258,[[],["str"]]],[11,"span","","",258,[[["self"]],["span"]]],[11,"from","","",258,[[["t"]],["t"]]],[11,"into","","",258,[[],["u"]]],[11,"to_owned","","",258,[[["self"]],["t"]]],[11,"clone_into","","",258,[[["self"],["t"]]]],[11,"try_from","","",258,[[["u"]],["result"]]],[11,"try_into","","",258,[[],["result"]]],[11,"borrow","","",258,[[["self"]],["t"]]],[11,"borrow_mut","","",258,[[["self"]],["t"]]],[11,"type_id","","",258,[[["self"]],["typeid"]]],[11,"peek","","",259,[[["cursor"]],["bool"]]],[11,"display","","",259,[[],["str"]]],[11,"span","","",259,[[["self"]],["span"]]],[11,"from","","",259,[[["t"]],["t"]]],[11,"into","","",259,[[],["u"]]],[11,"to_owned","","",259,[[["self"]],["t"]]],[11,"clone_into","","",259,[[["self"],["t"]]]],[11,"try_from","","",259,[[["u"]],["result"]]],[11,"try_into","","",259,[[],["result"]]],[11,"borrow","","",259,[[["self"]],["t"]]],[11,"borrow_mut","","",259,[[["self"]],["t"]]],[11,"type_id","","",259,[[["self"]],["typeid"]]],[11,"peek","","",260,[[["cursor"]],["bool"]]],[11,"display","","",260,[[],["str"]]],[11,"span","","",260,[[["self"]],["span"]]],[11,"from","","",260,[[["t"]],["t"]]],[11,"into","","",260,[[],["u"]]],[11,"to_owned","","",260,[[["self"]],["t"]]],[11,"clone_into","","",260,[[["self"],["t"]]]],[11,"try_from","","",260,[[["u"]],["result"]]],[11,"try_into","","",260,[[],["result"]]],[11,"borrow","","",260,[[["self"]],["t"]]],[11,"borrow_mut","","",260,[[["self"]],["t"]]],[11,"type_id","","",260,[[["self"]],["typeid"]]],[11,"peek","","",261,[[["cursor"]],["bool"]]],[11,"display","","",261,[[],["str"]]],[11,"span","","",261,[[["self"]],["span"]]],[11,"from","","",261,[[["t"]],["t"]]],[11,"into","","",261,[[],["u"]]],[11,"to_owned","","",261,[[["self"]],["t"]]],[11,"clone_into","","",261,[[["self"],["t"]]]],[11,"try_from","","",261,[[["u"]],["result"]]],[11,"try_into","","",261,[[],["result"]]],[11,"borrow","","",261,[[["self"]],["t"]]],[11,"borrow_mut","","",261,[[["self"]],["t"]]],[11,"type_id","","",261,[[["self"]],["typeid"]]],[11,"peek","","",262,[[["cursor"]],["bool"]]],[11,"display","","",262,[[],["str"]]],[11,"span","","",262,[[["self"]],["span"]]],[11,"from","","",262,[[["t"]],["t"]]],[11,"into","","",262,[[],["u"]]],[11,"to_owned","","",262,[[["self"]],["t"]]],[11,"clone_into","","",262,[[["self"],["t"]]]],[11,"try_from","","",262,[[["u"]],["result"]]],[11,"try_into","","",262,[[],["result"]]],[11,"borrow","","",262,[[["self"]],["t"]]],[11,"borrow_mut","","",262,[[["self"]],["t"]]],[11,"type_id","","",262,[[["self"]],["typeid"]]],[11,"peek","","",263,[[["cursor"]],["bool"]]],[11,"display","","",263,[[],["str"]]],[11,"span","","",263,[[["self"]],["span"]]],[11,"from","","",263,[[["t"]],["t"]]],[11,"into","","",263,[[],["u"]]],[11,"to_owned","","",263,[[["self"]],["t"]]],[11,"clone_into","","",263,[[["self"],["t"]]]],[11,"try_from","","",263,[[["u"]],["result"]]],[11,"try_into","","",263,[[],["result"]]],[11,"borrow","","",263,[[["self"]],["t"]]],[11,"borrow_mut","","",263,[[["self"]],["t"]]],[11,"type_id","","",263,[[["self"]],["typeid"]]],[11,"peek","","",264,[[["cursor"]],["bool"]]],[11,"display","","",264,[[],["str"]]],[11,"span","","",264,[[["self"]],["span"]]],[11,"from","","",264,[[["t"]],["t"]]],[11,"into","","",264,[[],["u"]]],[11,"to_owned","","",264,[[["self"]],["t"]]],[11,"clone_into","","",264,[[["self"],["t"]]]],[11,"try_from","","",264,[[["u"]],["result"]]],[11,"try_into","","",264,[[],["result"]]],[11,"borrow","","",264,[[["self"]],["t"]]],[11,"borrow_mut","","",264,[[["self"]],["t"]]],[11,"type_id","","",264,[[["self"]],["typeid"]]],[11,"peek","","",265,[[["cursor"]],["bool"]]],[11,"display","","",265,[[],["str"]]],[11,"span","","",265,[[["self"]],["span"]]],[11,"from","","",265,[[["t"]],["t"]]],[11,"into","","",265,[[],["u"]]],[11,"to_owned","","",265,[[["self"]],["t"]]],[11,"clone_into","","",265,[[["self"],["t"]]]],[11,"try_from","","",265,[[["u"]],["result"]]],[11,"try_into","","",265,[[],["result"]]],[11,"borrow","","",265,[[["self"]],["t"]]],[11,"borrow_mut","","",265,[[["self"]],["t"]]],[11,"type_id","","",265,[[["self"]],["typeid"]]],[11,"peek","","",266,[[["cursor"]],["bool"]]],[11,"display","","",266,[[],["str"]]],[11,"span","","",266,[[["self"]],["span"]]],[11,"from","","",266,[[["t"]],["t"]]],[11,"into","","",266,[[],["u"]]],[11,"to_owned","","",266,[[["self"]],["t"]]],[11,"clone_into","","",266,[[["self"],["t"]]]],[11,"try_from","","",266,[[["u"]],["result"]]],[11,"try_into","","",266,[[],["result"]]],[11,"borrow","","",266,[[["self"]],["t"]]],[11,"borrow_mut","","",266,[[["self"]],["t"]]],[11,"type_id","","",266,[[["self"]],["typeid"]]],[11,"peek","","",267,[[["cursor"]],["bool"]]],[11,"display","","",267,[[],["str"]]],[11,"span","","",267,[[["self"]],["span"]]],[11,"from","","",267,[[["t"]],["t"]]],[11,"into","","",267,[[],["u"]]],[11,"to_owned","","",267,[[["self"]],["t"]]],[11,"clone_into","","",267,[[["self"],["t"]]]],[11,"try_from","","",267,[[["u"]],["result"]]],[11,"try_into","","",267,[[],["result"]]],[11,"borrow","","",267,[[["self"]],["t"]]],[11,"borrow_mut","","",267,[[["self"]],["t"]]],[11,"type_id","","",267,[[["self"]],["typeid"]]],[11,"peek","","",268,[[["cursor"]],["bool"]]],[11,"display","","",268,[[],["str"]]],[11,"span","","",268,[[["self"]],["span"]]],[11,"from","","",268,[[["t"]],["t"]]],[11,"into","","",268,[[],["u"]]],[11,"to_owned","","",268,[[["self"]],["t"]]],[11,"clone_into","","",268,[[["self"],["t"]]]],[11,"try_from","","",268,[[["u"]],["result"]]],[11,"try_into","","",268,[[],["result"]]],[11,"borrow","","",268,[[["self"]],["t"]]],[11,"borrow_mut","","",268,[[["self"]],["t"]]],[11,"type_id","","",268,[[["self"]],["typeid"]]],[11,"peek","","",269,[[["cursor"]],["bool"]]],[11,"display","","",269,[[],["str"]]],[11,"span","","",269,[[["self"]],["span"]]],[11,"from","","",269,[[["t"]],["t"]]],[11,"into","","",269,[[],["u"]]],[11,"to_owned","","",269,[[["self"]],["t"]]],[11,"clone_into","","",269,[[["self"],["t"]]]],[11,"try_from","","",269,[[["u"]],["result"]]],[11,"try_into","","",269,[[],["result"]]],[11,"borrow","","",269,[[["self"]],["t"]]],[11,"borrow_mut","","",269,[[["self"]],["t"]]],[11,"type_id","","",269,[[["self"]],["typeid"]]],[11,"peek","","",270,[[["cursor"]],["bool"]]],[11,"display","","",270,[[],["str"]]],[11,"span","","",270,[[["self"]],["span"]]],[11,"from","","",270,[[["t"]],["t"]]],[11,"into","","",270,[[],["u"]]],[11,"to_owned","","",270,[[["self"]],["t"]]],[11,"clone_into","","",270,[[["self"],["t"]]]],[11,"try_from","","",270,[[["u"]],["result"]]],[11,"try_into","","",270,[[],["result"]]],[11,"borrow","","",270,[[["self"]],["t"]]],[11,"borrow_mut","","",270,[[["self"]],["t"]]],[11,"type_id","","",270,[[["self"]],["typeid"]]],[11,"peek","","",271,[[["cursor"]],["bool"]]],[11,"display","","",271,[[],["str"]]],[11,"span","","",271,[[["self"]],["span"]]],[11,"from","","",271,[[["t"]],["t"]]],[11,"into","","",271,[[],["u"]]],[11,"to_owned","","",271,[[["self"]],["t"]]],[11,"clone_into","","",271,[[["self"],["t"]]]],[11,"try_from","","",271,[[["u"]],["result"]]],[11,"try_into","","",271,[[],["result"]]],[11,"borrow","","",271,[[["self"]],["t"]]],[11,"borrow_mut","","",271,[[["self"]],["t"]]],[11,"type_id","","",271,[[["self"]],["typeid"]]],[11,"peek","","",272,[[["cursor"]],["bool"]]],[11,"display","","",272,[[],["str"]]],[11,"span","","",272,[[["self"]],["span"]]],[11,"from","","",272,[[["t"]],["t"]]],[11,"into","","",272,[[],["u"]]],[11,"to_owned","","",272,[[["self"]],["t"]]],[11,"clone_into","","",272,[[["self"],["t"]]]],[11,"try_from","","",272,[[["u"]],["result"]]],[11,"try_into","","",272,[[],["result"]]],[11,"borrow","","",272,[[["self"]],["t"]]],[11,"borrow_mut","","",272,[[["self"]],["t"]]],[11,"type_id","","",272,[[["self"]],["typeid"]]],[11,"peek","","",273,[[["cursor"]],["bool"]]],[11,"display","","",273,[[],["str"]]],[11,"span","","",273,[[["self"]],["span"]]],[11,"from","","",273,[[["t"]],["t"]]],[11,"into","","",273,[[],["u"]]],[11,"to_owned","","",273,[[["self"]],["t"]]],[11,"clone_into","","",273,[[["self"],["t"]]]],[11,"try_from","","",273,[[["u"]],["result"]]],[11,"try_into","","",273,[[],["result"]]],[11,"borrow","","",273,[[["self"]],["t"]]],[11,"borrow_mut","","",273,[[["self"]],["t"]]],[11,"type_id","","",273,[[["self"]],["typeid"]]],[11,"peek","","",274,[[["cursor"]],["bool"]]],[11,"display","","",274,[[],["str"]]],[11,"span","","",274,[[["self"]],["span"]]],[11,"from","","",274,[[["t"]],["t"]]],[11,"into","","",274,[[],["u"]]],[11,"to_owned","","",274,[[["self"]],["t"]]],[11,"clone_into","","",274,[[["self"],["t"]]]],[11,"try_from","","",274,[[["u"]],["result"]]],[11,"try_into","","",274,[[],["result"]]],[11,"borrow","","",274,[[["self"]],["t"]]],[11,"borrow_mut","","",274,[[["self"]],["t"]]],[11,"type_id","","",274,[[["self"]],["typeid"]]],[11,"peek","","",275,[[["cursor"]],["bool"]]],[11,"display","","",275,[[],["str"]]],[11,"span","","",275,[[["self"]],["span"]]],[11,"from","","",275,[[["t"]],["t"]]],[11,"into","","",275,[[],["u"]]],[11,"to_owned","","",275,[[["self"]],["t"]]],[11,"clone_into","","",275,[[["self"],["t"]]]],[11,"try_from","","",275,[[["u"]],["result"]]],[11,"try_into","","",275,[[],["result"]]],[11,"borrow","","",275,[[["self"]],["t"]]],[11,"borrow_mut","","",275,[[["self"]],["t"]]],[11,"type_id","","",275,[[["self"]],["typeid"]]],[11,"peek","","",276,[[["cursor"]],["bool"]]],[11,"display","","",276,[[],["str"]]],[11,"span","","",276,[[["self"]],["span"]]],[11,"from","","",276,[[["t"]],["t"]]],[11,"into","","",276,[[],["u"]]],[11,"to_owned","","",276,[[["self"]],["t"]]],[11,"clone_into","","",276,[[["self"],["t"]]]],[11,"try_from","","",276,[[["u"]],["result"]]],[11,"try_into","","",276,[[],["result"]]],[11,"borrow","","",276,[[["self"]],["t"]]],[11,"borrow_mut","","",276,[[["self"]],["t"]]],[11,"type_id","","",276,[[["self"]],["typeid"]]],[11,"peek","","",277,[[["cursor"]],["bool"]]],[11,"display","","",277,[[],["str"]]],[11,"span","","",277,[[["self"]],["span"]]],[11,"from","","",277,[[["t"]],["t"]]],[11,"into","","",277,[[],["u"]]],[11,"to_owned","","",277,[[["self"]],["t"]]],[11,"clone_into","","",277,[[["self"],["t"]]]],[11,"try_from","","",277,[[["u"]],["result"]]],[11,"try_into","","",277,[[],["result"]]],[11,"borrow","","",277,[[["self"]],["t"]]],[11,"borrow_mut","","",277,[[["self"]],["t"]]],[11,"type_id","","",277,[[["self"]],["typeid"]]],[11,"peek","","",278,[[["cursor"]],["bool"]]],[11,"display","","",278,[[],["str"]]],[11,"span","","",278,[[["self"]],["span"]]],[11,"from","","",278,[[["t"]],["t"]]],[11,"into","","",278,[[],["u"]]],[11,"to_owned","","",278,[[["self"]],["t"]]],[11,"clone_into","","",278,[[["self"],["t"]]]],[11,"try_from","","",278,[[["u"]],["result"]]],[11,"try_into","","",278,[[],["result"]]],[11,"borrow","","",278,[[["self"]],["t"]]],[11,"borrow_mut","","",278,[[["self"]],["t"]]],[11,"type_id","","",278,[[["self"]],["typeid"]]],[11,"peek","","",279,[[["cursor"]],["bool"]]],[11,"display","","",279,[[],["str"]]],[11,"from","","",279,[[["t"]],["t"]]],[11,"into","","",279,[[],["u"]]],[11,"to_owned","","",279,[[["self"]],["t"]]],[11,"clone_into","","",279,[[["self"],["t"]]]],[11,"try_from","","",279,[[["u"]],["result"]]],[11,"try_into","","",279,[[],["result"]]],[11,"borrow","","",279,[[["self"]],["t"]]],[11,"borrow_mut","","",279,[[["self"]],["t"]]],[11,"type_id","","",279,[[["self"]],["typeid"]]],[11,"peek","","",280,[[["cursor"]],["bool"]]],[11,"display","","",280,[[],["str"]]],[11,"from","","",280,[[["t"]],["t"]]],[11,"into","","",280,[[],["u"]]],[11,"to_owned","","",280,[[["self"]],["t"]]],[11,"clone_into","","",280,[[["self"],["t"]]]],[11,"try_from","","",280,[[["u"]],["result"]]],[11,"try_into","","",280,[[],["result"]]],[11,"borrow","","",280,[[["self"]],["t"]]],[11,"borrow_mut","","",280,[[["self"]],["t"]]],[11,"type_id","","",280,[[["self"]],["typeid"]]],[11,"peek","","",281,[[["cursor"]],["bool"]]],[11,"display","","",281,[[],["str"]]],[11,"from","","",281,[[["t"]],["t"]]],[11,"into","","",281,[[],["u"]]],[11,"to_owned","","",281,[[["self"]],["t"]]],[11,"clone_into","","",281,[[["self"],["t"]]]],[11,"try_from","","",281,[[["u"]],["result"]]],[11,"try_into","","",281,[[],["result"]]],[11,"borrow","","",281,[[["self"]],["t"]]],[11,"borrow_mut","","",281,[[["self"]],["t"]]],[11,"type_id","","",281,[[["self"]],["typeid"]]],[11,"peek","","",282,[[["cursor"]],["bool"]]],[11,"display","","",282,[[],["str"]]],[11,"from","","",282,[[["t"]],["t"]]],[11,"into","","",282,[[],["u"]]],[11,"to_owned","","",282,[[["self"]],["t"]]],[11,"clone_into","","",282,[[["self"],["t"]]]],[11,"try_from","","",282,[[["u"]],["result"]]],[11,"try_into","","",282,[[],["result"]]],[11,"borrow","","",282,[[["self"]],["t"]]],[11,"borrow_mut","","",282,[[["self"]],["t"]]],[11,"type_id","","",282,[[["self"]],["typeid"]]],[11,"from","syn::buffer","",290,[[["t"]],["t"]]],[11,"into","","",290,[[],["u"]]],[11,"try_from","","",290,[[["u"]],["result"]]],[11,"try_into","","",290,[[],["result"]]],[11,"borrow","","",290,[[["self"]],["t"]]],[11,"borrow_mut","","",290,[[["self"]],["t"]]],[11,"type_id","","",290,[[["self"]],["typeid"]]],[11,"from","","",291,[[["t"]],["t"]]],[11,"into","","",291,[[],["u"]]],[11,"to_owned","","",291,[[["self"]],["t"]]],[11,"clone_into","","",291,[[["self"],["t"]]]],[11,"try_from","","",291,[[["u"]],["result"]]],[11,"try_into","","",291,[[],["result"]]],[11,"borrow","","",291,[[["self"]],["t"]]],[11,"borrow_mut","","",291,[[["self"]],["t"]]],[11,"type_id","","",291,[[["self"]],["typeid"]]],[11,"span","syn::punctuated","",294,[[["self"]],["span"]]],[11,"from","","",294,[[["t"]],["t"]]],[11,"into","","",294,[[],["u"]]],[11,"into_iter","","",294,[[],["i"]]],[11,"to_owned","","",294,[[["self"]],["t"]]],[11,"clone_into","","",294,[[["self"],["t"]]]],[11,"try_from","","",294,[[["u"]],["result"]]],[11,"try_into","","",294,[[],["result"]]],[11,"borrow","","",294,[[["self"]],["t"]]],[11,"borrow_mut","","",294,[[["self"]],["t"]]],[11,"type_id","","",294,[[["self"]],["typeid"]]],[11,"from","","",305,[[["t"]],["t"]]],[11,"into","","",305,[[],["u"]]],[11,"into_iter","","",305,[[],["i"]]],[11,"to_owned","","",305,[[["self"]],["t"]]],[11,"clone_into","","",305,[[["self"],["t"]]]],[11,"try_from","","",305,[[["u"]],["result"]]],[11,"try_into","","",305,[[],["result"]]],[11,"borrow","","",305,[[["self"]],["t"]]],[11,"borrow_mut","","",305,[[["self"]],["t"]]],[11,"type_id","","",305,[[["self"]],["typeid"]]],[11,"from","","",306,[[["t"]],["t"]]],[11,"into","","",306,[[],["u"]]],[11,"into_iter","","",306,[[],["i"]]],[11,"try_from","","",306,[[["u"]],["result"]]],[11,"try_into","","",306,[[],["result"]]],[11,"borrow","","",306,[[["self"]],["t"]]],[11,"borrow_mut","","",306,[[["self"]],["t"]]],[11,"type_id","","",306,[[["self"]],["typeid"]]],[11,"from","","",307,[[["t"]],["t"]]],[11,"into","","",307,[[],["u"]]],[11,"into_iter","","",307,[[],["i"]]],[11,"to_owned","","",307,[[["self"]],["t"]]],[11,"clone_into","","",307,[[["self"],["t"]]]],[11,"try_from","","",307,[[["u"]],["result"]]],[11,"try_into","","",307,[[],["result"]]],[11,"borrow","","",307,[[["self"]],["t"]]],[11,"borrow_mut","","",307,[[["self"]],["t"]]],[11,"type_id","","",307,[[["self"]],["typeid"]]],[11,"from","","",308,[[["t"]],["t"]]],[11,"into","","",308,[[],["u"]]],[11,"into_iter","","",308,[[],["i"]]],[11,"to_owned","","",308,[[["self"]],["t"]]],[11,"clone_into","","",308,[[["self"],["t"]]]],[11,"try_from","","",308,[[["u"]],["result"]]],[11,"try_into","","",308,[[],["result"]]],[11,"borrow","","",308,[[["self"]],["t"]]],[11,"borrow_mut","","",308,[[["self"]],["t"]]],[11,"type_id","","",308,[[["self"]],["typeid"]]],[11,"from","","",309,[[["t"]],["t"]]],[11,"into","","",309,[[],["u"]]],[11,"into_iter","","",309,[[],["i"]]],[11,"to_owned","","",309,[[["self"]],["t"]]],[11,"clone_into","","",309,[[["self"],["t"]]]],[11,"try_from","","",309,[[["u"]],["result"]]],[11,"try_into","","",309,[[],["result"]]],[11,"borrow","","",309,[[["self"]],["t"]]],[11,"borrow_mut","","",309,[[["self"]],["t"]]],[11,"type_id","","",309,[[["self"]],["typeid"]]],[11,"from","","",310,[[["t"]],["t"]]],[11,"into","","",310,[[],["u"]]],[11,"into_iter","","",310,[[],["i"]]],[11,"try_from","","",310,[[["u"]],["result"]]],[11,"try_into","","",310,[[],["result"]]],[11,"borrow","","",310,[[["self"]],["t"]]],[11,"borrow_mut","","",310,[[["self"]],["t"]]],[11,"type_id","","",310,[[["self"]],["typeid"]]],[11,"span","","",293,[[["self"]],["span"]]],[11,"from","","",293,[[["t"]],["t"]]],[11,"into","","",293,[[],["u"]]],[11,"to_owned","","",293,[[["self"]],["t"]]],[11,"clone_into","","",293,[[["self"],["t"]]]],[11,"try_from","","",293,[[["u"]],["result"]]],[11,"try_into","","",293,[[],["result"]]],[11,"borrow","","",293,[[["self"]],["t"]]],[11,"borrow_mut","","",293,[[["self"]],["t"]]],[11,"type_id","","",293,[[["self"]],["typeid"]]],[11,"from","syn::parse","",311,[[["t"]],["t"]]],[11,"into","","",311,[[],["u"]]],[11,"try_from","","",311,[[["u"]],["result"]]],[11,"try_into","","",311,[[],["result"]]],[11,"borrow","","",311,[[["self"]],["t"]]],[11,"borrow_mut","","",311,[[["self"]],["t"]]],[11,"type_id","","",311,[[["self"]],["typeid"]]],[11,"from","","",300,[[["t"]],["t"]]],[11,"into","","",300,[[],["u"]]],[11,"to_string","","",300,[[["self"]],["string"]]],[11,"try_from","","",300,[[["u"]],["result"]]],[11,"try_into","","",300,[[],["result"]]],[11,"borrow","","",300,[[["self"]],["t"]]],[11,"borrow_mut","","",300,[[["self"]],["t"]]],[11,"type_id","","",300,[[["self"]],["typeid"]]],[11,"from","","",299,[[["t"]],["t"]]],[11,"into","","",299,[[],["u"]]],[11,"to_owned","","",299,[[["self"]],["t"]]],[11,"clone_into","","",299,[[["self"],["t"]]]],[11,"try_from","","",299,[[["u"]],["result"]]],[11,"try_into","","",299,[[],["result"]]],[11,"borrow","","",299,[[["self"]],["t"]]],[11,"borrow_mut","","",299,[[["self"]],["t"]]],[11,"type_id","","",299,[[["self"]],["typeid"]]],[11,"from","","",312,[[["t"]],["t"]]],[11,"into","","",312,[[],["u"]]],[11,"try_from","","",312,[[["u"]],["result"]]],[11,"try_into","","",312,[[],["result"]]],[11,"borrow","","",312,[[["self"]],["t"]]],[11,"borrow_mut","","",312,[[["self"]],["t"]]],[11,"type_id","","",312,[[["self"]],["typeid"]]],[11,"fmt","syn","",302,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",302,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"cmp","","",302,[[["self"],["ident"]],["ordering"]]],[11,"clone","","",302,[[["self"]],["ident"]]],[11,"hash","","",302,[[["self"],["h"]]]],[11,"eq","","",302,[[["t"],["self"]],["bool"]]],[11,"eq","","",302,[[["self"],["ident"]],["bool"]]],[11,"partial_cmp","","",302,[[["self"],["ident"]],[["ordering"],["option",["ordering"]]]]],[11,"to_tokens","","",302,[[["tokenstream"],["self"]]]],[11,"span","","",302,[[["self"]],[["option",["span"]],["span"]]]],[11,"fmt","","",302,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"peek","","",284,[[["cursor"]],["bool"]]],[11,"display","","",284,[[],["str"]]],[11,"peek","","",285,[[["cursor"]],["bool"]]],[11,"display","","",285,[[],["str"]]],[11,"peek","","",286,[[["cursor"]],["bool"]]],[11,"display","","",286,[[],["str"]]],[11,"peek","","",287,[[["cursor"]],["bool"]]],[11,"display","","",287,[[],["str"]]],[11,"peek","","",288,[[["cursor"]],["bool"]]],[11,"display","","",288,[[],["str"]]],[11,"peek","","",289,[[["cursor"]],["bool"]]],[11,"display","","",289,[[],["str"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"peek","syn::token","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"peek","","",281,[[["cursor"]],["bool"]]],[11,"display","","",281,[[],["str"]]],[11,"peek","","",279,[[["cursor"]],["bool"]]],[11,"display","","",279,[[],["str"]]],[11,"peek","","",280,[[["cursor"]],["bool"]]],[11,"display","","",280,[[],["str"]]],[11,"peek","","",282,[[["cursor"]],["bool"]]],[11,"display","","",282,[[],["str"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"peek","","",185,[[["cursor"]],["bool"]]],[11,"display","","",185,[[],["str"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"peek","","",190,[[["cursor"]],["bool"]]],[11,"display","","",190,[[],["str"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"peek","","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"peek","","",197,[[["cursor"]],["bool"]]],[11,"display","","",197,[[],["str"]]],[11,"peek","","",198,[[["cursor"]],["bool"]]],[11,"display","","",198,[[],["str"]]],[11,"peek","","",199,[[["cursor"]],["bool"]]],[11,"display","","",199,[[],["str"]]],[11,"peek","","",200,[[["cursor"]],["bool"]]],[11,"display","","",200,[[],["str"]]],[11,"peek","","",201,[[["cursor"]],["bool"]]],[11,"display","","",201,[[],["str"]]],[11,"peek","","",202,[[["cursor"]],["bool"]]],[11,"display","","",202,[[],["str"]]],[11,"peek","","",203,[[["cursor"]],["bool"]]],[11,"display","","",203,[[],["str"]]],[11,"peek","","",204,[[["cursor"]],["bool"]]],[11,"display","","",204,[[],["str"]]],[11,"peek","","",205,[[["cursor"]],["bool"]]],[11,"display","","",205,[[],["str"]]],[11,"peek","","",206,[[["cursor"]],["bool"]]],[11,"display","","",206,[[],["str"]]],[11,"peek","","",207,[[["cursor"]],["bool"]]],[11,"display","","",207,[[],["str"]]],[11,"peek","","",208,[[["cursor"]],["bool"]]],[11,"display","","",208,[[],["str"]]],[11,"peek","","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"peek","","",210,[[["cursor"]],["bool"]]],[11,"display","","",210,[[],["str"]]],[11,"peek","","",211,[[["cursor"]],["bool"]]],[11,"display","","",211,[[],["str"]]],[11,"peek","","",212,[[["cursor"]],["bool"]]],[11,"display","","",212,[[],["str"]]],[11,"peek","","",213,[[["cursor"]],["bool"]]],[11,"display","","",213,[[],["str"]]],[11,"peek","","",214,[[["cursor"]],["bool"]]],[11,"display","","",214,[[],["str"]]],[11,"peek","","",215,[[["cursor"]],["bool"]]],[11,"display","","",215,[[],["str"]]],[11,"peek","","",216,[[["cursor"]],["bool"]]],[11,"display","","",216,[[],["str"]]],[11,"peek","","",217,[[["cursor"]],["bool"]]],[11,"display","","",217,[[],["str"]]],[11,"peek","","",218,[[["cursor"]],["bool"]]],[11,"display","","",218,[[],["str"]]],[11,"peek","","",219,[[["cursor"]],["bool"]]],[11,"display","","",219,[[],["str"]]],[11,"peek","","",220,[[["cursor"]],["bool"]]],[11,"display","","",220,[[],["str"]]],[11,"peek","","",221,[[["cursor"]],["bool"]]],[11,"display","","",221,[[],["str"]]],[11,"peek","","",222,[[["cursor"]],["bool"]]],[11,"display","","",222,[[],["str"]]],[11,"peek","","",223,[[["cursor"]],["bool"]]],[11,"display","","",223,[[],["str"]]],[11,"peek","","",224,[[["cursor"]],["bool"]]],[11,"display","","",224,[[],["str"]]],[11,"peek","","",225,[[["cursor"]],["bool"]]],[11,"display","","",225,[[],["str"]]],[11,"peek","","",226,[[["cursor"]],["bool"]]],[11,"display","","",226,[[],["str"]]],[11,"peek","","",227,[[["cursor"]],["bool"]]],[11,"display","","",227,[[],["str"]]],[11,"peek","","",228,[[["cursor"]],["bool"]]],[11,"display","","",228,[[],["str"]]],[11,"peek","","",229,[[["cursor"]],["bool"]]],[11,"display","","",229,[[],["str"]]],[11,"peek","","",230,[[["cursor"]],["bool"]]],[11,"display","","",230,[[],["str"]]],[11,"peek","","",231,[[["cursor"]],["bool"]]],[11,"display","","",231,[[],["str"]]],[11,"peek","","",232,[[["cursor"]],["bool"]]],[11,"display","","",232,[[],["str"]]],[11,"peek","","",233,[[["cursor"]],["bool"]]],[11,"display","","",233,[[],["str"]]],[11,"peek","","",234,[[["cursor"]],["bool"]]],[11,"display","","",234,[[],["str"]]],[11,"peek","","",235,[[["cursor"]],["bool"]]],[11,"display","","",235,[[],["str"]]],[11,"peek","","",236,[[["cursor"]],["bool"]]],[11,"display","","",236,[[],["str"]]],[11,"peek","","",237,[[["cursor"]],["bool"]]],[11,"display","","",237,[[],["str"]]],[11,"peek","","",238,[[["cursor"]],["bool"]]],[11,"display","","",238,[[],["str"]]],[11,"peek","","",239,[[["cursor"]],["bool"]]],[11,"display","","",239,[[],["str"]]],[11,"peek","","",240,[[["cursor"]],["bool"]]],[11,"display","","",240,[[],["str"]]],[11,"peek","","",241,[[["cursor"]],["bool"]]],[11,"display","","",241,[[],["str"]]],[11,"peek","","",242,[[["cursor"]],["bool"]]],[11,"display","","",242,[[],["str"]]],[11,"peek","","",243,[[["cursor"]],["bool"]]],[11,"display","","",243,[[],["str"]]],[11,"peek","","",244,[[["cursor"]],["bool"]]],[11,"display","","",244,[[],["str"]]],[11,"peek","","",245,[[["cursor"]],["bool"]]],[11,"display","","",245,[[],["str"]]],[11,"peek","","",246,[[["cursor"]],["bool"]]],[11,"display","","",246,[[],["str"]]],[11,"peek","","",247,[[["cursor"]],["bool"]]],[11,"display","","",247,[[],["str"]]],[11,"peek","","",248,[[["cursor"]],["bool"]]],[11,"display","","",248,[[],["str"]]],[11,"peek","","",249,[[["cursor"]],["bool"]]],[11,"display","","",249,[[],["str"]]],[11,"peek","","",250,[[["cursor"]],["bool"]]],[11,"display","","",250,[[],["str"]]],[11,"peek","","",251,[[["cursor"]],["bool"]]],[11,"display","","",251,[[],["str"]]],[11,"peek","","",252,[[["cursor"]],["bool"]]],[11,"display","","",252,[[],["str"]]],[11,"peek","","",253,[[["cursor"]],["bool"]]],[11,"display","","",253,[[],["str"]]],[11,"peek","","",254,[[["cursor"]],["bool"]]],[11,"display","","",254,[[],["str"]]],[11,"peek","","",255,[[["cursor"]],["bool"]]],[11,"display","","",255,[[],["str"]]],[11,"peek","","",256,[[["cursor"]],["bool"]]],[11,"display","","",256,[[],["str"]]],[11,"peek","","",257,[[["cursor"]],["bool"]]],[11,"display","","",257,[[],["str"]]],[11,"peek","","",258,[[["cursor"]],["bool"]]],[11,"display","","",258,[[],["str"]]],[11,"peek","","",259,[[["cursor"]],["bool"]]],[11,"display","","",259,[[],["str"]]],[11,"peek","","",260,[[["cursor"]],["bool"]]],[11,"display","","",260,[[],["str"]]],[11,"peek","","",261,[[["cursor"]],["bool"]]],[11,"display","","",261,[[],["str"]]],[11,"peek","","",262,[[["cursor"]],["bool"]]],[11,"display","","",262,[[],["str"]]],[11,"peek","","",263,[[["cursor"]],["bool"]]],[11,"display","","",263,[[],["str"]]],[11,"peek","","",264,[[["cursor"]],["bool"]]],[11,"display","","",264,[[],["str"]]],[11,"peek","","",265,[[["cursor"]],["bool"]]],[11,"display","","",265,[[],["str"]]],[11,"peek","","",266,[[["cursor"]],["bool"]]],[11,"display","","",266,[[],["str"]]],[11,"peek","","",267,[[["cursor"]],["bool"]]],[11,"display","","",267,[[],["str"]]],[11,"peek","","",268,[[["cursor"]],["bool"]]],[11,"display","","",268,[[],["str"]]],[11,"peek","","",269,[[["cursor"]],["bool"]]],[11,"display","","",269,[[],["str"]]],[11,"peek","","",270,[[["cursor"]],["bool"]]],[11,"display","","",270,[[],["str"]]],[11,"peek","","",271,[[["cursor"]],["bool"]]],[11,"display","","",271,[[],["str"]]],[11,"peek","","",272,[[["cursor"]],["bool"]]],[11,"display","","",272,[[],["str"]]],[11,"peek","","",273,[[["cursor"]],["bool"]]],[11,"display","","",273,[[],["str"]]],[11,"peek","","",274,[[["cursor"]],["bool"]]],[11,"display","","",274,[[],["str"]]],[11,"peek","","",275,[[["cursor"]],["bool"]]],[11,"display","","",275,[[],["str"]]],[11,"peek","","",276,[[["cursor"]],["bool"]]],[11,"display","","",276,[[],["str"]]],[11,"peek","","",277,[[["cursor"]],["bool"]]],[11,"display","","",277,[[],["str"]]],[11,"peek","","",278,[[["cursor"]],["bool"]]],[11,"display","","",278,[[],["str"]]],[11,"peek","syn","",302,[[["cursor"]],["bool"]]],[11,"display","","",302,[[],["str"]]],[11,"parse_any","","",302,[[["parsestream"]],["result"]]],[11,"unraw","","",302,[[["self"]],["ident"]]],[11,"advance_to","syn::parse","",300,[[["self"]]]],[11,"parse","syn::token","",180,[[["parsestream"]],["result"]]],[11,"parse","","",181,[[["parsestream"]],["result"]]],[11,"parse","","",182,[[["parsestream"]],["result"]]],[11,"parse","","",183,[[["parsestream"]],["result"]]],[11,"parse","","",184,[[["parsestream"]],["result"]]],[11,"parse","","",185,[[["parsestream"]],["result"]]],[11,"parse","","",186,[[["parsestream"]],["result"]]],[11,"parse","","",187,[[["parsestream"]],["result"]]],[11,"parse","","",188,[[["parsestream"]],["result"]]],[11,"parse","","",189,[[["parsestream"]],["result"]]],[11,"parse","","",190,[[["parsestream"]],["result"]]],[11,"parse","","",191,[[["parsestream"]],["result"]]],[11,"parse","","",192,[[["parsestream"]],["result"]]],[11,"parse","","",193,[[["parsestream"]],["result"]]],[11,"parse","","",194,[[["parsestream"]],["result"]]],[11,"parse","","",195,[[["parsestream"]],["result"]]],[11,"parse","","",196,[[["parsestream"]],["result"]]],[11,"parse","","",197,[[["parsestream"]],["result"]]],[11,"parse","","",198,[[["parsestream"]],["result"]]],[11,"parse","","",199,[[["parsestream"]],["result"]]],[11,"parse","","",200,[[["parsestream"]],["result"]]],[11,"parse","","",201,[[["parsestream"]],["result"]]],[11,"parse","","",202,[[["parsestream"]],["result"]]],[11,"parse","","",203,[[["parsestream"]],["result"]]],[11,"parse","","",204,[[["parsestream"]],["result"]]],[11,"parse","","",205,[[["parsestream"]],["result"]]],[11,"parse","","",206,[[["parsestream"]],["result"]]],[11,"parse","","",207,[[["parsestream"]],["result"]]],[11,"parse","","",208,[[["parsestream"]],["result"]]],[11,"parse","","",209,[[["parsestream"]],["result"]]],[11,"parse","","",210,[[["parsestream"]],["result"]]],[11,"parse","","",211,[[["parsestream"]],["result"]]],[11,"parse","","",212,[[["parsestream"]],["result"]]],[11,"parse","","",213,[[["parsestream"]],["result"]]],[11,"parse","","",214,[[["parsestream"]],["result"]]],[11,"parse","","",215,[[["parsestream"]],["result"]]],[11,"parse","","",216,[[["parsestream"]],["result"]]],[11,"parse","","",217,[[["parsestream"]],["result"]]],[11,"parse","","",218,[[["parsestream"]],["result"]]],[11,"parse","","",219,[[["parsestream"]],["result"]]],[11,"parse","","",220,[[["parsestream"]],["result"]]],[11,"parse","","",221,[[["parsestream"]],["result"]]],[11,"parse","","",222,[[["parsestream"]],["result"]]],[11,"parse","","",223,[[["parsestream"]],["result"]]],[11,"parse","","",224,[[["parsestream"]],["result"]]],[11,"parse","","",225,[[["parsestream"]],["result"]]],[11,"parse","","",226,[[["parsestream"]],["result"]]],[11,"parse","","",227,[[["parsestream"]],["result"]]],[11,"parse","","",228,[[["parsestream"]],["result"]]],[11,"parse","","",229,[[["parsestream"]],["result"]]],[11,"parse","","",230,[[["parsestream"]],["result"]]],[11,"parse","","",231,[[["parsestream"]],["result"]]],[11,"parse","","",232,[[["parsestream"]],["result"]]],[11,"parse","","",233,[[["parsestream"]],["result"]]],[11,"parse","","",234,[[["parsestream"]],["result"]]],[11,"parse","","",235,[[["parsestream"]],["result"]]],[11,"parse","","",236,[[["parsestream"]],["result"]]],[11,"parse","","",237,[[["parsestream"]],["result"]]],[11,"parse","","",238,[[["parsestream"]],["result"]]],[11,"parse","","",239,[[["parsestream"]],["result"]]],[11,"parse","","",240,[[["parsestream"]],["result"]]],[11,"parse","","",241,[[["parsestream"]],["result"]]],[11,"parse","","",242,[[["parsestream"]],["result"]]],[11,"parse","","",243,[[["parsestream"]],["result"]]],[11,"parse","","",244,[[["parsestream"]],["result"]]],[11,"parse","","",245,[[["parsestream"]],["result"]]],[11,"parse","","",246,[[["parsestream"]],["result"]]],[11,"parse","","",247,[[["parsestream"]],["result"]]],[11,"parse","","",248,[[["parsestream"]],["result"]]],[11,"parse","","",249,[[["parsestream"]],["result"]]],[11,"parse","","",250,[[["parsestream"]],["result"]]],[11,"parse","","",251,[[["parsestream"]],["result"]]],[11,"parse","","",252,[[["parsestream"]],["result"]]],[11,"parse","","",253,[[["parsestream"]],["result"]]],[11,"parse","","",254,[[["parsestream"]],["result"]]],[11,"parse","","",255,[[["parsestream"]],["result"]]],[11,"parse","","",256,[[["parsestream"]],["result"]]],[11,"parse","","",257,[[["parsestream"]],["result"]]],[11,"parse","","",258,[[["parsestream"]],["result"]]],[11,"parse","","",259,[[["parsestream"]],["result"]]],[11,"parse","","",260,[[["parsestream"]],["result"]]],[11,"parse","","",261,[[["parsestream"]],["result"]]],[11,"parse","","",262,[[["parsestream"]],["result"]]],[11,"parse","","",263,[[["parsestream"]],["result"]]],[11,"parse","","",264,[[["parsestream"]],["result"]]],[11,"parse","","",265,[[["parsestream"]],["result"]]],[11,"parse","","",266,[[["parsestream"]],["result"]]],[11,"parse","","",267,[[["parsestream"]],["result"]]],[11,"parse","","",268,[[["parsestream"]],["result"]]],[11,"parse","","",269,[[["parsestream"]],["result"]]],[11,"parse","","",270,[[["parsestream"]],["result"]]],[11,"parse","","",271,[[["parsestream"]],["result"]]],[11,"parse","","",272,[[["parsestream"]],["result"]]],[11,"parse","","",273,[[["parsestream"]],["result"]]],[11,"parse","","",274,[[["parsestream"]],["result"]]],[11,"parse","","",275,[[["parsestream"]],["result"]]],[11,"parse","","",276,[[["parsestream"]],["result"]]],[11,"parse","","",277,[[["parsestream"]],["result"]]],[11,"parse","","",278,[[["parsestream"]],["result"]]],[11,"parse","syn","",302,[[["parsestream"]],["result"]]],[11,"parse","","",150,[[["parsestream"]],["result"]]],[11,"parse","","",1,[[["parsestream"]],["result"]]],[11,"parse","","",2,[[["parsestream"]],["result"]]],[11,"parse","","",151,[[["parsestream"]],["result"]]],[11,"parse","","",6,[[["parsestream"]],["result"]]],[11,"parse","","",4,[[["parsestream"]],["result"]]],[11,"parse","","",5,[[["parsestream"]],["result"]]],[11,"parse","","",153,[[["parsestream"]],["result"]]],[11,"parse","","",156,[[["parsestream"]],["result"]]],[11,"parse","","",33,[[["parsestream"]],["result"]]],[11,"parse","","",30,[[["parsestream"]],["result"]]],[11,"parse","","",28,[[["parsestream"]],["result"]]],[11,"parse","","",34,[[["parsestream"]],["result"]]],[11,"parse","","",36,[[["parsestream"]],["result"]]],[11,"parse","","",21,[[["parsestream"]],["result"]]],[11,"parse","","",14,[[["parsestream"]],["result"]]],[11,"parse","","",23,[[["parsestream"]],["result"]]],[11,"parse","","",37,[[["parsestream"]],["result"]]],[11,"parse","","",47,[[["parsestream"]],["result"]]],[11,"parse","","",19,[[["parsestream"]],["result"]]],[11,"parse","","",49,[[["parsestream"]],["result"]]],[11,"parse","","",24,[[["parsestream"]],["result"]]],[11,"parse","","",48,[[["parsestream"]],["result"]]],[11,"parse","","",32,[[["parsestream"]],["result"]]],[11,"parse","","",25,[[["parsestream"]],["result"]]],[11,"parse","","",50,[[["parsestream"]],["result"]]],[11,"parse","","",20,[[["parsestream"]],["result"]]],[11,"parse","","",15,[[["parsestream"]],["result"]]],[11,"parse","","",16,[[["parsestream"]],["result"]]],[11,"parse","","",27,[[["parsestream"]],["result"]]],[11,"parse","","",31,[[["parsestream"]],["result"]]],[11,"parse","","",40,[[["parsestream"]],["result"]]],[11,"parse","","",41,[[["parsestream"]],["result"]]],[11,"parse","","",22,[[["parsestream"]],["result"]]],[11,"parse","","",26,[[["parsestream"]],["result"]]],[11,"parse","","",43,[[["parsestream"]],["result"]]],[11,"parse","","",35,[[["parsestream"]],["result"]]],[11,"parse","","",44,[[["parsestream"]],["result"]]],[11,"parse","","",42,[[["parsestream"]],["result"]]],[11,"parse","","",38,[[["parsestream"]],["result"]]],[11,"parse","","",45,[[["parsestream"]],["result"]]],[11,"parse","","",17,[[["parsestream"]],["result"]]],[11,"parse","","",46,[[["parsestream"]],["result"]]],[11,"parse","","",52,[[["parsestream"]],["result"]]],[11,"parse","","",51,[[["parsestream"]],["result"]]],[11,"parse","","",12,[[["parsestream"]],["result"]]],[11,"parse","","",11,[[["parsestream"]],["result"]]],[11,"parse","","",155,[[["parsestream"]],["result"]]],[11,"parse","","",39,[[["parsestream"]],["result"]]],[11,"parse","","",157,[[["parsestream"]],["result"]]],[11,"parse","","",10,[[["parsestream"]],[["result",["arm"]],["arm"]]]],[11,"parse","","",53,[[["parsestream"]],["result"]]],[11,"parse","","",56,[[["parsestream"]],["result"]]],[11,"parse","","",158,[[["parsestream"]],["result"]]],[11,"parse","","",57,[[["parsestream"]],["result"]]],[11,"parse","","",54,[[["parsestream"]],["result"]]],[11,"parse","","",62,[[["parsestream"]],["result"]]],[11,"parse","","",160,[[["parsestream"]],["result"]]],[11,"parse","","",61,[[["parsestream"]],["result"]]],[11,"parse","","",159,[[["parsestream"]],["result"]]],[11,"parse","","",55,[[["parsestream"]],["result"]]],[11,"parse","","",63,[[["parsestream"]],["result"]]],[11,"parse","","",161,[[["parsestream"]],["result"]]],[11,"parse","","",165,[[["parsestream"]],["result"]]],[11,"parse","","",78,[[["parsestream"]],["result"]]],[11,"parse","","",79,[[["parsestream"]],["result"]]],[11,"parse","","",74,[[["parsestream"]],["result"]]],[11,"parse","","",87,[[["parsestream"]],["result"]]],[11,"parse","","",167,[[["parsestream"]],[["usetree"],["result",["usetree"]]]]],[11,"parse","","",81,[[["parsestream"]],["result"]]],[11,"parse","","",72,[[["parsestream"]],["result"]]],[11,"parse","","",75,[[["parsestream"]],["result"]]],[11,"parse","","",162,[[["parsestream"]],["result"]]],[11,"parse","","",88,[[["parsestream"]],["result"]]],[11,"parse","","",80,[[["parsestream"]],["result"]]],[11,"parse","","",76,[[["parsestream"]],["result"]]],[11,"parse","","",163,[[["parsestream"]],["result"]]],[11,"parse","","",64,[[["parsestream"]],["result"]]],[11,"parse","","",66,[[["parsestream"]],["result"]]],[11,"parse","","",67,[[["parsestream"]],["result"]]],[11,"parse","","",65,[[["parsestream"]],["result"]]],[11,"parse","","",85,[[["parsestream"]],["result"]]],[11,"parse","","",82,[[["parsestream"]],["result"]]],[11,"parse","","",73,[[["parsestream"]],["result"]]],[11,"parse","","",86,[[["parsestream"]],["result"]]],[11,"parse","","",83,[[["parsestream"]],["result"]]],[11,"parse","","",84,[[["parsestream"]],["result"]]],[11,"parse","","",166,[[["parsestream"]],["result"]]],[11,"parse","","",90,[[["parsestream"]],["result"]]],[11,"parse","","",92,[[["parsestream"]],["result"]]],[11,"parse","","",93,[[["parsestream"]],["result"]]],[11,"parse","","",91,[[["parsestream"]],["result"]]],[11,"parse","","",77,[[["parsestream"]],["result"]]],[11,"parse","","",164,[[["parsestream"]],["result"]]],[11,"parse","","",68,[[["parsestream"]],["result"]]],[11,"parse","","",70,[[["parsestream"]],["result"]]],[11,"parse","","",71,[[["parsestream"]],["result"]]],[11,"parse","","",69,[[["parsestream"]],["result"]]],[11,"parse","","",99,[[["parsestream"]],["result"]]],[11,"parse","","",100,[[["parsestream"]],["result"]]],[11,"parse","","",168,[[["parsestream"]],["result"]]],[11,"parse","","",284,[[["parsestream"]],["result"]]],[11,"parse","","",285,[[["parsestream"]],["result"]]],[11,"parse","","",286,[[["parsestream"]],["result"]]],[11,"parse","","",287,[[["parsestream"]],["result"]]],[11,"parse","","",288,[[["parsestream"]],["result"]]],[11,"parse","","",289,[[["parsestream"]],["result"]]],[11,"parse","","",101,[[["parsestream"]],["result"]]],[11,"parse","","",102,[[["parsestream"]],["result"]]],[11,"parse","","",106,[[["parsestream"]],["result"]]],[11,"parse","","",172,[[["parsestream"]],["result"]]],[11,"parse","","",173,[[["parsestream"]],["result"]]],[11,"parse","","",107,[[["parsestream"]],["result"]]],[11,"parse","","",174,[[["parsestream"]],["result"]]],[11,"parse","","",176,[[["parsestream"]],["result"]]],[11,"parse","","",122,[[["parsestream"]],["result"]]],[11,"parse","","",111,[[["parsestream"]],["result"]]],[11,"parse","","",120,[[["parsestream"]],["result"]]],[11,"parse","","",121,[[["parsestream"]],["result"]]],[11,"parse","","",112,[[["parsestream"]],["result"]]],[11,"parse","","",117,[[["parsestream"]],["result"]]],[11,"parse","","",115,[[["parsestream"]],["result"]]],[11,"parse","","",124,[[["parsestream"]],["result"]]],[11,"parse","","",116,[[["parsestream"]],["result"]]],[11,"parse","","",119,[[["parsestream"]],["result"]]],[11,"parse","","",175,[[["parsestream"]],["result"]]],[11,"parse","","",123,[[["parsestream"]],["result"]]],[11,"parse","","",114,[[["parsestream"]],["result"]]],[11,"parse","","",113,[[["parsestream"]],["result"]]],[11,"parse","","",118,[[["parsestream"]],["result"]]],[11,"parse","","",110,[[["parsestream"]],["result"]]],[11,"parse","","",109,[[["parsestream"]],["result"]]],[11,"parse","","",177,[[["parsestream"]],["result"]]],[11,"parse","","",146,[[["parsestream"]],["result"]]],[11,"parse","","",178,[[["parsestream"]],["result"]]],[11,"parse","","",142,[[["parsestream"]],["result"]]],[11,"parse","","",145,[[["parsestream"]],["result"]]],[11,"parse","","",147,[[["parsestream"]],["result"]]],[11,"parse","","",143,[[["parsestream"]],["result"]]],[11,"parse","","",144,[[["parsestream"]],["result"]]],[11,"parse","syn::parse","",312,[[["parsestream"]],["result"]]],[11,"drop","","",300,[[["self"]]]],[11,"from","syn","",302,[[["selfvalue"]],["ident"]]],[11,"from","","",302,[[["selftype"]],["ident"]]],[11,"from","","",302,[[["super"]],["ident"]]],[11,"from","","",302,[[["crate"]],["ident"]]],[11,"from","","",302,[[["extern"]],["ident"]]],[11,"from","","",302,[[["underscore"]],["ident"]]],[11,"from","","",150,[[["path"]],["meta"]]],[11,"from","","",150,[[["metalist"]],["meta"]]],[11,"from","","",150,[[["metanamevalue"]],["meta"]]],[11,"from","","",151,[[["meta"]],["nestedmeta"]]],[11,"from","","",151,[[["lit"]],["nestedmeta"]]],[11,"from","","",152,[[["fieldsnamed"]],["fields"]]],[11,"from","","",152,[[["fieldsunnamed"]],["fields"]]],[11,"from","","",153,[[["vispublic"]],["visibility"]]],[11,"from","","",153,[[["viscrate"]],["visibility"]]],[11,"from","","",153,[[["visrestricted"]],["visibility"]]],[11,"from","","",156,[[["exprarray"]],["expr"]]],[11,"from","","",156,[[["exprassign"]],["expr"]]],[11,"from","","",156,[[["exprassignop"]],["expr"]]],[11,"from","","",156,[[["exprasync"]],["expr"]]],[11,"from","","",156,[[["exprawait"]],["expr"]]],[11,"from","","",156,[[["exprbinary"]],["expr"]]],[11,"from","","",156,[[["exprblock"]],["expr"]]],[11,"from","","",156,[[["exprbox"]],["expr"]]],[11,"from","","",156,[[["exprbreak"]],["expr"]]],[11,"from","","",156,[[["exprcall"]],["expr"]]],[11,"from","","",156,[[["exprcast"]],["expr"]]],[11,"from","","",156,[[["exprclosure"]],["expr"]]],[11,"from","","",156,[[["exprcontinue"]],["expr"]]],[11,"from","","",156,[[["exprfield"]],["expr"]]],[11,"from","","",156,[[["exprforloop"]],["expr"]]],[11,"from","","",156,[[["exprgroup"]],["expr"]]],[11,"from","","",156,[[["exprif"]],["expr"]]],[11,"from","","",156,[[["exprindex"]],["expr"]]],[11,"from","","",156,[[["exprlet"]],["expr"]]],[11,"from","","",156,[[["exprlit"]],["expr"]]],[11,"from","","",156,[[["exprloop"]],["expr"]]],[11,"from","","",156,[[["exprmacro"]],["expr"]]],[11,"from","","",156,[[["exprmatch"]],["expr"]]],[11,"from","","",156,[[["exprmethodcall"]],["expr"]]],[11,"from","","",156,[[["exprparen"]],["expr"]]],[11,"from","","",156,[[["exprpath"]],["expr"]]],[11,"from","","",156,[[["exprrange"]],["expr"]]],[11,"from","","",156,[[["exprreference"]],["expr"]]],[11,"from","","",156,[[["exprrepeat"]],["expr"]]],[11,"from","","",156,[[["exprreturn"]],["expr"]]],[11,"from","","",156,[[["exprstruct"]],["expr"]]],[11,"from","","",156,[[["exprtry"]],["expr"]]],[11,"from","","",156,[[["exprtryblock"]],["expr"]]],[11,"from","","",156,[[["exprtuple"]],["expr"]]],[11,"from","","",156,[[["exprtype"]],["expr"]]],[11,"from","","",156,[[["exprunary"]],["expr"]]],[11,"from","","",156,[[["exprunsafe"]],["expr"]]],[11,"from","","",156,[[["tokenstream"]],["expr"]]],[11,"from","","",156,[[["exprwhile"]],["expr"]]],[11,"from","","",156,[[["expryield"]],["expr"]]],[11,"from","","",53,[[["usize"]],["index"]]],[11,"from","","",158,[[["typeparam"]],["genericparam"]]],[11,"from","","",158,[[["lifetimedef"]],["genericparam"]]],[11,"from","","",158,[[["constparam"]],["genericparam"]]],[11,"from","","",62,[[["ident"]],["self"]]],[11,"from","","",160,[[["traitbound"]],["typeparambound"]]],[11,"from","","",160,[[["lifetime"]],["typeparambound"]]],[11,"from","","",161,[[["predicatetype"]],["wherepredicate"]]],[11,"from","","",161,[[["predicatelifetime"]],["wherepredicate"]]],[11,"from","","",161,[[["predicateeq"]],["wherepredicate"]]],[11,"from","","",165,[[["itemconst"]],["item"]]],[11,"from","","",165,[[["itemenum"]],["item"]]],[11,"from","","",165,[[["itemexterncrate"]],["item"]]],[11,"from","","",165,[[["itemfn"]],["item"]]],[11,"from","","",165,[[["itemforeignmod"]],["item"]]],[11,"from","","",165,[[["itemimpl"]],["item"]]],[11,"from","","",165,[[["itemmacro"]],["item"]]],[11,"from","","",165,[[["itemmacro2"]],["item"]]],[11,"from","","",165,[[["itemmod"]],["item"]]],[11,"from","","",165,[[["itemstatic"]],["item"]]],[11,"from","","",165,[[["itemstruct"]],["item"]]],[11,"from","","",165,[[["itemtrait"]],["item"]]],[11,"from","","",165,[[["itemtraitalias"]],["item"]]],[11,"from","","",165,[[["itemtype"]],["item"]]],[11,"from","","",165,[[["itemunion"]],["item"]]],[11,"from","","",165,[[["itemuse"]],["item"]]],[11,"from","","",165,[[["tokenstream"]],["item"]]],[11,"from","","",165,[[["deriveinput"]],["item"]]],[11,"from","","",167,[[["usepath"]],["usetree"]]],[11,"from","","",167,[[["usename"]],["usetree"]]],[11,"from","","",167,[[["userename"]],["usetree"]]],[11,"from","","",167,[[["useglob"]],["usetree"]]],[11,"from","","",167,[[["usegroup"]],["usetree"]]],[11,"from","","",163,[[["foreignitemfn"]],["foreignitem"]]],[11,"from","","",163,[[["foreignitemstatic"]],["foreignitem"]]],[11,"from","","",163,[[["foreignitemtype"]],["foreignitem"]]],[11,"from","","",163,[[["foreignitemmacro"]],["foreignitem"]]],[11,"from","","",163,[[["tokenstream"]],["foreignitem"]]],[11,"from","","",166,[[["traititemconst"]],["traititem"]]],[11,"from","","",166,[[["traititemmethod"]],["traititem"]]],[11,"from","","",166,[[["traititemtype"]],["traititem"]]],[11,"from","","",166,[[["traititemmacro"]],["traititem"]]],[11,"from","","",166,[[["tokenstream"]],["traititem"]]],[11,"from","","",164,[[["implitemconst"]],["implitem"]]],[11,"from","","",164,[[["implitemmethod"]],["implitem"]]],[11,"from","","",164,[[["implitemtype"]],["implitem"]]],[11,"from","","",164,[[["implitemmacro"]],["implitem"]]],[11,"from","","",164,[[["tokenstream"]],["implitem"]]],[11,"from","","",162,[[["receiver"]],["fnarg"]]],[11,"from","","",162,[[["pattype"]],["fnarg"]]],[11,"from","","",168,[[["litstr"]],["lit"]]],[11,"from","","",168,[[["litbytestr"]],["lit"]]],[11,"from","","",168,[[["litbyte"]],["lit"]]],[11,"from","","",168,[[["litchar"]],["lit"]]],[11,"from","","",168,[[["litint"]],["lit"]]],[11,"from","","",168,[[["litfloat"]],["lit"]]],[11,"from","","",168,[[["litbool"]],["lit"]]],[11,"from","","",168,[[["literal"]],["lit"]]],[11,"from","","",288,[[["literal"]],["self"]]],[11,"from","","",289,[[["literal"]],["self"]]],[11,"from","","",171,[[["datastruct"]],["data"]]],[11,"from","","",171,[[["dataenum"]],["data"]]],[11,"from","","",171,[[["dataunion"]],["data"]]],[11,"from","","",176,[[["typearray"]],["type"]]],[11,"from","","",176,[[["typebarefn"]],["type"]]],[11,"from","","",176,[[["typegroup"]],["type"]]],[11,"from","","",176,[[["typeimpltrait"]],["type"]]],[11,"from","","",176,[[["typeinfer"]],["type"]]],[11,"from","","",176,[[["typemacro"]],["type"]]],[11,"from","","",176,[[["typenever"]],["type"]]],[11,"from","","",176,[[["typeparen"]],["type"]]],[11,"from","","",176,[[["typepath"]],["type"]]],[11,"from","","",176,[[["typeptr"]],["type"]]],[11,"from","","",176,[[["typereference"]],["type"]]],[11,"from","","",176,[[["typeslice"]],["type"]]],[11,"from","","",176,[[["typetraitobject"]],["type"]]],[11,"from","","",176,[[["typetuple"]],["type"]]],[11,"from","","",176,[[["tokenstream"]],["type"]]],[11,"from","","",177,[[["patbox"]],["pat"]]],[11,"from","","",177,[[["patident"]],["pat"]]],[11,"from","","",177,[[["patlit"]],["pat"]]],[11,"from","","",177,[[["patmacro"]],["pat"]]],[11,"from","","",177,[[["pator"]],["pat"]]],[11,"from","","",177,[[["patpath"]],["pat"]]],[11,"from","","",177,[[["patrange"]],["pat"]]],[11,"from","","",177,[[["patreference"]],["pat"]]],[11,"from","","",177,[[["patrest"]],["pat"]]],[11,"from","","",177,[[["patslice"]],["pat"]]],[11,"from","","",177,[[["patstruct"]],["pat"]]],[11,"from","","",177,[[["pattuple"]],["pat"]]],[11,"from","","",177,[[["pattuplestruct"]],["pat"]]],[11,"from","","",177,[[["pattype"]],["pat"]]],[11,"from","","",177,[[["tokenstream"]],["pat"]]],[11,"from","","",177,[[["patwild"]],["pat"]]],[11,"from","","",146,[[["t"]],["self"]]],[11,"from","","",147,[[["t"]],["self"]]],[11,"from","","",301,[[["lexerror"]],["self"]]],[11,"next_back","syn::punctuated","",305,[[["self"]],["option"]]],[11,"next_back","","",306,[[["self"]],["option"]]],[11,"next_back","","",307,[[["self"]],["option"]]],[11,"next_back","","",308,[[["self"]],["option"]]],[11,"next_back","","",309,[[["self"]],["option"]]],[11,"next_back","","",310,[[["self"]],["option"]]],[11,"len","","",305,[[["self"]],["usize"]]],[11,"len","","",306,[[["self"]],["usize"]]],[11,"len","","",307,[[["self"]],["usize"]]],[11,"len","","",308,[[["self"]],["usize"]]],[11,"len","","",309,[[["self"]],["usize"]]],[11,"len","","",310,[[["self"]],["usize"]]],[11,"extend","","",294,[[["self"],["intoiterator"]]]],[11,"extend","","",294,[[["self"],["intoiterator"]]]],[11,"into_iter","syn","",152,[[]]],[11,"into_iter","syn::punctuated","",294,[[]]],[11,"into_iter","syn","",301,[[]]],[11,"next","syn::punctuated","",305,[[["self"]],["option"]]],[11,"size_hint","","",305,[[["self"]]]],[11,"next","","",306,[[["self"]],["option"]]],[11,"size_hint","","",306,[[["self"]]]],[11,"next","","",307,[[["self"]],["option"]]],[11,"size_hint","","",307,[[["self"]]]],[11,"next","","",308,[[["self"]],["option"]]],[11,"size_hint","","",308,[[["self"]]]],[11,"next","","",309,[[["self"]],["option"]]],[11,"size_hint","","",309,[[["self"]]]],[11,"next","","",310,[[["self"]],["option"]]],[11,"size_hint","","",310,[[["self"]]]],[11,"clone","syn::token","",180,[[["self"]],["underscore"]]],[11,"clone","","",181,[[["self"]],["abstract"]]],[11,"clone","","",182,[[["self"]],["as"]]],[11,"clone","","",183,[[["self"]],["async"]]],[11,"clone","","",184,[[["self"]],["auto"]]],[11,"clone","","",185,[[["self"]],["await"]]],[11,"clone","","",186,[[["self"]],["become"]]],[11,"clone","","",187,[[["self"]],["box"]]],[11,"clone","","",188,[[["self"]],["break"]]],[11,"clone","","",189,[[["self"]],["const"]]],[11,"clone","","",190,[[["self"]],["continue"]]],[11,"clone","","",191,[[["self"]],["crate"]]],[11,"clone","","",192,[[["self"]],["default"]]],[11,"clone","","",193,[[["self"]],["do"]]],[11,"clone","","",194,[[["self"]],["dyn"]]],[11,"clone","","",195,[[["self"]],["else"]]],[11,"clone","","",196,[[["self"]],["enum"]]],[11,"clone","","",197,[[["self"]],["extern"]]],[11,"clone","","",198,[[["self"]],["final"]]],[11,"clone","","",199,[[["self"]],["fn"]]],[11,"clone","","",200,[[["self"]],["for"]]],[11,"clone","","",201,[[["self"]],["if"]]],[11,"clone","","",202,[[["self"]],["impl"]]],[11,"clone","","",203,[[["self"]],["in"]]],[11,"clone","","",204,[[["self"]],["let"]]],[11,"clone","","",205,[[["self"]],["loop"]]],[11,"clone","","",206,[[["self"]],["macro"]]],[11,"clone","","",207,[[["self"]],["match"]]],[11,"clone","","",208,[[["self"]],["mod"]]],[11,"clone","","",209,[[["self"]],["move"]]],[11,"clone","","",210,[[["self"]],["mut"]]],[11,"clone","","",211,[[["self"]],["override"]]],[11,"clone","","",212,[[["self"]],["priv"]]],[11,"clone","","",213,[[["self"]],["pub"]]],[11,"clone","","",214,[[["self"]],["ref"]]],[11,"clone","","",215,[[["self"]],["return"]]],[11,"clone","","",216,[[["self"]],["selftype"]]],[11,"clone","","",217,[[["self"]],["selfvalue"]]],[11,"clone","","",218,[[["self"]],["static"]]],[11,"clone","","",219,[[["self"]],["struct"]]],[11,"clone","","",220,[[["self"]],["super"]]],[11,"clone","","",221,[[["self"]],["trait"]]],[11,"clone","","",222,[[["self"]],["try"]]],[11,"clone","","",223,[[["self"]],["type"]]],[11,"clone","","",224,[[["self"]],["typeof"]]],[11,"clone","","",225,[[["self"]],["union"]]],[11,"clone","","",226,[[["self"]],["unsafe"]]],[11,"clone","","",227,[[["self"]],["unsized"]]],[11,"clone","","",228,[[["self"]],["use"]]],[11,"clone","","",229,[[["self"]],["virtual"]]],[11,"clone","","",230,[[["self"]],["where"]]],[11,"clone","","",231,[[["self"]],["while"]]],[11,"clone","","",232,[[["self"]],["yield"]]],[11,"clone","","",233,[[["self"]],["add"]]],[11,"clone","","",234,[[["self"]],["addeq"]]],[11,"clone","","",235,[[["self"]],["and"]]],[11,"clone","","",236,[[["self"]],["andand"]]],[11,"clone","","",237,[[["self"]],["andeq"]]],[11,"clone","","",238,[[["self"]],["at"]]],[11,"clone","","",239,[[["self"]],["bang"]]],[11,"clone","","",240,[[["self"]],["caret"]]],[11,"clone","","",241,[[["self"]],["careteq"]]],[11,"clone","","",242,[[["self"]],["colon"]]],[11,"clone","","",243,[[["self"]],["colon2"]]],[11,"clone","","",244,[[["self"]],["comma"]]],[11,"clone","","",245,[[["self"]],["div"]]],[11,"clone","","",246,[[["self"]],["diveq"]]],[11,"clone","","",247,[[["self"]],["dollar"]]],[11,"clone","","",248,[[["self"]],["dot"]]],[11,"clone","","",249,[[["self"]],["dot2"]]],[11,"clone","","",250,[[["self"]],["dot3"]]],[11,"clone","","",251,[[["self"]],["dotdoteq"]]],[11,"clone","","",252,[[["self"]],["eq"]]],[11,"clone","","",253,[[["self"]],["eqeq"]]],[11,"clone","","",254,[[["self"]],["ge"]]],[11,"clone","","",255,[[["self"]],["gt"]]],[11,"clone","","",256,[[["self"]],["le"]]],[11,"clone","","",257,[[["self"]],["lt"]]],[11,"clone","","",258,[[["self"]],["muleq"]]],[11,"clone","","",259,[[["self"]],["ne"]]],[11,"clone","","",260,[[["self"]],["or"]]],[11,"clone","","",261,[[["self"]],["oreq"]]],[11,"clone","","",262,[[["self"]],["oror"]]],[11,"clone","","",263,[[["self"]],["pound"]]],[11,"clone","","",264,[[["self"]],["question"]]],[11,"clone","","",265,[[["self"]],["rarrow"]]],[11,"clone","","",266,[[["self"]],["larrow"]]],[11,"clone","","",267,[[["self"]],["rem"]]],[11,"clone","","",268,[[["self"]],["remeq"]]],[11,"clone","","",269,[[["self"]],["fatarrow"]]],[11,"clone","","",270,[[["self"]],["semi"]]],[11,"clone","","",271,[[["self"]],["shl"]]],[11,"clone","","",272,[[["self"]],["shleq"]]],[11,"clone","","",273,[[["self"]],["shr"]]],[11,"clone","","",274,[[["self"]],["shreq"]]],[11,"clone","","",275,[[["self"]],["star"]]],[11,"clone","","",276,[[["self"]],["sub"]]],[11,"clone","","",277,[[["self"]],["subeq"]]],[11,"clone","","",278,[[["self"]],["tilde"]]],[11,"clone","","",279,[[["self"]],["brace"]]],[11,"clone","","",280,[[["self"]],["bracket"]]],[11,"clone","","",281,[[["self"]],["paren"]]],[11,"clone","","",282,[[["self"]],["group"]]],[11,"clone","syn","",0,[[["self"]],["attribute"]]],[11,"clone","","",149,[[["self"]],["attrstyle"]]],[11,"clone","","",150,[[["self"]],["meta"]]],[11,"clone","","",1,[[["self"]],["metalist"]]],[11,"clone","","",2,[[["self"]],["metanamevalue"]]],[11,"clone","","",151,[[["self"]],["nestedmeta"]]],[11,"clone","","",6,[[["self"]],["variant"]]],[11,"clone","","",152,[[["self"]],["fields"]]],[11,"clone","","",4,[[["self"]],["fieldsnamed"]]],[11,"clone","","",5,[[["self"]],["fieldsunnamed"]]],[11,"clone","","",3,[[["self"]],["field"]]],[11,"clone","","",153,[[["self"]],["visibility"]]],[11,"clone","","",8,[[["self"]],["vispublic"]]],[11,"clone","","",7,[[["self"]],["viscrate"]]],[11,"clone","","",9,[[["self"]],["visrestricted"]]],[11,"clone","","",156,[[["self"]],["expr"]]],[11,"clone","","",14,[[["self"]],["exprarray"]]],[11,"clone","","",15,[[["self"]],["exprassign"]]],[11,"clone","","",16,[[["self"]],["exprassignop"]]],[11,"clone","","",17,[[["self"]],["exprasync"]]],[11,"clone","","",18,[[["self"]],["exprawait"]]],[11,"clone","","",19,[[["self"]],["exprbinary"]]],[11,"clone","","",20,[[["self"]],["exprblock"]]],[11,"clone","","",21,[[["self"]],["exprbox"]]],[11,"clone","","",22,[[["self"]],["exprbreak"]]],[11,"clone","","",23,[[["self"]],["exprcall"]]],[11,"clone","","",24,[[["self"]],["exprcast"]]],[11,"clone","","",25,[[["self"]],["exprclosure"]]],[11,"clone","","",26,[[["self"]],["exprcontinue"]]],[11,"clone","","",27,[[["self"]],["exprfield"]]],[11,"clone","","",28,[[["self"]],["exprforloop"]]],[11,"clone","","",29,[[["self"]],["exprgroup"]]],[11,"clone","","",30,[[["self"]],["exprif"]]],[11,"clone","","",31,[[["self"]],["exprindex"]]],[11,"clone","","",32,[[["self"]],["exprlet"]]],[11,"clone","","",33,[[["self"]],["exprlit"]]],[11,"clone","","",34,[[["self"]],["exprloop"]]],[11,"clone","","",35,[[["self"]],["exprmacro"]]],[11,"clone","","",36,[[["self"]],["exprmatch"]]],[11,"clone","","",37,[[["self"]],["exprmethodcall"]]],[11,"clone","","",38,[[["self"]],["exprparen"]]],[11,"clone","","",39,[[["self"]],["exprpath"]]],[11,"clone","","",40,[[["self"]],["exprrange"]]],[11,"clone","","",41,[[["self"]],["exprreference"]]],[11,"clone","","",42,[[["self"]],["exprrepeat"]]],[11,"clone","","",43,[[["self"]],["exprreturn"]]],[11,"clone","","",44,[[["self"]],["exprstruct"]]],[11,"clone","","",45,[[["self"]],["exprtry"]]],[11,"clone","","",46,[[["self"]],["exprtryblock"]]],[11,"clone","","",47,[[["self"]],["exprtuple"]]],[11,"clone","","",48,[[["self"]],["exprtype"]]],[11,"clone","","",49,[[["self"]],["exprunary"]]],[11,"clone","","",50,[[["self"]],["exprunsafe"]]],[11,"clone","","",51,[[["self"]],["exprwhile"]]],[11,"clone","","",52,[[["self"]],["expryield"]]],[11,"clone","","",157,[[["self"]],["member"]]],[11,"clone","","",53,[[["self"]],["index"]]],[11,"clone","","",13,[[["self"]],["methodturbofish"]]],[11,"clone","","",154,[[["self"]],["genericmethodargument"]]],[11,"clone","","",11,[[["self"]],["fieldvalue"]]],[11,"clone","","",12,[[["self"]],["label"]]],[11,"clone","","",10,[[["self"]],["arm"]]],[11,"clone","","",155,[[["self"]],["rangelimits"]]],[11,"clone","","",56,[[["self"]],["generics"]]],[11,"clone","","",158,[[["self"]],["genericparam"]]],[11,"clone","","",62,[[["self"]],["typeparam"]]],[11,"clone","","",57,[[["self"]],["lifetimedef"]]],[11,"clone","","",55,[[["self"]],["constparam"]]],[11,"clone","","",303,[[["self"]],["implgenerics"]]],[11,"clone","","",283,[[["self"]],["typegenerics"]]],[11,"clone","","",304,[[["self"]],["turbofish"]]],[11,"clone","","",54,[[["self"]],["boundlifetimes"]]],[11,"clone","","",160,[[["self"]],["typeparambound"]]],[11,"clone","","",61,[[["self"]],["traitbound"]]],[11,"clone","","",159,[[["self"]],["traitboundmodifier"]]],[11,"clone","","",63,[[["self"]],["whereclause"]]],[11,"clone","","",161,[[["self"]],["wherepredicate"]]],[11,"clone","","",60,[[["self"]],["predicatetype"]]],[11,"clone","","",59,[[["self"]],["predicatelifetime"]]],[11,"clone","","",58,[[["self"]],["predicateeq"]]],[11,"clone","","",165,[[["self"]],["item"]]],[11,"clone","","",72,[[["self"]],["itemconst"]]],[11,"clone","","",73,[[["self"]],["itemenum"]]],[11,"clone","","",74,[[["self"]],["itemexterncrate"]]],[11,"clone","","",75,[[["self"]],["itemfn"]]],[11,"clone","","",76,[[["self"]],["itemforeignmod"]]],[11,"clone","","",77,[[["self"]],["itemimpl"]]],[11,"clone","","",78,[[["self"]],["itemmacro"]]],[11,"clone","","",79,[[["self"]],["itemmacro2"]]],[11,"clone","","",80,[[["self"]],["itemmod"]]],[11,"clone","","",81,[[["self"]],["itemstatic"]]],[11,"clone","","",82,[[["self"]],["itemstruct"]]],[11,"clone","","",83,[[["self"]],["itemtrait"]]],[11,"clone","","",84,[[["self"]],["itemtraitalias"]]],[11,"clone","","",85,[[["self"]],["itemtype"]]],[11,"clone","","",86,[[["self"]],["itemunion"]]],[11,"clone","","",87,[[["self"]],["itemuse"]]],[11,"clone","","",167,[[["self"]],["usetree"]]],[11,"clone","","",97,[[["self"]],["usepath"]]],[11,"clone","","",96,[[["self"]],["usename"]]],[11,"clone","","",98,[[["self"]],["userename"]]],[11,"clone","","",94,[[["self"]],["useglob"]]],[11,"clone","","",95,[[["self"]],["usegroup"]]],[11,"clone","","",163,[[["self"]],["foreignitem"]]],[11,"clone","","",64,[[["self"]],["foreignitemfn"]]],[11,"clone","","",66,[[["self"]],["foreignitemstatic"]]],[11,"clone","","",67,[[["self"]],["foreignitemtype"]]],[11,"clone","","",65,[[["self"]],["foreignitemmacro"]]],[11,"clone","","",166,[[["self"]],["traititem"]]],[11,"clone","","",90,[[["self"]],["traititemconst"]]],[11,"clone","","",92,[[["self"]],["traititemmethod"]]],[11,"clone","","",93,[[["self"]],["traititemtype"]]],[11,"clone","","",91,[[["self"]],["traititemmacro"]]],[11,"clone","","",164,[[["self"]],["implitem"]]],[11,"clone","","",68,[[["self"]],["implitemconst"]]],[11,"clone","","",70,[[["self"]],["implitemmethod"]]],[11,"clone","","",71,[[["self"]],["implitemtype"]]],[11,"clone","","",69,[[["self"]],["implitemmacro"]]],[11,"clone","","",89,[[["self"]],["signature"]]],[11,"clone","","",162,[[["self"]],["fnarg"]]],[11,"clone","","",88,[[["self"]],["receiver"]]],[11,"clone","","",99,[[["self"]],["file"]]],[11,"clone","","",100,[[["self"]],["lifetime"]]],[11,"clone","","",168,[[["self"]],["lit"]]],[11,"clone","","",284,[[["self"]],["litstr"]]],[11,"clone","","",285,[[["self"]],["litbytestr"]]],[11,"clone","","",286,[[["self"]],["litbyte"]]],[11,"clone","","",287,[[["self"]],["litchar"]]],[11,"clone","","",288,[[["self"]],["litint"]]],[11,"clone","","",289,[[["self"]],["litfloat"]]],[11,"clone","","",101,[[["self"]],["litbool"]]],[11,"clone","","",169,[[["self"]],["strstyle"]]],[11,"clone","","",102,[[["self"]],["macro"]]],[11,"clone","","",170,[[["self"]],["macrodelimiter"]]],[11,"clone","","",106,[[["self"]],["deriveinput"]]],[11,"clone","","",171,[[["self"]],["data"]]],[11,"clone","","",104,[[["self"]],["datastruct"]]],[11,"clone","","",103,[[["self"]],["dataenum"]]],[11,"clone","","",105,[[["self"]],["dataunion"]]],[11,"clone","","",172,[[["self"]],["binop"]]],[11,"clone","","",173,[[["self"]],["unop"]]],[11,"clone","","",107,[[["self"]],["block"]]],[11,"clone","","",174,[[["self"]],["stmt"]]],[11,"clone","","",108,[[["self"]],["local"]]],[11,"clone","","",176,[[["self"]],["type"]]],[11,"clone","","",111,[[["self"]],["typearray"]]],[11,"clone","","",112,[[["self"]],["typebarefn"]]],[11,"clone","","",113,[[["self"]],["typegroup"]]],[11,"clone","","",114,[[["self"]],["typeimpltrait"]]],[11,"clone","","",115,[[["self"]],["typeinfer"]]],[11,"clone","","",116,[[["self"]],["typemacro"]]],[11,"clone","","",117,[[["self"]],["typenever"]]],[11,"clone","","",118,[[["self"]],["typeparen"]]],[11,"clone","","",119,[[["self"]],["typepath"]]],[11,"clone","","",120,[[["self"]],["typeptr"]]],[11,"clone","","",121,[[["self"]],["typereference"]]],[11,"clone","","",122,[[["self"]],["typeslice"]]],[11,"clone","","",123,[[["self"]],["typetraitobject"]]],[11,"clone","","",124,[[["self"]],["typetuple"]]],[11,"clone","","",109,[[["self"]],["abi"]]],[11,"clone","","",110,[[["self"]],["barefnarg"]]],[11,"clone","","",125,[[["self"]],["variadic"]]],[11,"clone","","",175,[[["self"]],["returntype"]]],[11,"clone","","",177,[[["self"]],["pat"]]],[11,"clone","","",127,[[["self"]],["patbox"]]],[11,"clone","","",128,[[["self"]],["patident"]]],[11,"clone","","",129,[[["self"]],["patlit"]]],[11,"clone","","",130,[[["self"]],["patmacro"]]],[11,"clone","","",131,[[["self"]],["pator"]]],[11,"clone","","",132,[[["self"]],["patpath"]]],[11,"clone","","",133,[[["self"]],["patrange"]]],[11,"clone","","",134,[[["self"]],["patreference"]]],[11,"clone","","",135,[[["self"]],["patrest"]]],[11,"clone","","",136,[[["self"]],["patslice"]]],[11,"clone","","",137,[[["self"]],["patstruct"]]],[11,"clone","","",138,[[["self"]],["pattuple"]]],[11,"clone","","",139,[[["self"]],["pattuplestruct"]]],[11,"clone","","",140,[[["self"]],["pattype"]]],[11,"clone","","",141,[[["self"]],["patwild"]]],[11,"clone","","",126,[[["self"]],["fieldpat"]]],[11,"clone","","",146,[[["self"]],["path"]]],[11,"clone","","",147,[[["self"]],["pathsegment"]]],[11,"clone","","",179,[[["self"]],["patharguments"]]],[11,"clone","","",178,[[["self"]],["genericargument"]]],[11,"clone","","",142,[[["self"]],["anglebracketedgenericarguments"]]],[11,"clone","","",143,[[["self"]],["binding"]]],[11,"clone","","",144,[[["self"]],["constraint"]]],[11,"clone","","",145,[[["self"]],["parenthesizedgenericarguments"]]],[11,"clone","","",148,[[["self"]],["qself"]]],[11,"clone","syn::buffer","",291,[[["self"]],["cursor"]]],[11,"clone","syn::punctuated","",294,[[["self"]],["punctuated"]]],[11,"clone","","",305,[[["self"]],["self"]]],[11,"clone","","",307,[[["self"]],["intopairs"]]],[11,"clone","","",308,[[["self"]],["intoiter"]]],[11,"clone","","",309,[[["self"]],["self"]]],[11,"clone","","",293,[[["self"]],["pair"]]],[11,"clone","syn::parse","",299,[[["self"]],["stepcursor"]]],[11,"clone","syn","",301,[[["self"]],["error"]]],[11,"default","syn::token","",180,[[],["self"]]],[11,"default","","",181,[[],["self"]]],[11,"default","","",182,[[],["self"]]],[11,"default","","",183,[[],["self"]]],[11,"default","","",184,[[],["self"]]],[11,"default","","",185,[[],["self"]]],[11,"default","","",186,[[],["self"]]],[11,"default","","",187,[[],["self"]]],[11,"default","","",188,[[],["self"]]],[11,"default","","",189,[[],["self"]]],[11,"default","","",190,[[],["self"]]],[11,"default","","",191,[[],["self"]]],[11,"default","","",192,[[],["self"]]],[11,"default","","",193,[[],["self"]]],[11,"default","","",194,[[],["self"]]],[11,"default","","",195,[[],["self"]]],[11,"default","","",196,[[],["self"]]],[11,"default","","",197,[[],["self"]]],[11,"default","","",198,[[],["self"]]],[11,"default","","",199,[[],["self"]]],[11,"default","","",200,[[],["self"]]],[11,"default","","",201,[[],["self"]]],[11,"default","","",202,[[],["self"]]],[11,"default","","",203,[[],["self"]]],[11,"default","","",204,[[],["self"]]],[11,"default","","",205,[[],["self"]]],[11,"default","","",206,[[],["self"]]],[11,"default","","",207,[[],["self"]]],[11,"default","","",208,[[],["self"]]],[11,"default","","",209,[[],["self"]]],[11,"default","","",210,[[],["self"]]],[11,"default","","",211,[[],["self"]]],[11,"default","","",212,[[],["self"]]],[11,"default","","",213,[[],["self"]]],[11,"default","","",214,[[],["self"]]],[11,"default","","",215,[[],["self"]]],[11,"default","","",216,[[],["self"]]],[11,"default","","",217,[[],["self"]]],[11,"default","","",218,[[],["self"]]],[11,"default","","",219,[[],["self"]]],[11,"default","","",220,[[],["self"]]],[11,"default","","",221,[[],["self"]]],[11,"default","","",222,[[],["self"]]],[11,"default","","",223,[[],["self"]]],[11,"default","","",224,[[],["self"]]],[11,"default","","",225,[[],["self"]]],[11,"default","","",226,[[],["self"]]],[11,"default","","",227,[[],["self"]]],[11,"default","","",228,[[],["self"]]],[11,"default","","",229,[[],["self"]]],[11,"default","","",230,[[],["self"]]],[11,"default","","",231,[[],["self"]]],[11,"default","","",232,[[],["self"]]],[11,"default","","",233,[[],["self"]]],[11,"default","","",234,[[],["self"]]],[11,"default","","",235,[[],["self"]]],[11,"default","","",236,[[],["self"]]],[11,"default","","",237,[[],["self"]]],[11,"default","","",238,[[],["self"]]],[11,"default","","",239,[[],["self"]]],[11,"default","","",240,[[],["self"]]],[11,"default","","",241,[[],["self"]]],[11,"default","","",242,[[],["self"]]],[11,"default","","",243,[[],["self"]]],[11,"default","","",244,[[],["self"]]],[11,"default","","",245,[[],["self"]]],[11,"default","","",246,[[],["self"]]],[11,"default","","",247,[[],["self"]]],[11,"default","","",248,[[],["self"]]],[11,"default","","",249,[[],["self"]]],[11,"default","","",250,[[],["self"]]],[11,"default","","",251,[[],["self"]]],[11,"default","","",252,[[],["self"]]],[11,"default","","",253,[[],["self"]]],[11,"default","","",254,[[],["self"]]],[11,"default","","",255,[[],["self"]]],[11,"default","","",256,[[],["self"]]],[11,"default","","",257,[[],["self"]]],[11,"default","","",258,[[],["self"]]],[11,"default","","",259,[[],["self"]]],[11,"default","","",260,[[],["self"]]],[11,"default","","",261,[[],["self"]]],[11,"default","","",262,[[],["self"]]],[11,"default","","",263,[[],["self"]]],[11,"default","","",264,[[],["self"]]],[11,"default","","",265,[[],["self"]]],[11,"default","","",266,[[],["self"]]],[11,"default","","",267,[[],["self"]]],[11,"default","","",268,[[],["self"]]],[11,"default","","",269,[[],["self"]]],[11,"default","","",270,[[],["self"]]],[11,"default","","",271,[[],["self"]]],[11,"default","","",272,[[],["self"]]],[11,"default","","",273,[[],["self"]]],[11,"default","","",274,[[],["self"]]],[11,"default","","",275,[[],["self"]]],[11,"default","","",276,[[],["self"]]],[11,"default","","",277,[[],["self"]]],[11,"default","","",278,[[],["self"]]],[11,"default","","",279,[[],["self"]]],[11,"default","","",280,[[],["self"]]],[11,"default","","",281,[[],["self"]]],[11,"default","","",282,[[],["self"]]],[11,"default","syn","",56,[[],["generics"]]],[11,"default","","",54,[[],["boundlifetimes"]]],[11,"default","","",179,[[],["self"]]],[11,"default","syn::punctuated","",294,[[],["self"]]],[11,"cmp","syn","",100,[[["self"],["lifetime"]],["ordering"]]],[11,"eq","","",100,[[["self"],["lifetime"]],["bool"]]],[11,"eq","syn::buffer","",291,[[["self"],["cursor"]],["bool"]]],[11,"ne","","",291,[[["self"],["cursor"]],["bool"]]],[11,"partial_cmp","syn","",100,[[["self"],["lifetime"]],[["ordering"],["option",["ordering"]]]]],[11,"deref","syn::token","",180,[[["self"]]]],[11,"deref","","",233,[[["self"]]]],[11,"deref","","",235,[[["self"]]]],[11,"deref","","",238,[[["self"]]]],[11,"deref","","",239,[[["self"]]]],[11,"deref","","",240,[[["self"]]]],[11,"deref","","",242,[[["self"]]]],[11,"deref","","",244,[[["self"]]]],[11,"deref","","",245,[[["self"]]]],[11,"deref","","",247,[[["self"]]]],[11,"deref","","",248,[[["self"]]]],[11,"deref","","",252,[[["self"]]]],[11,"deref","","",255,[[["self"]]]],[11,"deref","","",257,[[["self"]]]],[11,"deref","","",260,[[["self"]]]],[11,"deref","","",263,[[["self"]]]],[11,"deref","","",264,[[["self"]]]],[11,"deref","","",267,[[["self"]]]],[11,"deref","","",270,[[["self"]]]],[11,"deref","","",275,[[["self"]]]],[11,"deref","","",276,[[["self"]]]],[11,"deref","","",278,[[["self"]]]],[11,"deref","syn::parse","",299,[[["self"]]]],[11,"deref_mut","syn::token","",180,[[["self"]]]],[11,"deref_mut","","",233,[[["self"]]]],[11,"deref_mut","","",235,[[["self"]]]],[11,"deref_mut","","",238,[[["self"]]]],[11,"deref_mut","","",239,[[["self"]]]],[11,"deref_mut","","",240,[[["self"]]]],[11,"deref_mut","","",242,[[["self"]]]],[11,"deref_mut","","",244,[[["self"]]]],[11,"deref_mut","","",245,[[["self"]]]],[11,"deref_mut","","",247,[[["self"]]]],[11,"deref_mut","","",248,[[["self"]]]],[11,"deref_mut","","",252,[[["self"]]]],[11,"deref_mut","","",255,[[["self"]]]],[11,"deref_mut","","",257,[[["self"]]]],[11,"deref_mut","","",260,[[["self"]]]],[11,"deref_mut","","",263,[[["self"]]]],[11,"deref_mut","","",264,[[["self"]]]],[11,"deref_mut","","",267,[[["self"]]]],[11,"deref_mut","","",270,[[["self"]]]],[11,"deref_mut","","",275,[[["self"]]]],[11,"deref_mut","","",276,[[["self"]]]],[11,"deref_mut","","",278,[[["self"]]]],[11,"fmt","syn::parse","",300,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn","",301,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",100,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",288,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",289,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn::parse","",300,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn","",301,[[["formatter"],["self"]],["result"]]],[11,"index","syn::punctuated","",294,[[["self"],["usize"]]]],[11,"index_mut","","",294,[[["self"],["usize"]]]],[11,"hash","syn","",100,[[["self"],["h"]]]],[11,"from_iter","syn::punctuated","",294,[[["intoiterator"]],["self"]]],[11,"from_iter","","",294,[[["intoiterator"]],["self"]]],[11,"description","syn","",301,[[["self"]],["str"]]],[11,"to_tokens","syn::token","",180,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",181,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",182,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",183,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",184,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",185,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",186,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",187,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",188,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",189,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",190,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",191,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",192,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",193,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",194,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",195,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",196,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",197,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",198,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",199,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",200,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",201,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",202,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",203,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",204,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",205,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",206,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",207,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",208,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",209,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",210,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",211,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",212,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",213,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",214,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",215,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",216,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",217,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",218,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",219,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",220,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",221,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",222,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",223,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",224,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",225,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",226,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",227,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",228,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",229,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",230,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",231,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",232,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",233,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",234,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",235,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",236,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",237,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",238,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",239,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",240,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",241,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",242,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",243,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",244,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",245,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",246,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",247,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",248,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",249,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",250,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",251,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",252,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",253,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",254,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",255,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",256,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",257,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",258,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",259,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",260,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",261,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",262,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",263,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",264,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",265,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",266,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",267,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",268,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",269,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",270,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",271,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",272,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",273,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",274,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",275,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",276,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",277,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",278,[[["tokenstream"],["self"]]]],[11,"to_tokens","syn","",150,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",151,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",0,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",1,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",2,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",152,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",153,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",6,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",4,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",5,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",3,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",8,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",7,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",9,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",156,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",21,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",14,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",23,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",37,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",13,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",154,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",47,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",19,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",49,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",33,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",24,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",48,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",32,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",30,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",51,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",28,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",34,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",36,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",17,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",18,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",46,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",52,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",25,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",50,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",20,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",15,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",16,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",27,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",157,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",53,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",31,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",40,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",39,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",41,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",22,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",26,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",43,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",35,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",44,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",42,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",29,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",38,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",45,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",12,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",11,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",10,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",158,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",160,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",161,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",56,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",303,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",283,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",304,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",54,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",57,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",62,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",61,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",159,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",55,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",63,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",60,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",59,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",58,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",165,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",167,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",163,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",166,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",164,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",162,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",74,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",87,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",81,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",72,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",75,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",80,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",76,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",85,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",73,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",82,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",86,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",83,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",84,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",77,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",78,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",79,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",97,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",96,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",98,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",94,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",95,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",90,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",92,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",93,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",91,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",68,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",70,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",71,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",69,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",64,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",66,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",67,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",65,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",89,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",88,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",99,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",100,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",168,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",284,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",285,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",286,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",287,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",288,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",289,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",101,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",102,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",106,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",172,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",173,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",107,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",174,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",108,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",176,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",122,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",111,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",120,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",121,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",112,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",117,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",124,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",119,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",123,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",114,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",113,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",118,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",115,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",116,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",175,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",110,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",125,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",109,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",177,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",141,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",128,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",137,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",139,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",140,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",132,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",138,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",127,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",134,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",135,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",129,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",133,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",136,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",130,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",131,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",126,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",146,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",147,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",179,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",178,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",142,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",143,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",144,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",145,[[["tokenstream"],["self"]]]],[11,"to_tokens","syn::punctuated","",294,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",293,[[["tokenstream"],["self"]]]],[11,"new","syn","Creates a new `Ident` with the given `string` as well as…",302,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",302,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",302,[[["self"],["span"]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine…",311,[[["self"],["peek"]],["bool"]]],[11,"error","","Triggers an error at the current position of the parse…",311,[[],["error"]]]],"p":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"Arm"],[3,"FieldValue"],[3,"Label"],[3,"MethodTurbofish"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"Index"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"ForeignItemFn"],[3,"ForeignItemMacro"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[3,"ImplItemConst"],[3,"ImplItemMacro"],[3,"ImplItemMethod"],[3,"ImplItemType"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"Receiver"],[3,"Signature"],[3,"TraitItemConst"],[3,"TraitItemMacro"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[3,"File"],[3,"Lifetime"],[3,"LitBool"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Block"],[3,"Local"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Variadic"],[3,"FieldPat"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatOr"],[3,"PatPath"],[3,"PatRange"],[3,"PatReference"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"GenericMethodArgument"],[4,"RangeLimits"],[4,"Expr"],[4,"Member"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"FnArg"],[4,"ForeignItem"],[4,"ImplItem"],[4,"Item"],[4,"TraitItem"],[4,"UseTree"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"Stmt"],[4,"ReturnType"],[4,"Type"],[4,"Pat"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TypeGenerics"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,"Punctuated"],[8,"Spanned"],[8,"Speculative"],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,"ParseBuffer"],[3,"Error"],[3,"Ident"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"],[3,"Nothing"]]};
searchIndex["syn_flood"] = {"doc":"","i":[[5,"main","syn_flood","",null,[[]]],[5,"initialize_logger","","",null,[[["levelfilter"]]]],[5,"syn_flood_main","","",null,[[["opt"]],[["synflooderror"],["result",["synflooderror"]]]]],[0,"error","","",null,null],[4,"SynFloodError","syn_flood::error","",null,null],[13,"ToSocketAddrs","","",0,null],[13,"NoSocketAddr","","",0,null],[13,"TransportChannel","","",0,null],[13,"NewIpv4Packet","","",0,null],[13,"NewTcpPacket","","",0,null],[13,"SendPacket","","",0,null],[13,"Ipv4DestinationWithIpv6Source","","",0,null],[13,"SystemTime","","",0,null],[0,"option","syn_flood","",null,null],[3,"Opt","syn_flood::option","",null,null],[12,"debug","","Activate debug mode.",1,null],[12,"destination","","Destination address and port.",1,null],[12,"ipv4","","Force using IPv4 address.",1,null],[12,"ipv6","","Force using IPv6 address.",1,null],[12,"buffer_size","","Sets buffer size.",1,null],[12,"ttl","","Sets ttl of IP packets.",1,null],[12,"window_size","","Sets window size of TCP packets.",1,null],[12,"min_port","","Sets minimal port number.",1,null],[12,"max_port","","Sets maximal port number.",1,null],[12,"source_address","","Force using source address.",1,null],[12,"source_port","","Force using source port.",1,null],[12,"output_interval","","Sets output interval(seconds).",1,null],[12,"interval","","Sets output interval(seconds).",1,null],[12,"number","","Number of packets to be sent.",1,null],[12,"time","","Maximal time of sending packets.",1,null],[5,"duration_try_from_str","","",null,[[["str"]],[["parsefloaterror"],["result",["duration","parsefloaterror"]],["duration"]]]],[0,"procedure","syn_flood","",null,null],[5,"resolve_destination","syn_flood::procedure","",null,[[["opt"]],[["socketaddr"],["result",["socketaddr","synflooderror"]],["synflooderror"]]]],[5,"flood_v4","","",null,[[["socketaddrv4"],["opt"]],[["synflooderror"],["result",["synflooderror"]]]]],[5,"flood_v6","","",null,[[["socketaddrv6"],["opt"]],[["synflooderror"],["result",["synflooderror"]]]]],[0,"random","syn_flood","",null,null],[5,"random_global_ipv4_addr","syn_flood::random","",null,[[["r"],["opt"]],["ipv4addr"]]],[5,"random_source_port","","",null,[[["r"],["opt"]],["u16"]]],[0,"runner","syn_flood","",null,null],[3,"RunStatistics","syn_flood::runner","",null,null],[12,"start","","",2,null],[12,"end","","",2,null],[12,"success","","",2,null],[12,"failed","","",2,null],[3,"RunStatisticsBuilder","","",null,null],[12,"start","","",3,null],[12,"success","","",3,null],[12,"failed","","",3,null],[5,"run","","",null,[[["o"],["f"],["opt"]],[["runstatistics"],["synflooderror"],["result",["runstatistics","synflooderror"]]]]],[11,"total","","",2,[[["self"]],["usize"]]],[11,"duration","","",2,[[["self"]],[["synflooderror"],["result",["duration","synflooderror"]],["duration"]]]],[11,"packet_per_second","","",2,[[["self"]],[["synflooderror"],["f64"],["result",["f64","synflooderror"]]]]],[11,"new","","",3,[[],["runstatisticsbuilder"]]],[11,"clear","","",3,[[["self"]]]],[11,"build","","",3,[[],["runstatistics"]]],[11,"total","","",3,[[["self"]],["usize"]]],[11,"from","syn_flood::error","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","syn_flood::option","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","syn_flood::runner","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"clone","","",2,[[["self"]],["runstatistics"]]],[11,"clone","","",3,[[["self"]],["runstatisticsbuilder"]]],[11,"fmt","syn_flood::error","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn_flood::option","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn_flood::runner","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn_flood::error","",0,[[["self"],["formatter"]],["result"]]],[11,"cause","","",0,[[["self"]],[["option",["error"]],["error"]]]],[11,"clap","syn_flood::option","",1,[[],["app"]]],[11,"from_clap","","",1,[[["argmatches"]],["self"]]],[11,"augment_clap","","",1,[[["app"]],["app"]]],[11,"is_subcommand","","",1,[[],["bool"]]]],"p":[[4,"SynFloodError"],[3,"Opt"],[3,"RunStatistics"],[3,"RunStatisticsBuilder"]]};
searchIndex["syn_mid"] = {"doc":"Providing the features between \"full\" and \"derive\" of syn.","i":[[3,"Receiver","syn_mid","The `self` argument of an associated method, whether taken…",null,null],[12,"attrs","","",0,null],[12,"reference","","",0,null],[12,"mutability","","",0,null],[12,"self_token","","",0,null],[3,"PatIdent","","A pattern that binds a new variable: `ref mut binding @…",null,null],[12,"attrs","","",1,null],[12,"by_ref","","",1,null],[12,"mutability","","",1,null],[12,"ident","","",1,null],[3,"PatPath","","A path pattern like `Color::Red`.",null,null],[12,"attrs","","",2,null],[12,"path","","",2,null],[3,"PatReference","","A reference pattern: `&mut var`.",null,null],[12,"attrs","","",3,null],[12,"and_token","","",3,null],[12,"mutability","","",3,null],[12,"pat","","",3,null],[3,"PatStruct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",null,null],[12,"attrs","","",4,null],[12,"path","","",4,null],[12,"brace_token","","",4,null],[12,"fields","","",4,null],[12,"dot2_token","","",4,null],[3,"PatTuple","","A tuple pattern: `(a, b)`.",null,null],[12,"attrs","","",5,null],[12,"paren_token","","",5,null],[12,"elems","","",5,null],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",null,null],[12,"attrs","","",6,null],[12,"path","","",6,null],[12,"pat","","",6,null],[3,"PatType","","A type ascription pattern: `foo: f64`.",null,null],[12,"attrs","","",7,null],[12,"pat","","",7,null],[12,"colon_token","","",7,null],[12,"ty","","",7,null],[3,"PatWild","","A pattern that matches any value: `_`.",null,null],[12,"attrs","","",8,null],[12,"underscore_token","","",8,null],[3,"FieldPat","","A single field in a struct pattern.",null,null],[12,"attrs","","",9,null],[12,"member","","",9,null],[12,"colon_token","","",9,null],[12,"pat","","",9,null],[3,"Block","","A braced block containing Rust statements.",null,null],[12,"brace_token","","",10,null],[12,"stmts","","Statements in a block",10,null],[3,"ItemFn","","A free-standing function: `fn process(n: usize) ->…",null,null],[12,"attrs","","",11,null],[12,"vis","","",11,null],[12,"sig","","",11,null],[12,"block","","",11,null],[3,"Signature","","A function signature in a trait or implementation: `unsafe…",null,null],[12,"constness","","",12,null],[12,"asyncness","","",12,null],[12,"unsafety","","",12,null],[12,"abi","","",12,null],[12,"fn_token","","",12,null],[12,"ident","","",12,null],[12,"generics","","",12,null],[12,"paren_token","","",12,null],[12,"inputs","","",12,null],[12,"variadic","","",12,null],[12,"output","","",12,null],[4,"FnArg","","An argument in a function signature: the `n: usize` in `fn…",null,null],[13,"Receiver","","The `self` argument of an associated method, whether taken…",13,null],[13,"Typed","","A function argument accepted by pattern and type.",13,null],[4,"Pat","","A pattern in a local binding, function signature, match…",null,null],[13,"Ident","","A pattern that binds a new variable: `ref mut binding @…",14,null],[13,"Path","","A path pattern like `Color::Red`.",14,null],[13,"Reference","","A reference pattern: `&mut var`.",14,null],[13,"Struct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",14,null],[13,"Tuple","","A tuple pattern: `(a, b)`.",14,null],[13,"TupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",14,null],[13,"Type","","A type ascription pattern: `foo: f64`.",14,null],[13,"Wild","","A pattern that matches any value: `_`.",14,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"span","","",1,[[["self"]],["span"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"span","","",2,[[["self"]],["span"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"span","","",3,[[["self"]],["span"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"span","","",5,[[["self"]],["span"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"span","","",6,[[["self"]],["span"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"span","","",7,[[["self"]],["span"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"span","","",8,[[["self"]],["span"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"span","","",9,[[["self"]],["span"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"span","","",10,[[["self"]],["span"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"span","","",11,[[["self"]],["span"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"span","","",12,[[["self"]],["span"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"span","","",13,[[["self"]],["span"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"span","","",14,[[["self"]],["span"]]],[11,"from","","",13,[[["receiver"]],["fnarg"]]],[11,"from","","",13,[[["pattype"]],["fnarg"]]],[11,"from","","",14,[[["patident"]],["pat"]]],[11,"from","","",14,[[["patpath"]],["pat"]]],[11,"from","","",14,[[["patreference"]],["pat"]]],[11,"from","","",14,[[["patstruct"]],["pat"]]],[11,"from","","",14,[[["pattuple"]],["pat"]]],[11,"from","","",14,[[["pattuplestruct"]],["pat"]]],[11,"from","","",14,[[["pattype"]],["pat"]]],[11,"from","","",14,[[["patwild"]],["pat"]]],[11,"to_tokens","","",13,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",0,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",14,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",8,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",1,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",4,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",6,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",7,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",2,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",5,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",3,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",9,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",10,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",12,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",11,[[["tokenstream"],["self"]]]],[11,"parse","","",13,[[["parsestream"]],["result"]]],[11,"parse","","",0,[[["parsestream"]],["result"]]],[11,"parse","","",14,[[["parsestream"]],["result"]]],[11,"parse","","",10,[[["parsestream"]],["result"]]],[11,"parse","","",11,[[["parsestream"]],["result"]]]],"p":[[3,"Receiver"],[3,"PatIdent"],[3,"PatPath"],[3,"PatReference"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"FieldPat"],[3,"Block"],[3,"ItemFn"],[3,"Signature"],[4,"FnArg"],[4,"Pat"]]};
searchIndex["termcolor"] = {"doc":"This crate provides a cross platform abstraction for…","i":[[3,"StandardStream","termcolor","Satisfies `io::Write` and `WriteColor`, and supports…",null,null],[3,"StandardStreamLock","","`StandardStreamLock` is a locked reference to a…",null,null],[3,"BufferedStandardStream","","Like `StandardStream`, but does buffered writing.",null,null],[3,"BufferWriter","","Writes colored buffers to stdout or stderr.",null,null],[3,"Buffer","","Write colored text to memory.",null,null],[3,"NoColor","","Satisfies `WriteColor` but ignores all color options.",null,null],[3,"Ansi","","Satisfies `WriteColor` using standard ANSI escape sequences.",null,null],[3,"ColorSpec","","A color specification.",null,null],[3,"ParseColorError","","An error from parsing an invalid color specification.",null,null],[4,"ColorChoice","","ColorChoice represents the color preferences of an end user.",null,null],[13,"Always","","Try very hard to emit colors. This includes emitting ANSI…",0,null],[13,"AlwaysAnsi","","AlwaysAnsi is like Always, except it never tries to use…",0,null],[13,"Auto","","Try to use colors, but don't force the issue. If the…",0,null],[13,"Never","","Never emit colors.",0,null],[4,"Color","","The set of available colors for the terminal…",null,null],[13,"Black","","",1,null],[13,"Blue","","",1,null],[13,"Green","","",1,null],[13,"Red","","",1,null],[13,"Cyan","","",1,null],[13,"Magenta","","",1,null],[13,"Yellow","","",1,null],[13,"White","","",1,null],[13,"Ansi256","","",1,null],[13,"Rgb","","",1,null],[8,"WriteColor","","This trait describes the behavior of writers that support…",null,null],[10,"supports_color","","Returns true if and only if the underlying writer supports…",2,[[["self"]],["bool"]]],[10,"set_color","","Set the color settings of the writer.",2,[[["self"],["colorspec"]],["result"]]],[10,"reset","","Reset the current color settings to their original settings.",2,[[["self"]],["result"]]],[11,"is_synchronous","","Returns true if and only if the underlying writer must…",2,[[["self"]],["bool"]]],[11,"stdout","","Create a new `StandardStream` with the given color…",3,[[["colorchoice"]],["standardstream"]]],[11,"stderr","","Create a new `StandardStream` with the given color…",3,[[["colorchoice"]],["standardstream"]]],[11,"lock","","Lock the underlying writer.",3,[[["self"]],["standardstreamlock"]]],[11,"stdout","","Create a new `BufferedStandardStream` with the given color…",4,[[["colorchoice"]],["bufferedstandardstream"]]],[11,"stderr","","Create a new `BufferedStandardStream` with the given color…",4,[[["colorchoice"]],["bufferedstandardstream"]]],[11,"stdout","","Create a new `BufferWriter` that writes to stdout with the…",5,[[["colorchoice"]],["bufferwriter"]]],[11,"stderr","","Create a new `BufferWriter` that writes to stderr with the…",5,[[["colorchoice"]],["bufferwriter"]]],[11,"separator","","If set, the separator given is printed between buffers. By…",5,[[["self"],["vec",["u8"]],["option",["vec"]]]]],[11,"buffer","","Creates a new `Buffer` with the current color preferences.",5,[[["self"]],["buffer"]]],[11,"print","","Prints the contents of the given buffer.",5,[[["self"],["buffer"]],["result"]]],[11,"no_color","","Create a buffer that drops all color information.",6,[[],["buffer"]]],[11,"ansi","","Create a buffer that uses ANSI escape sequences.",6,[[],["buffer"]]],[11,"is_empty","","Returns true if and only if this buffer is empty.",6,[[["self"]],["bool"]]],[11,"len","","Returns the length of this buffer in bytes.",6,[[["self"]],["usize"]]],[11,"clear","","Clears this buffer.",6,[[["self"]]]],[11,"into_inner","","Consume this buffer and return the underlying raw data.",6,[[],[["vec",["u8"]],["u8"]]]],[11,"as_slice","","Return the underlying data of the buffer.",6,[[["self"]]]],[11,"as_mut_slice","","Return the underlying data of the buffer as a mutable slice.",6,[[["self"]]]],[11,"new","","Create a new writer that satisfies `WriteColor` but drops…",7,[[["w"]],["nocolor"]]],[11,"into_inner","","Consume this `NoColor` value and return the inner writer.",7,[[],["w"]]],[11,"get_ref","","Return a reference to the inner writer.",7,[[["self"]],["w"]]],[11,"get_mut","","Return a mutable reference to the inner writer.",7,[[["self"]],["w"]]],[11,"new","","Create a new writer that satisfies `WriteColor` using…",8,[[["w"]],["ansi"]]],[11,"into_inner","","Consume this `Ansi` value and return the inner writer.",8,[[],["w"]]],[11,"get_ref","","Return a reference to the inner writer.",8,[[["self"]],["w"]]],[11,"get_mut","","Return a mutable reference to the inner writer.",8,[[["self"]],["w"]]],[11,"new","","Create a new color specification that has no colors or…",9,[[],["colorspec"]]],[11,"fg","","Get the foreground color.",9,[[["self"]],[["option",["color"]],["color"]]]],[11,"set_fg","","Set the foreground color.",9,[[["self"],["option",["color"]],["color"]],["colorspec"]]],[11,"bg","","Get the background color.",9,[[["self"]],[["option",["color"]],["color"]]]],[11,"set_bg","","Set the background color.",9,[[["self"],["option",["color"]],["color"]],["colorspec"]]],[11,"bold","","Get whether this is bold or not.",9,[[["self"]],["bool"]]],[11,"set_bold","","Set whether the text is bolded or not.",9,[[["self"],["bool"]],["colorspec"]]],[11,"underline","","Get whether this is underline or not.",9,[[["self"]],["bool"]]],[11,"set_underline","","Set whether the text is underlined or not.",9,[[["self"],["bool"]],["colorspec"]]],[11,"intense","","Get whether this is intense or not.",9,[[["self"]],["bool"]]],[11,"set_intense","","Set whether the text is intense or not.",9,[[["self"],["bool"]],["colorspec"]]],[11,"is_none","","Returns true if this color specification has no colors or…",9,[[["self"]],["bool"]]],[11,"clear","","Clears this color specification so that it has no…",9,[[["self"]]]],[11,"invalid","","Return the string that couldn't be parsed as a valid color.",10,[[["self"]],["str"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"supports_color","","",3,[[["self"]],["bool"]]],[11,"set_color","","",3,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",3,[[["self"]],["result"]]],[11,"is_synchronous","","",3,[[["self"]],["bool"]]],[11,"supports_color","","",11,[[["self"]],["bool"]]],[11,"set_color","","",11,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",11,[[["self"]],["result"]]],[11,"is_synchronous","","",11,[[["self"]],["bool"]]],[11,"supports_color","","",4,[[["self"]],["bool"]]],[11,"set_color","","",4,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",4,[[["self"]],["result"]]],[11,"is_synchronous","","",4,[[["self"]],["bool"]]],[11,"supports_color","","",6,[[["self"]],["bool"]]],[11,"set_color","","",6,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",6,[[["self"]],["result"]]],[11,"is_synchronous","","",6,[[["self"]],["bool"]]],[11,"supports_color","","",7,[[["self"]],["bool"]]],[11,"set_color","","",7,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",7,[[["self"]],["result"]]],[11,"is_synchronous","","",7,[[["self"]],["bool"]]],[11,"supports_color","","",8,[[["self"]],["bool"]]],[11,"set_color","","",8,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",8,[[["self"]],["result"]]],[11,"is_synchronous","","",8,[[["self"]],["bool"]]],[11,"clone","","",0,[[["self"]],["colorchoice"]]],[11,"clone","","",9,[[["self"]],["colorspec"]]],[11,"clone","","",1,[[["self"]],["color"]]],[11,"clone","","",10,[[["self"]],["parsecolorerror"]]],[11,"default","","",9,[[],["colorspec"]]],[11,"eq","","",0,[[["self"],["colorchoice"]],["bool"]]],[11,"eq","","",9,[[["self"],["colorspec"]],["bool"]]],[11,"ne","","",9,[[["self"],["colorspec"]],["bool"]]],[11,"eq","","",1,[[["self"],["color"]],["bool"]]],[11,"ne","","",1,[[["self"],["color"]],["bool"]]],[11,"eq","","",10,[[["self"],["parsecolorerror"]],["bool"]]],[11,"ne","","",10,[[["self"],["parsecolorerror"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"from_str","","",1,[[["str"]],[["parsecolorerror"],["color"],["result",["color","parsecolorerror"]]]]],[11,"description","","",10,[[["self"]],["str"]]],[11,"write","","",3,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",3,[[["self"]],["result"]]],[11,"write","","",11,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",11,[[["self"]],["result"]]],[11,"write","","",4,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",4,[[["self"]],["result"]]],[11,"write","","",6,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",6,[[["self"]],["result"]]],[11,"write","","",7,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",7,[[["self"]],["result"]]],[11,"write","","",8,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",8,[[["self"]],["result"]]]],"p":[[4,"ColorChoice"],[4,"Color"],[8,"WriteColor"],[3,"StandardStream"],[3,"BufferedStandardStream"],[3,"BufferWriter"],[3,"Buffer"],[3,"NoColor"],[3,"Ansi"],[3,"ColorSpec"],[3,"ParseColorError"],[3,"StandardStreamLock"]]};
searchIndex["textwrap"] = {"doc":"`textwrap` provides functions for word wrapping and…","i":[[3,"HyphenSplitter","textwrap","Simple and default way to split words: splitting on…",null,null],[3,"NoHyphenation","","Use this as a [`Wrapper.splitter`] to avoid any kind of…",null,null],[3,"Wrapper","","A Wrapper holds settings for wrapping and filling text.…",null,null],[12,"width","","The width in columns at which the text will be wrapped.",0,null],[12,"initial_indent","","Indentation used for the first line of output.",0,null],[12,"subsequent_indent","","Indentation used for subsequent lines of output.",0,null],[12,"break_words","","Allow long words to be broken if they cannot fit on a…",0,null],[12,"splitter","","The method for splitting words. If the `hyphenation`…",0,null],[3,"IntoWrapIter","","An iterator over the lines of the input string which owns…",null,null],[3,"WrapIter","","An iterator over the lines of the input string which…",null,null],[5,"dedent","","Removes common leading whitespace from each line.",null,[[["str"]],["string"]]],[5,"indent","","Add prefix to each non-empty line.",null,[[["str"]],["string"]]],[5,"fill","","Fill a line of text at `width` characters. Strings are…",null,[[["str"],["usize"]],["string"]]],[5,"wrap","","Wrap a line of text at `width` characters. Strings are…",null,[[["str"],["usize"]],[["vec",["cow"]],["cow",["str"]]]]],[5,"wrap_iter","","Lazily wrap a line of text at `width` characters. Strings…",null,[[["str"],["usize"]],[["hyphensplitter"],["intowrapiter",["hyphensplitter"]]]]],[8,"WordSplitter","","An interface for splitting words.",null,null],[10,"split","","Return all possible splits of word. Each split is a triple…",1,[[["self"],["str"]],["vec"]]],[11,"new","","Create a new Wrapper for wrapping at the specified width.…",0,[[["usize"]],[["wrapper",["hyphensplitter"]],["hyphensplitter"]]]],[11,"with_splitter","","Use the given [`WordSplitter`] to create a new Wrapper for…",0,[[["s"],["usize"]],["wrapper"]]],[11,"initial_indent","","Change [`self.initial_indent`]. The initial indentation is…",0,[[["str"]],["wrapper"]]],[11,"subsequent_indent","","Change [`self.subsequent_indent`]. The subsequent…",0,[[["str"]],["wrapper"]]],[11,"break_words","","Change [`self.break_words`]. This controls if words longer…",0,[[["bool"]],["wrapper"]]],[11,"fill","","Fill a line of text at `self.width` characters. Strings…",0,[[["str"],["self"]],["string"]]],[11,"wrap","","Wrap a line of text at `self.width` characters. Strings…",0,[[["str"],["self"]],[["cow",["str"]],["vec",["cow"]]]]],[11,"wrap_iter","","Lazily wrap a line of text at `self.width` characters.…",0,[[["str"],["self"]],["wrapiter"]]],[11,"into_wrap_iter","","Lazily wrap a line of text at `self.width` characters.…",0,[[["str"]],["intowrapiter"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"split","","",3,[[["self"],["str"]],["vec"]]],[11,"split","","",2,[[["self"],["str"]],["vec"]]],[11,"next","","",4,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"next","","",5,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"clone","","",3,[[["self"]],["nohyphenation"]]],[11,"clone","","",2,[[["self"]],["hyphensplitter"]]],[11,"clone","","",0,[[["self"]],["wrapper"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Wrapper"],[8,"WordSplitter"],[3,"HyphenSplitter"],[3,"NoHyphenation"],[3,"IntoWrapIter"],[3,"WrapIter"]]};
searchIndex["thread_local"] = {"doc":"Per-object thread-local storage","i":[[3,"ThreadLocal","thread_local","Thread-local variable wrapper",null,null],[3,"IterMut","","Mutable iterator over the contents of a `ThreadLocal`.",null,null],[3,"IntoIter","","An iterator that moves out of a `ThreadLocal`.",null,null],[3,"CachedThreadLocal","","Wrapper around `ThreadLocal` which adds a fast path for a…",null,null],[6,"CachedIterMut","","Mutable iterator over the contents of a `CachedThreadLocal`.",null,null],[6,"CachedIntoIter","","An iterator that moves out of a `CachedThreadLocal`.",null,null],[11,"new","","Creates a new empty `ThreadLocal`.",0,[[],["threadlocal"]]],[11,"get","","Returns the element for the current thread, if it exists.",0,[[["self"]],[["option"],["t"]]]],[11,"get_or","","Returns the element for the current thread, or creates it…",0,[[["self"],["f"]],["t"]]],[11,"get_or_try","","Returns the element for the current thread, or creates it…",0,[[["self"],["f"]],[["result"],["t"]]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all…",0,[[["self"]],["itermut"]]],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`,…",0,[[["self"]]]],[11,"get_default","","Returns the element for the current thread, or creates a…",0,[[["self"]],["t"]]],[11,"new","","Creates a new empty `CachedThreadLocal`.",1,[[],["cachedthreadlocal"]]],[11,"get","","Returns the element for the current thread, if it exists.",1,[[["self"]],[["option"],["t"]]]],[11,"get_or","","Returns the element for the current thread, or creates it…",1,[[["self"],["f"]],["t"]]],[11,"get_or_try","","Returns the element for the current thread, or creates it…",1,[[["self"],["f"]],[["result"],["t"]]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all…",1,[[["self"]],["cacheditermut"]]],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`,…",1,[[["self"]]]],[11,"get_default","","Returns the element for the current thread, or creates a…",1,[[["self"]],["t"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"drop","","",0,[[["self"]]]],[11,"into_iter","","",0,[[],["intoiter"]]],[11,"into_iter","","",1,[[],["cachedintoiter"]]],[11,"next","","",2,[[["self"]],[["option",["box"]],["box"]]]],[11,"size_hint","","",2,[[["self"]]]],[11,"next","","",3,[[["self"]],[["option",["box"]],["box"]]]],[11,"size_hint","","",3,[[["self"]]]],[11,"default","","",0,[[],["threadlocal"]]],[11,"default","","",1,[[],["cachedthreadlocal"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]]],"p":[[3,"ThreadLocal"],[3,"CachedThreadLocal"],[3,"IterMut"],[3,"IntoIter"]]};
searchIndex["unicode_segmentation"] = {"doc":"Iterators which split strings on Grapheme Cluster, Word or…","i":[[3,"Graphemes","unicode_segmentation","External iterator for a string's grapheme clusters.",null,null],[3,"GraphemeIndices","","External iterator for grapheme clusters and byte offsets.",null,null],[3,"GraphemeCursor","","Cursor-based segmenter for grapheme clusters.",null,null],[3,"UWordBounds","","External iterator for a string's word boundaries.",null,null],[3,"UWordBoundIndices","","External iterator for word boundaries and byte offsets.",null,null],[3,"UnicodeWords","","An iterator over the substrings of a string which, after…",null,null],[3,"USentenceBounds","","External iterator for a string's sentence boundaries.",null,null],[3,"USentenceBoundIndices","","External iterator for sentence boundaries and byte offsets.",null,null],[3,"UnicodeSentences","","An iterator over the substrings of a string which, after…",null,null],[4,"GraphemeIncomplete","","An error return indicating that not enough content was…",null,null],[13,"PreContext","","More pre-context is needed. The caller should call…",0,null],[13,"PrevChunk","","When requesting `prev_boundary`, the cursor is moving past…",0,null],[13,"NextChunk","","When requesting `next_boundary`, the cursor is moving past…",0,null],[13,"InvalidOffset","","An error returned when the chunk given does not contain…",0,null],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",1,[[["self"]],["str"]]],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",2,[[["self"]],["str"]]],[11,"new","","Create a new cursor. The string and initial offset are…",3,[[["usize"],["bool"]],["graphemecursor"]]],[11,"set_cursor","","Set the cursor to a new location in the same string.",3,[[["self"],["usize"]]]],[11,"cur_cursor","","The current offset of the cursor. Equal to the last value…",3,[[["self"]],["usize"]]],[11,"provide_context","","Provide additional pre-context when it is needed to decide…",3,[[["str"],["self"],["usize"]]]],[11,"is_boundary","","Determine whether the current cursor location is a…",3,[[["str"],["self"],["usize"]],[["result",["bool","graphemeincomplete"]],["graphemeincomplete"],["bool"]]]],[11,"next_boundary","","Find the next boundary after the current cursor position.…",3,[[["str"],["self"],["usize"]],[["result",["option","graphemeincomplete"]],["option",["usize"]],["graphemeincomplete"]]]],[11,"prev_boundary","","Find the previous boundary after the current cursor…",3,[[["str"],["self"],["usize"]],[["result",["option","graphemeincomplete"]],["option",["usize"]],["graphemeincomplete"]]]],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",4,[[["self"]],["str"]]],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",5,[[["self"]],["str"]]],[17,"UNICODE_VERSION","","The version of Unicode that this version of…",null,null],[8,"UnicodeSegmentation","","Methods for segmenting strings according to Unicode…",null,null],[10,"graphemes","","Returns an iterator over the [grapheme…",6,[[["self"],["bool"]],["graphemes"]]],[10,"grapheme_indices","","Returns an iterator over the grapheme clusters of `self`…",6,[[["self"],["bool"]],["graphemeindices"]]],[10,"unicode_words","","Returns an iterator over the words of `self`, separated on…",6,[[["self"]],["unicodewords"]]],[10,"split_word_bounds","","Returns an iterator over substrings of `self` separated on…",6,[[["self"]],["uwordbounds"]]],[10,"split_word_bound_indices","","Returns an iterator over substrings of `self`, split on…",6,[[["self"]],["uwordboundindices"]]],[10,"unicode_sentences","","Returns an iterator over substrings of `self` separated on…",6,[[["self"]],["unicodesentences"]]],[10,"split_sentence_bounds","","Returns an iterator over substrings of `self` separated on…",6,[[["self"]],["usentencebounds"]]],[10,"split_sentence_bound_indices","","Returns an iterator over substrings of `self`, split on…",6,[[["self"]],["usentenceboundindices"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"eq","","",0,[[["graphemeincomplete"],["self"]],["bool"]]],[11,"ne","","",0,[[["graphemeincomplete"],["self"]],["bool"]]],[11,"next","","",1,[[["self"]],["option"]]],[11,"size_hint","","",1,[[["self"]]]],[11,"size_hint","","",2,[[["self"]]]],[11,"next","","",2,[[["self"]],[["str"],["option",["str"]]]]],[11,"next","","",7,[[["self"]],[["str"],["option",["str"]]]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,[[["self"]]]],[11,"size_hint","","",5,[[["self"]]]],[11,"next","","",5,[[["self"]],[["str"],["option",["str"]]]]],[11,"next","","",10,[[["self"]],[["str"],["option",["str"]]]]],[11,"size_hint","","",8,[[["self"]]]],[11,"next","","",8,[[["self"]],[["str"],["option",["str"]]]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,[[["self"]]]],[11,"next_back","","",1,[[["self"]],["option"]]],[11,"next_back","","",2,[[["self"]],[["str"],["option",["str"]]]]],[11,"next_back","","",7,[[["self"]],[["str"],["option",["str"]]]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],[["str"],["option",["str"]]]]],[11,"clone","","",1,[[["self"]],["graphemeindices"]]],[11,"clone","","",2,[[["self"]],["graphemes"]]],[11,"clone","","",3,[[["self"]],["graphemecursor"]]],[11,"clone","","",5,[[["self"]],["uwordbounds"]]],[11,"clone","","",4,[[["self"]],["uwordboundindices"]]],[11,"clone","","",10,[[["self"]],["unicodesentences"]]],[11,"clone","","",8,[[["self"]],["usentencebounds"]]],[11,"clone","","",9,[[["self"]],["usentenceboundindices"]]]],"p":[[4,"GraphemeIncomplete"],[3,"GraphemeIndices"],[3,"Graphemes"],[3,"GraphemeCursor"],[3,"UWordBoundIndices"],[3,"UWordBounds"],[8,"UnicodeSegmentation"],[3,"UnicodeWords"],[3,"USentenceBounds"],[3,"USentenceBoundIndices"],[3,"UnicodeSentences"]]};
searchIndex["unicode_width"] = {"doc":"Determine displayed width of `char` and `str` types…","i":[[17,"UNICODE_VERSION","unicode_width","The version of Unicode that this version of unicode-width…",null,null],[8,"UnicodeWidthChar","","Methods for determining displayed width of Unicode…",null,null],[10,"width","","Returns the character's displayed width in columns, or…",0,[[],[["option",["usize"]],["usize"]]]],[10,"width_cjk","","Returns the character's displayed width in columns, or…",0,[[],[["option",["usize"]],["usize"]]]],[8,"UnicodeWidthStr","","Methods for determining displayed width of Unicode strings.",null,null],[10,"width","","Returns the string's displayed width in columns.",1,[[["self"]],["usize"]]],[10,"width_cjk","","Returns the string's displayed width in columns.",1,[[["self"]],["usize"]]]],"p":[[8,"UnicodeWidthChar"],[8,"UnicodeWidthStr"]]};
searchIndex["unicode_xid"] = {"doc":"Determine if a `char` is a valid identifier for a parser…","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid…",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the…",0,[[],["bool"]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the…",0,[[],["bool"]]]],"p":[[8,"UnicodeXID"]]};
searchIndex["vec_map"] = {"doc":"A simple map based on a vector for small integer keys.…","i":[[3,"VecMap","vec_map","A map optimized for small integer keys.",null,null],[3,"VacantEntry","","A vacant Entry.",null,null],[3,"OccupiedEntry","","An occupied Entry.",null,null],[3,"Iter","","An iterator over the key-value pairs of a map.",null,null],[3,"IterMut","","An iterator over the key-value pairs of a map, with the…",null,null],[3,"Keys","","An iterator over the keys of a map.",null,null],[3,"Values","","An iterator over the values of a map.",null,null],[3,"ValuesMut","","An iterator over the values of a map.",null,null],[3,"IntoIter","","A consuming iterator over the key-value pairs of a map.",null,null],[3,"Drain","","A draining iterator over the key-value pairs of a map.",null,null],[4,"Entry","","A view into a single entry in a map, which may either be…",null,null],[13,"Vacant","","A vacant Entry",0,null],[13,"Occupied","","An occupied Entry",0,null],[11,"new","","Creates an empty `VecMap`.",1,[[],["self"]]],[11,"with_capacity","","Creates an empty `VecMap` with space for at least…",1,[[["usize"]],["self"]]],[11,"capacity","","Returns the number of elements the `VecMap` can hold…",1,[[["self"]],["usize"]]],[11,"reserve_len","","Reserves capacity for the given `VecMap` to contain `len`…",1,[[["self"],["usize"]]]],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `VecMap` to…",1,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Trims the `VecMap` of any excess capacity.",1,[[["self"]]]],[11,"keys","","Returns an iterator visiting all keys in ascending order…",1,[[["self"]],["keys"]]],[11,"values","","Returns an iterator visiting all values in ascending order…",1,[[["self"]],["values"]]],[11,"values_mut","","Returns an iterator visiting all values in ascending order…",1,[[["self"]],["valuesmut"]]],[11,"iter","","Returns an iterator visiting all key-value pairs in…",1,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator visiting all key-value pairs in…",1,[[["self"]],["itermut"]]],[11,"append","","Moves all elements from `other` into the map while…",1,[[["self"]]]],[11,"split_off","","Splits the collection into two at the given key.",1,[[["self"],["usize"]],["self"]]],[11,"drain","","Returns an iterator visiting all key-value pairs in…",1,[[["self"]],["drain"]]],[11,"len","","Returns the number of elements in the map.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",1,[[["self"]],["bool"]]],[11,"clear","","Clears the map, removing all key-value pairs.",1,[[["self"]]]],[11,"get","","Returns a reference to the value corresponding to the key.",1,[[["self"],["usize"]],[["v"],["option"]]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",1,[[["self"],["usize"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",1,[[["self"],["usize"]],[["option"],["v"]]]],[11,"insert","","Inserts a key-value pair into the map. If the key already…",1,[[["self"],["usize"],["v"]],["option"]]],[11,"remove","","Removes a key from the map, returning the value at the key…",1,[[["self"],["usize"]],["option"]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",1,[[["self"],["usize"]],["entry"]]],[11,"retain","","Retains only the elements specified by the predicate.",1,[[["self"],["f"]]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",0,[[["v"]],["v"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",0,[[["fnonce"]],["v"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key,…",2,[[["v"]],["v"]]],[11,"get","","Gets a reference to the value in the entry.",3,[[["self"]],["v"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",3,[[["self"]],["v"]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",3,[[],["v"]]],[11,"insert","","Sets the value of the entry with the OccupiedEntry's key,…",3,[[["self"],["v"]],["v"]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",3,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"next_back","","",10,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"next_back","","",7,[[["self"]],[["v"],["option"]]]],[11,"next_back","","",8,[[["self"]],[["option"],["v"]]]],[11,"next_back","","",9,[[["self"]],["option"]]],[11,"extend","","",1,[[["intoiterator"],["self"]]]],[11,"extend","","",1,[[["intoiterator"],["self"]]]],[11,"into_iter","","Returns an iterator visiting all key-value pairs in…",1,[[],["intoiter"]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,[[["self"]]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,[[["self"]]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,[[["self"]]]],[11,"next","","",6,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",6,[[["self"]]]],[11,"next","","",7,[[["self"]],[["v"],["option"]]]],[11,"size_hint","","",7,[[["self"]]]],[11,"next","","",8,[[["self"]],[["option"],["v"]]]],[11,"size_hint","","",8,[[["self"]]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,[[["self"]]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone_from","","",1,[[["self"],["self"]]]],[11,"clone","","",4,[[["self"]],["iter"]]],[11,"clone","","",6,[[["self"]],["keys"]]],[11,"clone","","",7,[[["self"]],["values"]]],[11,"default","","",1,[[],["self"]]],[11,"cmp","","",1,[[["self"]],["ordering"]]],[11,"eq","","",1,[[["self"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"index","","",1,[[["self"],["usize"]],["v"]]],[11,"index","","",1,[[["self"],["usize"]],["v"]]],[11,"index_mut","","",1,[[["self"],["usize"]],["v"]]],[11,"index_mut","","",1,[[["self"],["usize"]],["v"]]],[11,"hash","","",1,[[["self"],["h"]]]],[11,"from_iter","","",1,[[["intoiterator"]],["self"]]]],"p":[[4,"Entry"],[3,"VecMap"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"IntoIter"],[3,"Drain"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);